#[acmd_script( agent = "packun", script = "game_specialairnshootf" , category = ACMD_GAME , low_priority)]
unsafe fn game_specialairnshootf (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		SEARCH(fighter, 0, 0, Hash40::new("top"), 4.0, 0.0, 7.0, 0.0, 0.0, 8.0, 0.0, *COLLISION_KIND_MASK_ATTACK, *HIT_STATUS_MASK_ALL, 1, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, true);
	}
	if WorkModule::get_int(fighter.module_accessor, **FIGHTER_INSTANCE_WORK_ID_INT_KIND) == *FIGHTER_KIND_KIRBY {
		if is_excute(fighter) {
			SEARCH(fighter, 0, 0, Hash40::new("top"), 4.0, 0.0, 3.0, 0.0, 0.0, 3.0, 0.0, *COLLISION_KIND_MASK_ATTACK, *HIT_STATUS_MASK_ALL, 1, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, true);
		}
	}
	frame(lua_state, 1.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_PREVIOUS_WAIT);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		WorkModule::get_float(fighter.module_accessor, *FIGHTER_PACKUN_STATUS_SPECIAL_N_WORK_FLOAT_SHOOT_START_SPIKEBALL_DISTANCE);
		PostureModule::scale(fighter.module_accessor, 0);
		0x1646b0(0, 30);
		if(0x1646b0()){;
			FT_MOTION_RATE(fighter, 0.6);
			frame(lua_state, 8.0);
			if is_excute(fighter) {
				ArticleModule::shoot_exist(fighter.module_accessor, *FIGHTER_PACKUN_GENERATE_ARTICLE_SPIKEBALL, *ARTICLE_OPE_TARGET_ALL, false);
			}
			frame(lua_state, 10.0);
			if is_excute(fighter) {
				search(*MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR, 0);
			}
			frame(lua_state, 11.0);
			FT_MOTION_RATE(fighter, 2);
			frame(lua_state, 12.0);
			FT_MOTION_RATE(fighter, 0.5);
			if is_excute(fighter) {
				WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
			}
			frame(lua_state, 19.0);
			FT_MOTION_RATE(fighter, 1.4);
			if is_excute(fighter) {
				WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
			}
			else{;
			FT_MOTION_RATE(fighter, 1);
			frame(lua_state, 10.0);
			if is_excute(fighter) {
				search(*MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR, 0);
			}
			frame(lua_state, 11.0);
			FT_MOTION_RATE(fighter, 3);
			if is_excute(fighter) {
				ArticleModule::shoot_exist(fighter.module_accessor, *FIGHTER_PACKUN_GENERATE_ARTICLE_SPIKEBALL, *ARTICLE_OPE_TARGET_ALL, false);
			}
			frame(lua_state, 12.0);
			FT_MOTION_RATE(fighter, 1);
			if is_excute(fighter) {
				WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
			}
			frame(lua_state, 19.0);
			FT_MOTION_RATE(fighter, 1.1);
			if is_excute(fighter) {
				WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
			}
		}
		frame(lua_state, 31.0);
		FT_MOTION_RATE(fighter, 1);
	}
}
WorkModule::get_float(fighter.module_accessor, 0, *FIGHTER_PACKUN_STATUS_SPECIAL_N_WORK_FLOAT_SHOOT_START_SPIKEBALL_DISTANCE);
PostureModule::scale(fighter.module_accessor, 0);
0x1646b0(0, 40);
if(0x1646b0()){;
	FT_MOTION_RATE(fighter, 0.7);
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		ArticleModule::shoot_exist(fighter.module_accessor, *FIGHTER_PACKUN_GENERATE_ARTICLE_SPIKEBALL, *ARTICLE_OPE_TARGET_ALL, false);
	}
}
frame(lua_state, 10.0);
if is_excute(fighter) {
	search(*MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR, 0);
}
frame(lua_state, 11.0);
FT_MOTION_RATE(fighter, 3);
frame(lua_state, 12.0);
FT_MOTION_RATE(fighter, 0.7);
if is_excute(fighter) {
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
}
frame(lua_state, 19.0);
FT_MOTION_RATE(fighter, 1.3);
if is_excute(fighter) {
	WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
}
else{;
WorkModule::get_float(fighter.module_accessor, *FIGHTER_PACKUN_STATUS_SPECIAL_N_WORK_FLOAT_SHOOT_START_SPIKEBALL_DISTANCE);
PostureModule::scale(fighter.module_accessor, 0);
0x1646b0(0, 50);
if(0x1646b0()){;
	FT_MOTION_RATE(fighter, 0.9);
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		search(*MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR, 0);
	}
	frame(lua_state, 11.0);
	FT_MOTION_RATE(fighter, 4);
	if is_excute(fighter) {
		ArticleModule::shoot_exist(fighter.module_accessor, *FIGHTER_PACKUN_GENERATE_ARTICLE_SPIKEBALL, *ARTICLE_OPE_TARGET_ALL, false);
	}
	frame(lua_state, 12.0);
	FT_MOTION_RATE(fighter, 0.8);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
	}
	frame(lua_state, 19.0);
	FT_MOTION_RATE(fighter, 1.2);
	if is_excute(fighter) {
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
	}
	else{;
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_PACKUN_STATUS_SPECIAL_N_WORK_FLOAT_SHOOT_START_SPIKEBALL_DISTANCE);
	PostureModule::scale(fighter.module_accessor, 0);
	0x1646b0(0, 100);
	if(0x1646b0()){;
		FT_MOTION_RATE(fighter, 1.2);
		frame(lua_state, 10.0);
		if is_excute(fighter) {
			search(*MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR, 0);
		}
		frame(lua_state, 11.0);
		FT_MOTION_RATE(fighter, 5);
		if is_excute(fighter) {
			ArticleModule::shoot_exist(fighter.module_accessor, *FIGHTER_PACKUN_GENERATE_ARTICLE_SPIKEBALL, *ARTICLE_OPE_TARGET_ALL, false);
		}
		frame(lua_state, 12.0);
		FT_MOTION_RATE(fighter, 1);
		if is_excute(fighter) {
			WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
		}
		frame(lua_state, 19.0);
		FT_MOTION_RATE(fighter, 1.1);
		if is_excute(fighter) {
			WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
		}
		else{;
		FT_MOTION_RATE(fighter, 1);
		frame(lua_state, 10.0);
		if is_excute(fighter) {
			search(*MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR, 0);
		}
	}
}
}
}
}
frame(lua_state, 11.0);
FT_MOTION_RATE(fighter, 5);
if is_excute(fighter) {
ArticleModule::shoot_exist(fighter.module_accessor, *FIGHTER_PACKUN_GENERATE_ARTICLE_SPIKEBALL, *ARTICLE_OPE_TARGET_ALL, false);
}
frame(lua_state, 12.0);
FT_MOTION_RATE(fighter, 1);
if is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
}
frame(lua_state, 19.0);
FT_MOTION_RATE(fighter, 1);
WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PACKUN_STATUS_SPECIAL_N_FLAG_SHOOT_BLOW_SPIKEBALL);
}