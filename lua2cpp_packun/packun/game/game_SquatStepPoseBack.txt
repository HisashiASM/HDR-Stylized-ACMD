#[acmd_script( agent = "packun", script = "game_squatstepposeback" , category = ACMD_GAME , low_priority)]
unsafe fn game_squatstepposeback (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_PACKUN_STATUS_SQUAT_TREAD_DAMAGE_FLAG_JUMP_MINI);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		FT_MOTION_RATE(fighter, 0.55);
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		HIT_NODE(fighter, Hash40::new("mouth"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("lipu3"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("lipd3"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("neck8"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("neck6"), *HIT_STATUS_XLU);
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("mouth"), 4.0, 90, 80, 0, 95, 7.0, 3.0, 0.0, 0.0, Some(7.0), Some(0.0), Some(0.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_BITE);
	}
	wait(lua_state, 2.0);
	FT_MOTION_RATE(fighter, 1);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
		HIT_NODE(fighter, Hash40::new("mouth"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("lipu3"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("lipd3"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("neck8"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("neck6"), *HIT_STATUS_NORMAL);
	}
}