#[acmd_script( agent = "packun", script = "effect_attackhi3" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackhi3 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){;
		frame(lua_state, 8.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_01"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
		}
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_01"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_01"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_01"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_01"), Hash40::new("top"), 0, 0, 0, 180, -110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_01"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_01"), Hash40::new("top"), 0, 0, 0, 0, 120, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 100, 90, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_01"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){;
		frame(lua_state, 8.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_02"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
		}
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_02"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_02"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_02"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_02"), Hash40::new("top"), 0, 0, 0, 180, -110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_02"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_02"), Hash40::new("top"), 0, 0, 0, 0, 120, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 100, 90, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_02"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){;
		frame(lua_state, 8.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_03"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
		}
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_03"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_03"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_03"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_03"), Hash40::new("top"), 0, 0, 0, 180, -110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_03"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_03"), Hash40::new("top"), 0, 0, 0, 0, 120, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 100, 90, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_03"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){;
		frame(lua_state, 8.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_04"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
		}
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_04"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_04"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_04"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_04"), Hash40::new("top"), 0, 0, 0, 180, -110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_04"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_04"), Hash40::new("top"), 0, 0, 0, 0, 120, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 100, 90, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_04"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){;
		frame(lua_state, 8.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_05"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
		}
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_05"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_05"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_05"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_05"), Hash40::new("top"), 0, 0, 0, 180, -110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_05"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_05"), Hash40::new("top"), 0, 0, 0, 0, 120, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 100, 90, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_05"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){;
		frame(lua_state, 8.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_06"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
		}
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_06"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_06"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_06"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_06"), Hash40::new("top"), 0, 0, 0, 180, -110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_06"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_06"), Hash40::new("top"), 0, 0, 0, 0, 120, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 100, 90, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_06"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){;
		frame(lua_state, 8.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_07"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
		}
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_07"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_07"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_07"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_07"), Hash40::new("top"), 0, 0, 0, 180, -110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_07"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_07"), Hash40::new("top"), 0, 0, 0, 0, 120, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 100, 90, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_07"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){;
		frame(lua_state, 8.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_08"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
			EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
		}
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_08"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_08"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 110, 90, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_08"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_08"), Hash40::new("top"), 0, 0, 0, 180, -110, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 180, -100, 90, 1, true);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_08"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_trace_08"), Hash40::new("top"), 0, 0, 0, 0, 120, 90, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("packun_atk_hi_wind"), Hash40::new("top"), 0, 0, 0, 0, 100, 90, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_trace_08"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("packun_atk_hi_wind"), true, true);
	}
}