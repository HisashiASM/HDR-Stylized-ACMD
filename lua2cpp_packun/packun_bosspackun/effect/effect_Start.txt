#[acmd_script( agent = "packun_bosspackun", script = "effect_start" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_start (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("bg_packun_final2"), false);
		EffectModule::req_screen(fighter.module_accessor);
		BURN_COLOR(fighter, 4, 1.6, 8, 0.6);
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x1646b0(0, 0)){;
		if is_excute(fighter) {
			EFFECT(fighter, Hash40::new("packun_final_start"), Hash40::new("top"), -15, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, true);
		}
		else{;
		if is_excute(fighter) {
			EFFECT(fighter, Hash40::new("packun_final_start"), Hash40::new("top"), 15, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
		}
	}
}
if is_excute(fighter) {
	EFFECT_FOLLOW(fighter, Hash40::new("packun_final_iron_aura"), Hash40::new("ironr2"), 13, 0, 0, 0, 0, 0, 1, false);
	EFFECT_FOLLOW(fighter, Hash40::new("packun_final_iron_aura"), Hash40::new("ironl2"), 13, 0, 0, 0, 0, 0, 1, false);
}
frame(lua_state, 12.0);
if is_excute(fighter) {
	BURN_COLOR_FRAME(fighter, 12, 1, 1, 1, 0);
}
frame(lua_state, 24.0);
if is_excute(fighter) {
	BURN_COLOR_NORMAL(fighter);
}
}