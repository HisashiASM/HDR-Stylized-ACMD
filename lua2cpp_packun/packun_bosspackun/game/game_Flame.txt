#[acmd_script( agent = "packun_bosspackun", script = "game_flame" , category = ACMD_GAME , low_priority)]
unsafe fn game_flame (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 5.0, 361, 100, 0, 0, 0.3, 1.0, *ATTACK_LR_CHECK_F, 0.0, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
	}
	frame(lua_state, 1.0);
	WorkModule::is_flag(fighter.module_accessor, *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_HOP_HIGH);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		if is_excute(fighter) {
			ATTACK(fighter, 4, 1, Hash40::new("top"), 5.0, 60, 100, 130, 0, 6.0, 0.0, 5.0, -15.0, Some(0.0), Some(5.0), Some(-5.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_BODY);
			ATTACK(fighter, 5, 1, Hash40::new("top"), 5.0, 60, 100, 130, 0, 6.0, 0.0, 5.0, 5.0, Some(0.0), Some(5.0), Some(15.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_BODY);
			AttackModule::set_final_finish_cut_in(fighter.module_accessor, 4, true, true, -1, false);
			AttackModule::set_final_finish_cut_in(fighter.module_accessor, 5, true, true, -1, false);
		}
	}
	frame(0, 4);
	if is_excute(fighter) {
		AttackModule::clear(fighter.module_accessor, /*ID*/ 4);
		AttackModule::clear(fighter.module_accessor, /*ID*/ 5);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		ATTACK(fighter, 2, 0, Hash40::new("top"), 3.0, 45, 40, 0, 30, 9.0, 0.0, 42.0, 42.0, None, None, None, 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 3, true, true, -1, false);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		ATTACK(fighter, 2, 0, Hash40::new("top"), 3.0, 45, 40, 0, 30, 9.0, 0.0, 42.0, 42.0, Some(0.0), Some(30.0), Some(70.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 2, true, true, -1, false);
	}
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_LEFT);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 25.0);
	if is_excute(fighter) {
		ATTACK(fighter, 2, 0, Hash40::new("top"), 3.0, 45, 40, 0, 30, 9.0, 0.0, 42.0, 42.0, Some(0.0), Some(16.0), Some(94.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 2, true, true, -1, false);
	}
	frame(lua_state, 29.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_LEFT);
	}
	frame(lua_state, 32.0);
	if is_excute(fighter) {
		ATTACK(fighter, 2, 0, Hash40::new("top"), 3.0, 45, 40, 0, 30, 12.0, 0.0, 42.0, 42.0, Some(0.0), Some(10.0), Some(121.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 2, true, true, -1, false);
	}
	frame(lua_state, 34.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_LEFT);
	}
	frame(lua_state, 39.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_LEFT);
		ATTACK(fighter, 2, 0, Hash40::new("top"), 3.0, 45, 40, 0, 30, 14.0, 0.0, 42.0, 42.0, Some(0.0), Some(9.0), Some(137.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 2, true, true, -1, false);
	}
	frame(lua_state, 44.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_LEFT);
	}
	frame(lua_state, 43.0);
	if is_excute(fighter) {
		AttackModule::clear(fighter.module_accessor, /*ID*/ 2);
		ATTACK(fighter, 2, 0, Hash40::new("top"), 3.0, 45, 40, 0, 20, 14.0, 0.0, 42.0, 50.0, Some(0.0), Some(9.0), Some(137.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 2, true, true, -1, false);
	}
	frame(lua_state, 45.0);
	if is_excute(fighter) {
		AttackModule::clear(fighter.module_accessor, /*ID*/ 2);
	}
	frame(lua_state, 51.0);
	if is_excute(fighter) {
		ATTACK(fighter, 3, 1, Hash40::new("top"), 3.0, 45, 40, 0, 30, 9.0, 0.0, 45.0, -30.0, None, None, None, 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 3, true, true, -1, false);
	}
	frame(lua_state, 53.0);
	if is_excute(fighter) {
		ATTACK(fighter, 3, 1, Hash40::new("top"), 3.0, 45, 40, 0, 30, 9.0, 0.0, 42.0, -30.0, Some(0.0), Some(30.0), Some(-70.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 3, true, true, -1, false);
	}
	frame(lua_state, 54.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_RIGHT);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 58.0);
	if is_excute(fighter) {
		ATTACK(fighter, 3, 1, Hash40::new("top"), 3.0, 45, 40, 0, 30, 9.0, 0.0, 42.0, -30.0, Some(0.0), Some(14.0), Some(-94.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 3, true, true, -1, false);
	}
	frame(lua_state, 59.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_RIGHT);
	}
	frame(lua_state, 64.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_RIGHT);
	}
	frame(lua_state, 65.0);
	if is_excute(fighter) {
		ATTACK(fighter, 3, 1, Hash40::new("top"), 3.0, 45, 40, 0, 30, 12.0, 0.0, 37.0, -43.0, Some(0.0), Some(2.0), Some(-119.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 3, true, true, -1, false);
	}
	frame(lua_state, 69.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_RIGHT);
	}
	frame(lua_state, 72.0);
	if is_excute(fighter) {
		ATTACK(fighter, 3, 1, Hash40::new("top"), 3.0, 45, 40, 0, 30, 14.0, 0.0, 38.0, -45.0, Some(0.0), Some(-1.0), Some(-123.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 3, true, true, -1, false);
	}
	frame(lua_state, 74.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_FLAME_DAMAGE_RIGHT);
	}
	frame(lua_state, 76.0);
	if is_excute(fighter) {
		AttackModule::clear(fighter.module_accessor, /*ID*/ 3);
		ATTACK(fighter, 3, 1, Hash40::new("top"), 3.0, 45, 40, 0, 20, 14.0, 0.0, 37.0, -50.0, Some(0.0), Some(-1.0), Some(-123.0), 0.3, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 8, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_BODY);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 3, true, true, -1, false);
	}
	frame(lua_state, 78.0);
	if is_excute(fighter) {
		AttackModule::clear(fighter.module_accessor, /*ID*/ 3);
	}
}