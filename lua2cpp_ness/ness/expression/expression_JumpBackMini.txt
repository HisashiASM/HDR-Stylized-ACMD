#[acmd_script( agent = "ness", script = "expression_jumpbackmini" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_jumpbackmini (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	IS_FIGHTER_STATUS_KIND(fighter, *FIGHTER_STATUS_KIND_GIMMICK_SPRING_JUMP);
	if(0xfdab0(false, true)){;
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_bounce"), 0, true);
			ControlModule::set_rumble(fighter.module_accessor);
		}
		else{;
		IS_FIGHTER_STATUS_KIND(fighter, *FIGHTER_STATUS_KIND_ICE_JUMP);
		if(0xfdab0(false, true)){;
			if is_excute(fighter) {
				methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_awaken"), 0, false);
				ControlModule::set_rumble(fighter.module_accessor);
			}
			else{;
			IS_FIGHTER_STATUS_KIND(fighter, *FIGHTER_STATUS_KIND_ITEM_ROCKETBELT_HOP);
			if(0xfdab0(false, true)){;
				if is_excute(fighter) {
					methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_grapple"), 0, false);
					ControlModule::set_rumble(fighter.module_accessor);
				}
				else{;
				if is_excute(fighter) {
					methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_jump"), 0, false);
					ControlModule::set_rumble(fighter.module_accessor);
				}
			}
		}
	}
}
}
}
}