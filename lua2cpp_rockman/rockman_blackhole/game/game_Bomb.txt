#[acmd_script( agent = "rockman_blackhole", script = "game_bomb" , category = ACMD_GAME , low_priority)]
unsafe fn game_bomb (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_ROCKMAN_BLACKHOLE_STATUS_WORK_FLAG_PULL);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_fly"), 55, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 2.0, 65, 100, 0, 50, 30.0, 0.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
		AREA_WIND_2ND_RAD_arg9(0, 4, -0.1, 1000, 1, 0, 0, 70, 80);
	}
	frame(lua_state, 44.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *WEAPON_ROCKMAN_BLACKHOLE_STATUS_WORK_FLAG_PULL);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_ROCKMAN_BLACKHOLE_STATUS_WORK_FLAG_SEND_ATTACK_END);
	}
}