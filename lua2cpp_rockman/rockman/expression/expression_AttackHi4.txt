#[acmd_script( agent = "rockman", script = "expression_attackhi4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackhi4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		notify_event_msc_cmd(0x1f5b14bb65, *FIGHTER_ROCKMAN_ARM_LEFT, *FIGHTER_ROCKMAN_ARMFORM_ROCKBUSTER, 5, 120);
		notify_event_msc_cmd(0x1f5b14bb65, *FIGHTER_ROCKMAN_ARM_RIGHT, *FIGHTER_ROCKMAN_ARMFORM_ROCKBUSTER, 5, 120);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("lspark"), Hash40::new("lspark_on"));
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("rspark"), Hash40::new("rspark_on"));
	}
	frame(lua_state, 5.0);
	execute(5);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
	if(0xf4c50(false, true)){;
		if is_excute(fighter) {
			ItemModule::set_have_item_visibility(fighter.module_accessor, false);
			slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
		}
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 5);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 28, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 31.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
	}
	frame(lua_state, 56.0);
	if is_excute(fighter) {
		notify_event_msc_cmd(0x1f5b14bb65, *FIGHTER_ROCKMAN_ARM_LEFT, *FIGHTER_ROCKMAN_ARMFORM_WASTEHEAT, 0, 120);
		notify_event_msc_cmd(0x1f5b14bb65, *FIGHTER_ROCKMAN_ARM_RIGHT, *FIGHTER_ROCKMAN_ARMFORM_WASTEHEAT, 0, 120);
	}
	frame(lua_state, 62.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 66.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("lspark"), Hash40::new("lspark_off"));
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("rspark"), Hash40::new("rspark_off"));
	}
}