#[acmd_script( agent = "inkling_brush", script = "effect_attacks4" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attacks4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("inkling_pablo_splash_s"), Hash40::new("brush2"), 1, 0, 0, 0, 0, 0, 1, true);
	}
	WorkModule::get_float(fighter.module_accessor, *WEAPON_INKLING_BRUSH_INSTANCE_WORK_ID_FLOAT_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *WEAPON_INKLING_BRUSH_INSTANCE_WORK_ID_FLOAT_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *WEAPON_INKLING_BRUSH_INSTANCE_WORK_ID_FLOAT_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	frame(0, 14);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("inkling_pablo_splash2"), Hash40::new("brush3"), 1, 0, 0, 0, 0, 0, 1, true);
	}
	WorkModule::get_float(fighter.module_accessor, *WEAPON_INKLING_BRUSH_INSTANCE_WORK_ID_FLOAT_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *WEAPON_INKLING_BRUSH_INSTANCE_WORK_ID_FLOAT_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *WEAPON_INKLING_BRUSH_INSTANCE_WORK_ID_FLOAT_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	frame(0, 20);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("inkling_pablo_splash"), false, true);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("inkling_pablo_splash_s"), false, true);
	}
}