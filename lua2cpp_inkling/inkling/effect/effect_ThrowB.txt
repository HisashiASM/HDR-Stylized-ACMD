#[acmd_script( agent = "inkling", script = "effect_throwb" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_throwb (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_whirlwind_l"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_FLW_UNSYNC_VIS(fighter, Hash40::new("inkling_squid_change"), Hash40::new("throw"), 1, 0, 0, 0, 0, 0, 0.9, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	frame(0, 25);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_smash_flash_s"), Hash40::new("throw"), 0, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 42.0);
	if is_excute(fighter) {
		EFFECT_FLW_UNSYNC_VIS(fighter, Hash40::new("inkling_squid_change"), Hash40::new("head"), 2, 1, 0, 0, 0, 0, 0.95, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	if is_excute(fighter) {
		LAST_EFFECT_SET_RATE(fighter, 1.2);
	}
}