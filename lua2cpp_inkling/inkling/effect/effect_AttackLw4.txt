#[acmd_script( agent = "inkling", script = "effect_attacklw4" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attacklw4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), -9, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_INK_SUCCESS);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		frame(lua_state, 7.0);
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("inkling_slosher_trace"), Hash40::new("haver"), 5, 2, -2.5, 5, 11, -90, 1, true);
		}
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	frame(0, 10);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("inkling_slosher_splash"), Hash40::new("haver"), 3.3, 0, -2, 5, 11, 0, 1, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -1, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("inkling_slosher_trace"), Hash40::new("haver"), 3.5, 0, -3, 5, 11, 0, 1, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	frame(0, 19);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("inkling_slosher_splash"), Hash40::new("haver"), 3.3, 0, -2, 5, 11, 0, 1, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 1, 0, 0, 0, 180, 0, 0.6, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 26.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("inkling_slosher_trace"), Hash40::new("haver"), 3.5, 0, -3, 5, 11, 0, 1, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	frame(0, 33);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("inkling_slosher_trace"), false, true);
	}
	else{;
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("inkling_slosher_splash2"), Hash40::new("haver"), 3.3, 0, -2, 5, 11, 0, 0.95, true);
	}
}
WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
if is_excute(fighter) {
	LAST_PARTICLE_SET_COLOR(fighter);
}
if is_excute(fighter) {
	LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -1, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false);
}
frame(lua_state, 19.0);
if is_excute(fighter) {
	EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("inkling_slosher_splash2"), Hash40::new("haver"), 3.3, 0, -2, 5, 11, 0, 0.95, true);
}
WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
if is_excute(fighter) {
	LAST_PARTICLE_SET_COLOR(fighter);
}
if is_excute(fighter) {
	LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 1, 0, 0, 0, 180, 0, 0.6, 0, 0, 0, 0, 0, 0, false);
}
frame(lua_state, 33.0);
if is_excute(fighter) {
	EFFECT_OFF_KIND(fighter, Hash40::new("inkling_slosher_trace"), false, true);
}
}