#[acmd_script( agent = "inkling", script = "effect_final" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_final (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){;
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x13d500(0, 0)){;
			if is_excute(fighter) {
				methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_l"), false);
				EffectModule::req_screen(fighter.module_accessor);
			}
			else{;
			if is_excute(fighter) {
				methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_r"), false);
				EffectModule::req_screen(fighter.module_accessor);
			}
		}
	}
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){;
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x13d500(0, 0)){;
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_l2"), false);
			EffectModule::req_screen(fighter.module_accessor);
		}
		else{;
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_r2"), false);
			EffectModule::req_screen(fighter.module_accessor);
		}
	}
}
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){;
get_value_float(*SO_VAR_FLOAT_LR);
if(0x13d500(0, 0)){;
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_l"), false);
		EffectModule::req_screen(fighter.module_accessor);
	}
	else{;
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_r"), false);
		EffectModule::req_screen(fighter.module_accessor);
	}
}
}
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){;
get_value_float(*SO_VAR_FLOAT_LR);
if(0x13d500(0, 0)){;
if is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_l"), false);
	EffectModule::req_screen(fighter.module_accessor);
}
else{;
if is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_r"), false);
	EffectModule::req_screen(fighter.module_accessor);
}
}
}
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){;
get_value_float(*SO_VAR_FLOAT_LR);
if(0x13d500(0, 0)){;
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_l"), false);
EffectModule::req_screen(fighter.module_accessor);
}
else{;
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_r"), false);
EffectModule::req_screen(fighter.module_accessor);
}
}
}
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){;
get_value_float(*SO_VAR_FLOAT_LR);
if(0x13d500(0, 0)){;
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_l2"), false);
EffectModule::req_screen(fighter.module_accessor);
}
else{;
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_r2"), false);
EffectModule::req_screen(fighter.module_accessor);
}
}
}
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){;
get_value_float(*SO_VAR_FLOAT_LR);
if(0x13d500(0, 0)){;
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_l"), false);
EffectModule::req_screen(fighter.module_accessor);
}
else{;
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_r"), false);
EffectModule::req_screen(fighter.module_accessor);
}
}
}
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){;
get_value_float(*SO_VAR_FLOAT_LR);
if(0x13d500(0, 0)){;
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_l2"), false);
EffectModule::req_screen(fighter.module_accessor);
}
else{;
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("bg_inkling_final_r2"), false);
EffectModule::req_screen(fighter.module_accessor);
}
}
}
}
frame(lua_state, 39.0);
if is_excute(fighter) {
LANDING_EFFECT(fighter, Hash40::new("sys_down_smoke"), Hash40::new("top"), 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
}
frame(lua_state, 60.0);
if is_excute(fighter) {
EFFECT_OFF_KIND(fighter, Hash40::new("inkling_final_ink_aura"), false, false);
WorkModule::set_int(fighter.module_accessor, *EFFECT_HANDLE_NULL, *FIGHTER_INKLING_INSTANCE_WORK_ID_INT_READY_FINAL_EFFECT_HANDLE);
}
frame(lua_state, 61.0);
if is_excute(fighter) {
EFFECT_OFF_KIND(fighter, Hash40::new("inkling_final_ink_lineaura"), false, false);
WorkModule::set_int(fighter.module_accessor, *EFFECT_HANDLE_NULL, *FIGHTER_INKLING_INSTANCE_WORK_ID_INT_READY_FINAL_EFFECT_HANDLE);
}
}