#[acmd_script( agent = "inkling", script = "effect_attackhi4" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackhi4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), 0, 12.5, -3.5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_INK_SUCCESS);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		frame(lua_state, 17.0);
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_v_smoke_a"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
			EFFECT(fighter, Hash40::new("inkling_blaster_bullet"), Hash40::new("top"), 0, 20, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
		}
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	frame(0, 0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_v_smoke_a"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
		EFFECT(fighter, Hash40::new("inkling_blaster_bullet2"), Hash40::new("top"), 0, 20, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
}