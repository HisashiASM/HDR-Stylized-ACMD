#[acmd_script( agent = "inkling", script = "effect_turnrun" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_turnrun (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("inkling_squid_change"), Hash40::new("head"), 3, 0, 0, 0, 0, 0, 1, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	if is_excute(fighter) {
		EffectModule::enable_sync_init_pos_last(fighter.module_accessor, 0);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_turn_smoke"), Hash40::new("top"), -3, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 19.0);
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_turn_smoke"), Hash40::new("top"), -3, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		EFFECT_FLW_UNSYNC_VIS(fighter, Hash40::new("inkling_squid_change"), Hash40::new("top"), 0, 2.5, -2.5, 0, 0, 0, 1, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G);
	WorkModule::get_float(fighter.module_accessor, -1407754940, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	if is_excute(fighter) {
		EffectModule::enable_sync_init_pos_last(fighter.module_accessor, 0);
	}
}