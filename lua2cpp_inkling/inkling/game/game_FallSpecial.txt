#[acmd_script( agent = "inkling", script = "game_fallspecial" , category = ACMD_GAME , low_priority)]
unsafe fn game_fallspecial (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_EXIST_SQUID);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		if is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID);
		}
	}
	MotionModule::motion_kind(fighter.module_accessor);
	MotionModule::frame(fighter.module_accessor, 0x00000002b0);
	MotionModule::rate(fighter.module_accessor, -1407754940);
	methodlib::L2CValue::as_hash()const(-1407754940, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false);
	ArticleModule::change_motion(fighter.module_accessor);
	if is_excute(fighter) {
		ArticleModule::set_frame(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID);
		ArticleModule::set_rate(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_EXIST_SQUID);
		StatusModule::status_kind(fighter.module_accessor);
		methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0, *FIGHTER_STATUS_KIND_REBIRTH);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INSTANCE_WORK_ID_FLAG_FORCE_LOUPE);
	}
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, false);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, true);
	}
}