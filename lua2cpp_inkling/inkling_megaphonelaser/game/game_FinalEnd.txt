#[acmd_script( agent = "inkling_megaphonelaser", script = "game_finalend" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalend (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 1.0, 60, 100, 30, 0, 18.0, 0.0, 10.0, 28.0, Some(0.0), Some(10.0), Some(0.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 7, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_ink_hit"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, false);
	}
	wait(lua_state, 8.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	wait(lua_state, 1.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 8.0, 361, 105, 0, 80, 24.0, 0.0, 10.0, 33.0, Some(0.0), Some(10.0), Some(0.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_ink_hit"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
		AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
		AttackModule::set_ink_value(fighter.module_accessor, /*ID*/ 0, /*Ink*/ 200);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, false);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_64_megaphone3"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	wait(lua_state, 15.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
	}
}