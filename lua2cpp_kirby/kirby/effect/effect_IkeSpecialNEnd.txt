#[acmd_script( agent = "kirby", script = "effect_ikespecialnend" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_ikespecialnend (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("ike_volcano_hold"), false, false);
		EFFECT(fighter, Hash40::new("ike_volcano"), Hash40::new("top"), 0, 0, 10, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_IKE_STATUS_SPECIAL_N_WORK_FLOAT_CHARGE_COUNT);
	if(0x543c60(-1165490952, 35)){;
		if is_excute(fighter) {
			EFFECT(fighter, Hash40::new("ike_volcano_add3"), Hash40::new("top"), 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
		}
	}
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("ike_volcano_flash"), Hash40::new("top"), 0, 0, 10, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, true);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_IKE_STATUS_SPECIAL_N_WORK_FLOAT_CHARGE_COUNT);
	if(0x543c60(-1165490952, 75)){;
		if is_excute(fighter) {
			EFFECT(fighter, Hash40::new("ike_volcano_add4"), Hash40::new("top"), 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
		}
	}
	frame(lua_state, 46.0);
	if is_excute(fighter) {
		COL_NORMAL(fighter);
	}
}