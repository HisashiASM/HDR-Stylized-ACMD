#[acmd_script( agent = "miiswordsman", script = "expression_specialhi2" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_specialhi2 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 2, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_slashss"), 3);
	}
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 2, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 2, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 2, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 2, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 16.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_slashl"), 0);
	}
}