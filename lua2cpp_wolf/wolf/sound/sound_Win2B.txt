#[acmd_script( agent = "wolf", script = "sound_win2b" , category = ACMD_SOUND , low_priority)]
unsafe fn sound_win2b (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	GET_VOICE_REGION(fighter);
	if(0x108260(0, *VOICE_DEFAULT)){;
		frame(lua_state, 15.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_wolf_win_fox"));
		}
		frame(lua_state, 27.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_s_win02"));
		}
		frame(lua_state, 66.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_m_win02"));
		}
		frame(lua_state, 98.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_attackhard_l01_win02"));
		}
		frame(lua_state, 109.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_step_right_s_win03_win02"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(0x108260(0, *VOICE_US_EN)){;
		frame(lua_state, 13.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_wolf_win_fox"));
		}
		frame(lua_state, 27.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_s_win02"));
		}
		frame(lua_state, 66.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_m_win02"));
		}
		frame(lua_state, 98.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_attackhard_l01_win02"));
		}
		frame(lua_state, 109.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_step_right_s_win03_win02"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(0x108260(0, *VOICE_US_FR)){;
		frame(lua_state, 13.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_wolf_win_fox"));
		}
		frame(lua_state, 27.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_s_win02"));
		}
		frame(lua_state, 66.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_m_win02"));
		}
		frame(lua_state, 98.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_attackhard_l01_win02"));
		}
		frame(lua_state, 109.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_step_right_s_win03_win02"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(0x108260(0, *VOICE_EU_EN)){;
		frame(lua_state, 13.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_wolf_win_fox"));
		}
		frame(lua_state, 27.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_s_win02"));
		}
		frame(lua_state, 66.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_m_win02"));
		}
		frame(lua_state, 98.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_attackhard_l01_win02"));
		}
		frame(lua_state, 109.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_step_right_s_win03_win02"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(0x108260(0, *VOICE_EU_FR)){;
		frame(lua_state, 13.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_wolf_win_fox"));
		}
		frame(lua_state, 27.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_s_win02"));
		}
		frame(lua_state, 66.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_m_win02"));
		}
		frame(lua_state, 98.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_attackhard_l01_win02"));
		}
		frame(lua_state, 109.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_step_right_s_win03_win02"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(0x108260(0, *VOICE_EU_IT)){;
		frame(lua_state, 13.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_wolf_win_fox"));
		}
		frame(lua_state, 27.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_s_win02"));
		}
		frame(lua_state, 66.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_swing_m_win02"));
		}
		frame(lua_state, 98.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_attackhard_l01_win02"));
		}
		frame(lua_state, 109.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_wolf_step_right_s_win03_win02"));
		}
	}
}
}
}
}
}
}