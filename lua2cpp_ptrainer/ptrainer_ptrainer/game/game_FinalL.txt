#[acmd_script( agent = "ptrainer_ptrainer", script = "game_finall" , category = ACMD_GAME , low_priority)]
unsafe fn game_finall (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ArticleModule::generate_article(fighter.module_accessor, *WEAPON_PTRAINER_PTRAINER_GENERATE_ARTICLE_MBALL);
		ArticleModule::generate_article(fighter.module_accessor, *WEAPON_PTRAINER_PTRAINER_GENERATE_ARTICLE_MBALL);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *WEAPON_PTRAINER_PTRAINER_GENERATE_ARTICLE_MBALL, false);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("weapon"), Hash40::new("m_ball_lr"));
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("weapon"), Hash40::new("none"));
		ArticleModule::set_visibility_whole(fighter.module_accessor, *WEAPON_PTRAINER_PTRAINER_GENERATE_ARTICLE_MBALL, true);
		ArticleModule::shoot(fighter.module_accessor, *WEAPON_PTRAINER_PTRAINER_GENERATE_ARTICLE_MBALL, *ARTICLE_OPE_TARGET_ALL, false);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		WorkModule::set_int(fighter.module_accessor, *WEAPON_PTRAINER_PTRAINER_FINAL_WINDOW_KIND_ON, *WEAPON_PTRAINER_PTRAINER_STATUS_WORK_INT_FINAL_WINDOW_KIND);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		WorkModule::set_int(fighter.module_accessor, WEAPON_PTRAINER_PTRAINER_FINAL_WINDOW_KIND_MSG_1, *WEAPON_PTRAINER_PTRAINER_STATUS_WORK_INT_FINAL_WINDOW_KIND);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PTRAINER_PTRAINER_STATUS_WORK_FLAG_FINAL_TURN);
	}
}