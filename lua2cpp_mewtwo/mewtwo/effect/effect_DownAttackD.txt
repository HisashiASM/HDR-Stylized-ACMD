#[acmd_script( agent = "mewtwo", script = "effect_downattackd" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_downattackd (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_FLIP_arg13(Hash40::new("mewtwo_tail_attack_a_01"), Hash40::new("mewtwo_tail_attack_a_01"), Hash40::new("top"), -0.5, 4.6, 5, 0, -60, -170, 1.1, true, *EF_FLIP_YZ, *FIGHTER_INSTANCE_WORK_ID_INT_COLOR);
	}
	frame(lua_state, 19.0);
	if is_excute(fighter) {
		LANDING_EFFECT_FLIP(fighter, Hash40::new("sys_whirlwind_r"), Hash40::new("sys_whirlwind_l"), Hash40::new("top"), 0, 0, 2, 0, 0, 0, 1.4, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_NONE);
		LAST_EFFECT_SET_ALPHA(fighter, 0.5);
	}
	frame(lua_state, 22.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("mewtwo_tail_attack_a_01"), false, true);
	}
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_FLIP_arg13(Hash40::new("mewtwo_tail_attack_a_01"), Hash40::new("mewtwo_tail_attack_a_01"), Hash40::new("top"), 2, 3.3, -4, 0, 110, -195, 1.1, true, *EF_FLIP_YZ, *FIGHTER_INSTANCE_WORK_ID_INT_COLOR);
	}
	frame(lua_state, 27.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("mewtwo_tail_attack_a_01"), false, true);
	}
}