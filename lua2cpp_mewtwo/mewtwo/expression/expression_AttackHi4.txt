#[acmd_script( agent = "mewtwo", script = "expression_attackhi4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackhi4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 3.0);
	execute(3);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 2);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_spinattack"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
		AREA_WIND_2ND_arg10(0, 2, 90, 3, 0.2, 0, 4, 40, 8, 80);
	}
	frame(lua_state, 22.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackll"), 0);
	}
	frame(lua_state, 31.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 32.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_grapple"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 50.0);
	if is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
}