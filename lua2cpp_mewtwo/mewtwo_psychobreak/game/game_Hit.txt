#[acmd_script( agent = "mewtwo_psychobreak", script = "game_hit" , category = ACMD_GAME , low_priority)]
unsafe fn game_hit (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 62.0);
	if is_excute(fighter) {
		SlowModule::set_whole(fighter.module_accessor, 4, 0);
	}
	frame(lua_state, 67.0);
	if is_excute(fighter) {
		SlowModule::clear_whole(fighter.module_accessor);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 68.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionm"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 70.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 40.0, 361, 40, 0, 80, 0.1, 0.0, 0.0, 0.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
		AttackModule::set_invalid_invincible(fighter.module_accessor, 0, true);
		AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, false, -1, false);
	}
	frame(lua_state, 71.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_MEWTWO_PSYCHOBREAK_INSTANCE_WORK_ID_FLAG_HIT_ABS);
		AttackModule::clear_all(fighter.module_accessor);
		SlowModule::set_whole(fighter.module_accessor, 3, 0);
	}
	frame(lua_state, 72.0);
	if is_excute(fighter) {
		notify_event_msc_cmd(0x199c462b5d);
		SlowModule::clear_whole(fighter.module_accessor);
	}
}