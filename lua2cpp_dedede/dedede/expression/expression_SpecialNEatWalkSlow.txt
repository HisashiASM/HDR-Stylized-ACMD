#[acmd_script( agent = "dedede", script = "expression_specialneatwalkslow" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_specialneatwalkslow (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	wait_loop_sync_mot();
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_swell"));
		HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("virtualwaist"), *HIT_STATUS_NORMAL);
	}
	frame(0, 30);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_walk_hv"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 59.0);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_walk_hv"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
}