#[acmd_script( agent = "dedede", script = "expression_appealsl" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_appealsl (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 6, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 6, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 27.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 6, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 34.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 6, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 41.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 6, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 48.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 6, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 55.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits_l"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
}