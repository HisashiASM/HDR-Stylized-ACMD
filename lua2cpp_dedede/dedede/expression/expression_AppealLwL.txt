#[acmd_script( agent = "dedede", script = "expression_appeallwl" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_appeallwl (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 4);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_lands_hv"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 19.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_R, 4);
	}
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_lands_hv"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 37.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 4);
	}
	frame(lua_state, 40.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_lands_hv"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 50.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_R, 4);
	}
	frame(lua_state, 55.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_lands_hv"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 70.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 4);
	}
	frame(lua_state, 73.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_landl_hv"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 95.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 4);
	}
}