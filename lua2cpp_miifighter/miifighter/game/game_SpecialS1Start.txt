#[acmd_script( agent = "miifighter", script = "game_specials1start" , category = ACMD_GAME , low_priority)]
unsafe fn game_specials1start (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_MIIFIGHTER_STATUS_WORK_ID_FLAG_100*KICK_ENABLE_LANDING_MUL_SPEED_X);
	}
	frame(lua_state, 14.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_MIIFIGHTER_STATUS_WORK_ID_FLAG_100*KICK_ENABLE_MOTION_SPEED_MUL);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		FighterAreaModuleImpl::enable_fix_jostle_area(fighter.module_accessor, 2, 3);
	}
	frame(lua_state, 16.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 2.0, 60, 50, 130, 0, 4.0, 0.0, 7.0, 3.8, None, None, None, 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KNEE);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_MIIFIGHTER_STATUS_WORK_ID_FLAG_100*KICK_HIT_CHECK_ONOFF);
	}
	frame(lua_state, 31.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ FIGHTER_MIIFIGHTER_STATUS_WORK_ID_FLAG_100*KICK_HIT_CHECK_ONOFF);
	}
	frame(lua_state, 35.0);
	if is_excute(fighter) {
		FighterAreaModuleImpl::enable_fix_jostle_area(fighter.module_accessor, 4, 3);
	}
}