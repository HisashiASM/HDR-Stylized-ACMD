#[acmd_script( agent = "miifighter", script = "expression_specialhi2" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_specialhi2 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 10);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		AREA_WIND_2ND_RAD_arg9(1, 2, 0.05, 300, 1, 7, 8, 20, 50);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 6);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 29.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 34.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 36.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
	}
	frame(lua_state, 38.0);
	if is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 1);
	}
}