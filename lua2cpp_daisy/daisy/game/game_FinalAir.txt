#[acmd_script( agent = "daisy", script = "game_finalair" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalair (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		PostureModule::scale(fighter.module_accessor, 3, 0);
		0x110c00(1970618268, 1.8);
		CAM_ZOOM_IN_arg5(0, 0);
		camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 2);
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 0, 0, 0);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		frame(lua_state, 5.0);
		if is_excute(fighter) {
			FT_SET_FINAL_FEAR_FACE(fighter, 60);
			REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04final.nuanmb"), false);
			FT_START_CUTIN(fighter);
			SlowModule::set_whole(fighter.module_accessor, 2, 0);
		}
		else{;
		if is_excute(fighter) {
			FT_START_CUTIN(fighter);
		}
	}
}
frame(lua_state, 30.0);
if is_excute(fighter) {
	SlowModule::clear_whole(fighter.module_accessor);
}
frame(lua_state, 40.0);
if is_excute(fighter) {
	CAM_ZOOM_OUT(fighter);
	PostureModule::scale(fighter.module_accessor, 120, 0);
	0x110c00(1970618268, 5);
	CAM_ZOOM_IN_arg5(0, 0);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PEACH_STATUS_FINAL_FLAG_AFFECT_ENABLE);
	ATTACK(fighter, 0, 0, Hash40::new("throw"), 30.0, 361, 0, 0, 0, 25.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	ATTACK(fighter, 1, 0, Hash40::new("throw"), 20.0, 361, 0, 0, 0, 50.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	ATTACK(fighter, 2, 0, Hash40::new("throw"), 10.0, 361, 0, 0, 0, 100.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
}
frame(lua_state, 62.0);
if is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	ATTACK(fighter, 4, 0, Hash40::new("throw"), 0.0, 0, 230, 0, 0, 25.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_sleep"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	ATTACK(fighter, 5, 0, Hash40::new("throw"), 0.0, 0, 130, 0, 0, 50.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_sleep"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	ATTACK(fighter, 6, 0, Hash40::new("throw"), 0.0, 0, 100, 0, 0, 100.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_sleep"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
}
frame(lua_state, 141.0);
if is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	ATTACK(fighter, 4, 0, Hash40::new("throw"), 0.0, 0, 200, 0, 0, 25.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_sleep"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	ATTACK(fighter, 5, 0, Hash40::new("throw"), 0.0, 0, 130, 0, 0, 50.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_sleep"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	ATTACK(fighter, 6, 0, Hash40::new("throw"), 0.0, 0, 100, 0, 0, 100.0, 0.0, 5.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_sleep"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
}
frame(lua_state, 231.0);
if is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
}
frame(0, 242);
FT_MOTION_RATE(fighter, 0.6);
frame(lua_state, 251.0);
if is_excute(fighter) {
	CAM_ZOOM_OUT(fighter);
}
}