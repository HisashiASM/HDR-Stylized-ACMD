#[acmd_script( agent = "trail", script = "game_specialn2" , category = ACMD_GAME , low_priority)]
unsafe fn game_specialn2 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_TRAIL_INSTANCE_WORK_ID_FLAG_MAGIC_SELECT_FORBID);
	}
	frame(lua_state, 1.0);
	FT_MOTION_RATE(fighter, 0.5);
	frame(lua_state, 19.0);
	FT_MOTION_RATE(fighter, 1);
	frame(lua_state, 22.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 0.0, 361, 100, 40, 0, 3.2, 0.0, 6.4, 2.2, Some(0.0), Some(6.4), Some(5.2), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 2, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_MAGIC);
	}
	frame(lua_state, 24.0);
	FT_MOTION_RATE(fighter, 1.25);
	if is_excute(fighter) {
		AttackModule::clear(fighter.module_accessor, /*ID*/ 0);
		WorkModule::set_float(fighter.module_accessor, 4, FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLOAT_ANGLE);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_ICE);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLAG_CHANGE_MAGIC);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		WorkModule::set_float(fighter.module_accessor, 16, FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLOAT_ANGLE);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_ICE);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		WorkModule::set_float(fighter.module_accessor, -8, FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLOAT_ANGLE);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_ICE);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		WorkModule::set_float(fighter.module_accessor, 24, FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLOAT_ANGLE);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_ICE);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		WorkModule::set_float(fighter.module_accessor, -2, FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLOAT_ANGLE);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_ICE);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		WorkModule::set_float(fighter.module_accessor, 12, FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLOAT_ANGLE);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_ICE);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		WorkModule::set_float(fighter.module_accessor, -14, FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLOAT_ANGLE);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_ICE);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLAG_LAST_SHOOT);
		WorkModule::set_float(fighter.module_accessor, 0, FIGHTER_TRAIL_STATUS_SPECIAL_N2*_FLOAT_ANGLE);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_ICE);
	}
	wait(lua_state, 2.0);
	FT_MOTION_RATE(fighter, 1);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 1.8, 42, 64, 0, 52, 3.2, 0.0, 6.4, 2.2, Some(0.0), Some(6.4), Some(6.4), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FREEZE, *ATTACK_REGION_MAGIC);
	}
	wait(lua_state, 2.0);
	FT_MOTION_RATE(fighter, 0.8);
	if is_excute(fighter) {
		AttackModule::clear(fighter.module_accessor, /*ID*/ 0);
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_TRAIL_INSTANCE_WORK_ID_FLAG_MAGIC_SELECT_FORBID);
	}
	frame(lua_state, 57.0);
	FT_START_ADJUST_MOTION_FRAME_arg1(1);
}