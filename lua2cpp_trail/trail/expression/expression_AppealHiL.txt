#[acmd_script( agent = "trail", script = "expression_appealhil" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_appealhil (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	if(0x4ae890(*FIGHTER_TRAIL_INSTANCE_WORK_ID_INT_APPEAL_HI_KIND, 1)){;
		if is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_TRAIL_GENERATE_ARTICLE_FLOWER, true);
		}
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x4ae890(224, 0)){;
			if is_excute(fighter) {
				methodlib::L2CValue::as_hash()const(*FIGHTER_TRAIL_GENERATE_ARTICLE_FLOWER, Hash40::new("appeal_hi_l"));
				ArticleModule::change_motion(fighter.module_accessor);
			}
			else{;
			if is_excute(fighter) {
				methodlib::L2CValue::as_hash()const(*FIGHTER_TRAIL_GENERATE_ARTICLE_FLOWER, Hash40::new("appeal_hi_r"));
				ArticleModule::change_motion(fighter.module_accessor);
			}
		}
	}
	frame(lua_state, 29.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_81_appealhi1"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
}
else{;
if(0x4ae890(0, *FIGHTER_TRAIL_INSTANCE_WORK_ID_INT_APPEAL_HI_KIND, 2)){;
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_81_appealhi3"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
}
else{;
if(0x4ae890(0, *FIGHTER_TRAIL_INSTANCE_WORK_ID_INT_APPEAL_HI_KIND, 3)){;
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_81_appealhi2"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
}
}
}
frame(0, 51);
ItemModule::is_have_item(fighter.module_accessor, 0);
if(0x4ae890(false, true)){;
if is_excute(fighter) {
FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.03);
}
}
frame(lua_state, 60.0);
if is_excute(fighter) {
FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.07);
}
frame(lua_state, 66.0);
if is_excute(fighter) {
ItemModule::set_have_item_visibility(fighter.module_accessor, true);
}
frame(lua_state, 70.0);
if is_excute(fighter) {
FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0);
}
}