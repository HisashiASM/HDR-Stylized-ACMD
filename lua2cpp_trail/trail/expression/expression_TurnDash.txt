#[acmd_script( agent = "trail", script = "expression_turndash" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_turndash (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 2);
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 2);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_dash"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 32.0);
	ItemModule::is_have_item(fighter.module_accessor, 0);
	if(0x4ae890(false, true)){;
		if is_excute(fighter) {
			FT_MOTION_INTP_WAIT_ITEM(fighter, false, 0.001);
		}
	}
	frame(lua_state, 37.0);
	if is_excute(fighter) {
		FT_MOTION_INTP_WAIT_ITEM(fighter, false, 0.05);
	}
	frame(lua_state, 41.0);
	if is_excute(fighter) {
		FT_MOTION_INTP_WAIT_ITEM(fighter, false, 0.11);
	}
	frame(lua_state, 46.0);
	if is_excute(fighter) {
		FT_MOTION_INTP_WAIT_ITEM(fighter, false, 0);
	}
}