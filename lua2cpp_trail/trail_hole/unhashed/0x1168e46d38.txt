#[acmd_script( agent = "trail_hole", script = "0x1168e46d38" , category = ACMD_UNHASHED , low_priority)]
unsafe fn 0x1168e46d38 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		camera(*MA_MSC_CMD_CAMERA_CAM_RECT, 35, 0, 25, 0);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_TRAIL_HOLE_STATUS_WORK_FLAG_PULL);
	}
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 5.0, 0.0, 17.5, 0.0, Some(0.0), Some(23.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 6.0, 0.0, 17.0, 0.0, Some(0.0), Some(24.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 3.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 8.0, 0.0, 16.0, 0.0, Some(0.0), Some(24.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 10.0, 0.0, 17.0, 0.0, Some(0.0), Some(24.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 12.0, 0.0, 16.0, 0.0, Some(0.0), Some(24.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 12.0, 0.0, 15.0, 0.0, Some(0.0), Some(25.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 13.0, 0.0, 15.0, 0.0, Some(0.0), Some(26.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 14.0, 0.0, 14.0, 0.0, Some(0.0), Some(27.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 16.0, 0.0, 11.0, 0.0, Some(0.0), Some(28.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		AttackModule::disable_tip(fighter.module_accessor);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 7.0, 60, 100, 60, 0, 17.0, 0.0, 9.0, 0.0, Some(0.0), Some(29.0), Some(0.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
	}
	frame(lua_state, 30.0);
	for(10 Iterations){;
	if is_excute(fighter) {
		QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
	}
	wait(lua_state, 3.0);
}
}