#[acmd_script( agent = "pit", script = "game_finalride" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalride (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
	}
	wait(lua_state, 2.0);
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 40.0, 40, 40, 0, 120, 19.0, 0.0, 3.0, 0.0, Some(0.0), Some(8.5), Some(27.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
		AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
		AttackModule::set_no_uniq_effect_all(fighter.module_accessor, true, false);
		AttackModule::set_no_squat_damage_reaction_mul(fighter.module_accessor, 0, true, false);
	}
	frame(lua_state, 10.0);
	BattleObjectWorld__scale_z();
	if(methodlib::L2CValue::operator<=(lib::L2CValueconst&)const(0, 1.0)){;
		if is_excute(fighter) {
			SlowModule::set_whole(fighter.module_accessor, 90, 0);
		}
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x111840(0, 0)){;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 1, 0);
			0x111840(615595550, 1.5);
			CAM_ZOOM_IN_arg5(-0.3, 0.5);
		}
		else{;
		if is_excute(fighter) {
			SlowModule::set_whole(fighter.module_accessor, 90, 0);
		}
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x111840(0, 0)){;
			if is_excute(fighter) {
				PostureModule::scale(fighter.module_accessor, 1, 0);
				0x111840(615595550, 1.5);
				CAM_ZOOM_IN_arg5(0, 0);
			}
			else{;
			if is_excute(fighter) {
				PostureModule::scale(fighter.module_accessor, 1, 0);
				0x111840(615595550, 1.5);
				CAM_ZOOM_IN_arg5(-0.3, -0.5);
			}
			else{;
			if is_excute(fighter) {
				PostureModule::scale(fighter.module_accessor, 1, 0);
				0x111840(615595550, 1.5);
				CAM_ZOOM_IN_arg5(0, 0);
			}
		}
	}
}
}
}
frame(lua_state, 10.6);
if is_excute(fighter) {
CAM_ZOOM_OUT(fighter);
}
frame(lua_state, 10.9);
if is_excute(fighter) {
SlowModule::clear_whole(fighter.module_accessor);
AttackModule::clear_all(fighter.module_accessor);
}
}