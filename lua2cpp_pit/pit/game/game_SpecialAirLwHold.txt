#[acmd_script( agent = "pit", script = "game_specialairlwhold" , category = ACMD_GAME , low_priority)]
unsafe fn game_specialairlwhold (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		shield(MSC=*MA_MSC_CMD_SHIELD_ON, Type=*COLLISION_KIND_SHIELD, ID=0, Group=*FIGHTER_PIT_SHIELD_GROUP_KIND_SPECIAL_LW);
		shield(MSC=*MA_MSC_CMD_SHIELD_ON, Type=*COLLISION_KIND_SHIELD, ID=1, Group=*FIGHTER_PIT_SHIELD_GROUP_KIND_SPECIAL_LW);
		shield(MSC=*MA_MSC_CMD_SHIELD_ON, Type=*COLLISION_KIND_REFLECTOR, ID=0, Group=*FIGHTER_PIT_REFLECTOR_GROUP_SPECIAL_LW);
		shield(MSC=*MA_MSC_CMD_SHIELD_ON, Type=*COLLISION_KIND_REFLECTOR, ID=1, Group=*FIGHTER_PIT_REFLECTOR_GROUP_SPECIAL_LW);
		ATTACK(fighter, 0, 0, 0x10489b2b69, 0.0, 50, 100, 50, 0, 2.7, 0.0, -2.0, 1.0, Some(0.0), Some(3.0), Some(1.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 4, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		ATTACK(fighter, 1, 0, 0x104ff6ef70, 0.0, 50, 100, 50, 0, 2.7, 0.0, -2.0, -1.0, Some(0.0), Some(3.0), Some(-1.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 4, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, 0x10489b2b69, 0.0, 50, 100, 30, 0, 2.7, 0.0, -2.0, 1.0, Some(0.0), Some(3.0), Some(1.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 4, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		ATTACK(fighter, 1, 0, 0x104ff6ef70, 0.0, 50, 100, 30, 0, 2.7, 0.0, -2.0, -1.0, Some(0.0), Some(3.0), Some(-1.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 4, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	}
}