#[acmd_script( agent = "pit", script = "game_finalstartr" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalstartr (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 30, 0, 0, 0);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(0x111840(false, false)){;
		frame(lua_state, 10.0);
		if is_excute(fighter) {
			FT_SET_FINAL_FEAR_FACE(fighter, 60);
		}
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x111840(0, 0)){;
		if is_excute(fighter) {
			REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalstartl.nuanmb"), false);
		}
		else{;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 4, 0);
			0x111840(615595550, 0.8);
			CAM_ZOOM_IN_arg5(0, 0);
			FT_START_CUTIN(fighter);
		}
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x111840(0, 0)){;
			if is_excute(fighter) {
				camera(*MA_MSC_CMD_CAMERA_CAM_RECT, -30, 80, 30, -30);
			}
			else{;
			if is_excute(fighter) {
				REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalstartr.nuanmb"), false);
			}
			if is_excute(fighter) {
				FT_START_CUTIN(fighter);
			}
			else{;
			if is_excute(fighter) {
				camera(*MA_MSC_CMD_CAMERA_CAM_RECT, 80, -30, 30, -30);
			}
		}
	}
}
}
}
frame(lua_state, 36.0);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
if(0x111840(false, false)){;
get_value_float(*SO_VAR_FLOAT_LR);
if(0x111840(0, 0)){;
if is_excute(fighter) {
	camera(*MA_MSC_CMD_CAMERA_CAM_RECT, -30, 80, 30, -30);
}
else{;
if is_excute(fighter) {
	camera(*MA_MSC_CMD_CAMERA_CAM_RECT, 80, -30, 30, -30);
}
}
}
}
if is_excute(fighter) {
CAM_ZOOM_OUT(fighter);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PIT_STATUS_FINAL_FLAG_CHANGE_AIR);
}
}