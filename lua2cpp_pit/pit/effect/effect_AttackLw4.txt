#[acmd_script( agent = "pit", script = "effect_attacklw4" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attacklw4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), 0, 12, -3, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		AFTER_IMAGE4_ON_arg29(Hash40::new("tex_pit_sword1"), Hash40::new("tex_pit_sword2"), 4, Hash40::new("swordr1"), 0, 0, -0.2, Hash40::new("swordr1"), 0, 10.4, -1.2, true, Hash40::new("pit_sword"), Hash40::new("swordr1"), 0, 0, 0, 0, 90, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 1.4, 0.1);
	}
	frame(lua_state, 5.0);
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x111840(272, 0)){;
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -5, 0, 2, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
		}
		else{;
		if is_excute(fighter) {
			LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -5, 0, -2, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
		}
	}
}
frame(lua_state, 7.0);
if is_excute(fighter) {
	AFTER_IMAGE_OFF(fighter, 3);
}
frame(lua_state, 16.0);
if is_excute(fighter) {
	EFFECT_FOLLOW(fighter, Hash40::new("pit_sword"), Hash40::new("swordl"), 0, 0, 0, 180, 90, 0, 1, true);
}
frame(lua_state, 17.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x111840(1264, 0)){;
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 2, 0, -3.5, 0, 180, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
	}
	else{;
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 2, 0, 3.5, 0, 180, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
	}
}
}
frame(lua_state, 18.0);
if is_excute(fighter) {
EFFECT_FOLLOW(fighter, Hash40::new("sys_attack_speedline"), Hash40::new("top"), 3, 3, -12, 23, 197, 6, 0.6, true);
}
frame(lua_state, 22.0);
if is_excute(fighter) {
EFFECT_OFF_KIND(fighter, Hash40::new("pit_sword"), false, true);
}
}