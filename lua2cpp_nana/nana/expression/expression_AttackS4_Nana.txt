#[acmd_script( agent = "nana", script = "expression_attacks4_nana" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attacks4_nana (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_R);
	}
	frame(lua_state, 5.0);
	execute(5);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_R);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 2);
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_impact"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 3, true);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 8);
	}
}