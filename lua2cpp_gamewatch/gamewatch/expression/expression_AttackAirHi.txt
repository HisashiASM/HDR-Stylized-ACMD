#[acmd_script( agent = "gamewatch", script = "expression_attackairhi" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackairhi (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("head"), Hash40::new("head_sparky"));
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hand"), Hash40::new("hand_hold_lr"));
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		AREA_WIND_2ND_arg10(0, 1, 90, 300, 1, 0, 30, 32, 60, 50);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 19.0);
	if is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		AREA_WIND_2ND_arg10(0, 2, 90, 300, 1, 0, 30, 32, 60, 50);
	}
	frame(lua_state, 27.0);
	if is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
}