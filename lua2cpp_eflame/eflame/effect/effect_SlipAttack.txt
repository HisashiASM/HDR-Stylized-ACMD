#[acmd_script( agent = "eflame", script = "effect_slipattack" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_slipattack (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 12.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("eflame_sword_open"), Hash40::new("sword1"), 0, 0, 0, 0, 90, 0, 1, true);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_open"), false, true);
		EFFECT_FOLLOW(fighter, Hash40::new("eflame_sword_beam_s"), Hash40::new("sword1"), 0, 0, 0, 0, 90, 0, 1, true);
		AFTER_IMAGE4_ON_arg29(Hash40::new("tex_eflame_sword1"), Hash40::new("tex_eflame_sword2"), 6, Hash40::new("sword1"), 0.3, 0, 0, Hash40::new("sword1"), 14, 0, -0.25, true, Hash40::new("null"), Hash40::new("sword1"), 0, 0, 0, 0, 0, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 1.4, 0.1);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("eflame_sword_fire2"), Hash40::new("sword1"), 0, 0, 0, 0, 0, 0, 0.45, true);
		EFFECT_FOLLOW(fighter, Hash40::new("eflame_sword_fire"), Hash40::new("sword1"), 0, 0, 0, 0, 0, 0, 0.45, true);
		LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 180, 0, 0.6, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 19.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("eflame_sword_firetrail"), Hash40::new("sword1"), 0, 0, 0, -21, 0, 0, 0.75, true);
	}
	frame(lua_state, 21.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_firetrail"), true, true);
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("eflame_sword_firetrail_end"), Hash40::new("sword1"), 0, 0, 0, -10, 0, 0, 0.75, true);
		LAST_EFFECT_SET_RATE(fighter, 1.6);
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_fire2"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_fire"), false, true);
	}
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		AFTER_IMAGE_OFF(fighter, 3);
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_firetrail_end"), false, true);
	}
	frame(lua_state, 29.0);
	if is_excute(fighter) {
		AFTER_IMAGE4_ON_arg29(Hash40::new("tex_eflame_sword1"), Hash40::new("tex_eflame_sword2"), 7, Hash40::new("sword1"), 0.3, 0, 0, Hash40::new("sword1"), 14, 0, -0.25, true, Hash40::new("null"), Hash40::new("sword1"), 0, 0, 0, 0, 0, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 1.4, 0.1);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false);
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("eflame_sword_fire2"), Hash40::new("sword1"), 0, 0, 0, 0, 0, 0, 0.45, true);
		EFFECT_FOLLOW(fighter, Hash40::new("eflame_sword_fire"), Hash40::new("sword1"), 0, 0, 0, 0, 0, 0, 0.45, true);
	}
	frame(lua_state, 31.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("eflame_sword_firetrail"), Hash40::new("sword1"), 0, 0, 0, -35, 0, 0, 0.75, true);
	}
	frame(lua_state, 32.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_firetrail"), true, true);
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("eflame_sword_firetrail"), Hash40::new("sword1"), 0, 0, 0, -15, 0, 0, 0.75, true);
	}
	frame(lua_state, 34.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_firetrail"), true, true);
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("eflame_sword_firetrail_end"), Hash40::new("sword1"), 0, 0, 0, 15, 0, 0, 0.75, true);
		LAST_EFFECT_SET_RATE(fighter, 1.6);
	}
	frame(lua_state, 35.0);
	if is_excute(fighter) {
		AFTER_IMAGE_OFF(fighter, 3);
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_fire2"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_fire"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("eflame_sword_beam_s"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("eflame_sword_close"), Hash40::new("sword1"), 0, 0, 0, 0, 90, 0, 1, true);
	}
}