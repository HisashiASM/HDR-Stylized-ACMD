#[acmd_script( agent = "eflame", script = "game_finalattackcommon" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalattackcommon (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x3de840(0, 0)){;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 1, 0);
			0x3de840(-1268740023, 2.9);
			CAM_ZOOM_IN_arg5(0, -0.3);
			camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, -5, 5);
		}
		else{;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 1, 0);
			0x3de840(-1268740023, 2.9);
			CAM_ZOOM_IN_arg5(0, 0.3);
			camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 5, 5);
		}
	}
}
frame(lua_state, 2.0);
if is_excute(fighter) {
	ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_EFLAME_GENERATE_ARTICLE_BLAZEPILLAR);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
}
frame(lua_state, 6.0);
if is_excute(fighter) {
	CAM_ZOOM_OUT(fighter);
	camera(*MA_MSC_CMD_CAMERA_CAM_RESET);
}
frame(lua_state, 12.0);
if is_excute(fighter) {
	camera(*MA_MSC_CMD_CAMERA_CAM_RECT, 0, 0, 35, 0);
}
frame(lua_state, 144.0);
if is_excute(fighter) {
	ArticleModule::set_flag(fighter.module_accessor, *FIGHTER_EFLAME_GENERATE_ARTICLE_DIVER, true, *WEAPON_ELEMENT_DIVER_INSTANCE_WORK_ID_FLAG_FINAL_ATTACK_DETACH);
}
}