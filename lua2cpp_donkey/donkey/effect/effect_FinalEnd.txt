#[acmd_script( agent = "donkey", script = "effect_finalend" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_finalend (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("donkey_final_rash"), true, true);
	}
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 12, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
		LAST_EFFECT_SET_RATE(fighter, 0.7);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("donkey_final_arc"), Hash40::new("top"), 0, 14, 4, 0, 0, 110, 1, true);
		methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 22, 18, 0, 9, 32, true);
		methodlib::L2CValue::as_hash()const();
		EffectModule::request_post_effect_line_circle(fighter.module_accessor);
		EFFECT(fighter, 0, Hash40::new("donkey_final_lasthit"), Hash40::new("top"), 0, 11, 33, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 16.0);
	if is_excute(fighter) {
		EffectModule::remove_post_effect_line(fighter.module_accessor, 3, true);
	}
	frame(lua_state, 34.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
		LAST_EFFECT_SET_RATE(fighter, 0.7);
	}
	frame(lua_state, 40.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("bg_donkey_final2"));
		EffectModule::remove_screen(fighter.module_accessor);
		methodlib::L2CValue::as_hash()const(Hash40::new("bg_donkey_final2b"));
		EffectModule::remove_screen(fighter.module_accessor);
	}
	for(5 Iterations){;
	if is_excute(fighter) {
		EFFECT_FLIP(fighter, Hash40::new("sys_attack_impact"), Hash40::new("sys_attack_impact"), Hash40::new("top"), -8, 14, 4, 0, 0, 0, 1.3, 0, 4, 7, 0, 0, 0, true, *EF_FLIP_YZ);
	}
	wait(lua_state, 6.0);
}
}