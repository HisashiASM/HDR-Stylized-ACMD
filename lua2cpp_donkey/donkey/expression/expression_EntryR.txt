#[acmd_script( agent = "donkey", script = "expression_entryr" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_entryr (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		notify_event_msc_cmd(0x1f20a9d549, false);
		notify_event_msc_cmd(0x24772eddef, false);
		ItemModule::set_attach_item_visibility(fighter.module_accessor, false);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		notify_event_msc_cmd(0x1f20a9d549, true);
		notify_event_msc_cmd(0x24772eddef, true);
		ItemModule::set_attach_item_visibility(fighter.module_accessor, true);
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
	}
	frame(lua_state, 45.0);
	IS_EXIST_ARTICLE(fighter, *FIGHTER_DONKEY_GENERATE_ARTICLE_DKBARREL);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		if is_excute(fighter) {
			ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_DONKEY_GENERATE_ARTICLE_DKBARREL, false);
		}
	}
	frame(lua_state, 67.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
}