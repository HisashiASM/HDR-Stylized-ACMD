#[acmd_script( agent = "reflet", script = "game_finalstart" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalstart (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WHOLE_HIT(fighter, *HIT_STATUS_XLU);
	}
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 40, 0, 0, 0);
		SLOW_OPPONENT(fighter, 8, 50);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		frame(lua_state, 5.0);
		if is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_REFLET_GENERATE_ARTICLE_CHROM);
			FT_SET_FINAL_FEAR_FACE(fighter, 30);
			REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalstart.nuanmb"), false);
			FT_START_CUTIN(fighter);
		}
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		SlowModule::set_whole(fighter.module_accessor, 6, 0);
	}
	else{;
	if is_excute(fighter) {
		PostureModule::scale(fighter.module_accessor, 3, 0);
		0x144300(1831911710, 2);
		CAM_ZOOM_IN_arg5(0, 0);
		camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 6);
		FT_START_CUTIN(fighter);
	}
}
frame(lua_state, 5.0);
if is_excute(fighter) {
	ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_REFLET_GENERATE_ARTICLE_CHROM);
}
frame(lua_state, 25.0);
if is_excute(fighter) {
	SlowModule::clear_whole(fighter.module_accessor);
	CAM_ZOOM_OUT(fighter);
}
frame(lua_state, 28.0);
if is_excute(fighter) {
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_REFLET_STATUS_FINAL_FLAG_SWORD_THROW_START);
}
frame(lua_state, 45.0);
if is_excute(fighter) {
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_REFLET_STATUS_FINAL_FLAG_GOTO_MOVE);
}
}