#[acmd_script( agent = "reflet", script = "game_win3b" , category = ACMD_GAME , low_priority)]
unsafe fn game_win3b (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_REFLET_GENERATE_ARTICLE_CHROM);
		methodlib::L2CValue::as_hash()const(*FIGHTER_REFLET_GENERATE_ARTICLE_CHROM, Hash40::new("win3"));
		ArticleModule::change_motion(fighter.module_accessor);
		WorkModule::get_int(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_INT_COLOR);
		methodlib::L2CValue::operator%(lib::L2CValueconst&)const(0, 2);
		if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0)){;
			methodlib::L2CValue::as_hash()const(*FIGHTER_REFLET_GENERATE_ARTICLE_CHROM, *WEAPON_REFLET_CHROM_MOTION_PART_SET_KIND_FACE, Hash40::new("win3b"), 0, 1, false, false, 0, false, true, false);
			ArticleModule::add_motion_partial(fighter.module_accessor);
		}
		else{;
		methodlib::L2CValue::as_hash()const(**WEAPON_REFLET_CHROM_MOTION_PART_SET_KIND_FACE, WEAPON_REFLET_CHROM_MOTION_PART_SET_KIND_FACE, Hash40::new("win3a"), 0, 1, false, false, 0, false, true, false);
		ArticleModule::add_motion_partial(fighter.module_accessor);
	}
}
}