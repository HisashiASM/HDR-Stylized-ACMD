#[acmd_script( agent = "edge", script = "sound_speciallwhit" , category = ACMD_SOUND , low_priority)]
unsafe fn sound_speciallwhit (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_edge_special_l02_01"));
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_EDGE_STATUS_SPECIAL_LW_FLAG_IS_HIT_SHIELD);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_edge_special_l04"));
		}
	}
	frame(lua_state, 6.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_EDGE_STATUS_SPECIAL_LW_FLAG_VOICE);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		WorkModule::is_flag(fighter.module_accessor, *FIGHTER_EDGE_STATUS_SPECIAL_LW_FLAG_IS_HIT_SHIELD);
		if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
			if is_excute(fighter) {
				PLAY_SEQUENCE(fighter, Hash40::new("seq_edge_rnd_attack_special_lw_b"));
			}
		}
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_EDGE_STATUS_SPECIAL_LW_FLAG_IS_HIT_SHIELD);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		if is_excute(fighter) {
			PLAY_SEQUENCE(fighter, Hash40::new("seq_edge_rnd_attack_special_lw"));
		}
	}
}