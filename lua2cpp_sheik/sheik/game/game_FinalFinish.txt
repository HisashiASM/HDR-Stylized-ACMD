#[acmd_script( agent = "sheik", script = "game_finalfinish" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalfinish (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_SHEIK_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT);
	if(0x154f30(false, true)){;
		frame(lua_state, 1.0);
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x154f30(0, 0)){;
			if is_excute(fighter) {
				PostureModule::scale(fighter.module_accessor, 5, 0);
				0x154f30(-1599779927, 1.5);
				CAM_ZOOM_IN_arg5(-2.8, 2.5);
				camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, -10, 0);
			}
			else{;
			if is_excute(fighter) {
				PostureModule::scale(fighter.module_accessor, 5, 0);
				0x154f30(-1599779927, 1.5);
				CAM_ZOOM_IN_arg5(-2.8, -2.5);
				camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 10, 0);
			}
		}
	}
}
frame(lua_state, 10.0);
if is_excute(fighter) {
	FILL_SCREEN_MODEL_COLOR(fighter, 0, 10, 0.5, 0.5, 0.5, 0, 0, 0, 0.1, 3, EffectScreenLayer:*CHAR, *EFFECT_SCREEN_PRIO_FINAL);
}
frame(lua_state, 35.0);
if is_excute(fighter) {
	CAM_ZOOM_OUT(fighter);
}
get_value_float(*SO_VAR_FLOAT_LR);
if(0x154f30(0, 0)){;
	if is_excute(fighter) {
		PostureModule::scale(fighter.module_accessor, 5, 0);
		0x154f30(-1599779927, 2);
		CAM_ZOOM_IN_arg5(0, 0.8);
		camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
	}
	else{;
	if is_excute(fighter) {
		PostureModule::scale(fighter.module_accessor, 5, 0);
		0x154f30(-1599779927, 2);
		CAM_ZOOM_IN_arg5(0, -0.8);
		camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
	}
}
}
frame(lua_state, 45.0);
if is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_SHEIK_STATUS_FINAL_FLAG_FINISH);
ATTACK(fighter, 0, 0, Hash40::new("top"), 12.0, 361, 135, 0, 65, 12.0, 0.0, 8.0, 5.0, Some(0.0), Some(8.0), Some(15.0), 0.2, 1.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
}
wait(lua_state, 3.0);
if is_excute(fighter) {
CAM_ZOOM_OUT(fighter);
AttackModule::clear_all(fighter.module_accessor);
}
frame(lua_state, 60.0);
if is_excute(fighter) {
CANCEL_FILL_SCREEN(fighter, 0, 50);
CANCEL_FILL_SCREEN(fighter, 1, 50);
CANCEL_FILL_SCREEN(fighter, 2, 50);
}
}