#[acmd_script( agent = "demon_blasterwing", script = "game_finalair" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalair (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x3cfb70(0, 0)){;
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("blasterwingr1"), 0.8, 300, 100, 60, 0, 2.0, -12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 1, 0, Hash40::new("blasterwingr2"), 0.8, 80, 100, 80, 0, 2.0, -9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 2, 0, Hash40::new("blasterwingr3"), 0.8, 300, 100, 60, 0, 2.0, -5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 3, 0, Hash40::new("blasterwingl1"), 0.8, 80, 100, 80, 0, 2.0, 5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 4, 0, Hash40::new("blasterwingl2"), 0.8, 300, 100, 60, 0, 2.0, 9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 5, 0, Hash40::new("blasterwingl3"), 0.8, 80, 100, 80, 0, 2.0, 12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		}
		else{;
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("blasterwingr1"), 0.8, 300, 100, 60, 0, 2.0, 12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 1, 0, Hash40::new("blasterwingr2"), 0.8, 80, 100, 80, 0, 2.0, 9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 2, 0, Hash40::new("blasterwingr3"), 0.8, 300, 100, 60, 0, 2.0, 5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 3, 0, Hash40::new("blasterwingl1"), 0.8, 80, 100, 80, 0, 2.0, -5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 4, 0, Hash40::new("blasterwingl2"), 0.8, 300, 100, 60, 0, 2.0, -9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
			ATTACK(fighter, 5, 0, Hash40::new("blasterwingl3"), 0.8, 80, 100, 80, 0, 2.0, -12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.8, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		}
	}
}
frame(lua_state, 10.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x3cfb70(3456, 0)){;
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("blasterwingr1"), 0.8, 300, 100, 60, 0, 2.0, -12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 1, 0, Hash40::new("blasterwingr2"), 0.8, 80, 100, 60, 0, 2.0, -9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 2, 0, Hash40::new("blasterwingr3"), 0.8, 300, 100, 60, 0, 2.0, -5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 3, 0, Hash40::new("blasterwingl1"), 0.8, 80, 100, 60, 0, 2.0, 5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 4, 0, Hash40::new("blasterwingl2"), 0.8, 300, 100, 60, 0, 2.0, 9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 5, 0, Hash40::new("blasterwingl3"), 0.8, 80, 100, 60, 0, 2.0, 12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	}
	else{;
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("blasterwingr1"), 0.8, 300, 100, 60, 0, 2.0, 12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 1, 0, Hash40::new("blasterwingr2"), 0.8, 80, 100, 60, 0, 2.0, 9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 2, 0, Hash40::new("blasterwingr3"), 0.8, 300, 100, 60, 0, 2.0, 5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 3, 0, Hash40::new("blasterwingl1"), 0.8, 80, 100, 60, 0, 2.0, -5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 4, 0, Hash40::new("blasterwingl2"), 0.8, 300, 100, 60, 0, 2.0, -9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
		ATTACK(fighter, 5, 0, Hash40::new("blasterwingl3"), 0.8, 80, 100, 60, 0, 2.0, -12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 10, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	}
}
}
frame(lua_state, 50.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x3cfb70(6912, 0)){;
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("blasterwingr1"), 0.8, 300, 100, 75, 0, 2.0, -12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 1, 0, Hash40::new("blasterwingr2"), 0.8, 80, 100, 75, 0, 2.0, -9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 2, 0, Hash40::new("blasterwingr3"), 0.8, 300, 100, 75, 0, 2.0, -5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 3, 0, Hash40::new("blasterwingl1"), 0.8, 80, 100, 75, 0, 2.0, 5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 4, 0, Hash40::new("blasterwingl2"), 0.8, 300, 100, 75, 0, 2.0, 9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 5, 0, Hash40::new("blasterwingl3"), 0.8, 80, 100, 75, 0, 2.0, 12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
}
else{;
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("blasterwingr1"), 0.8, 300, 100, 75, 0, 2.0, 12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 1, 0, Hash40::new("blasterwingr2"), 0.8, 80, 100, 75, 0, 2.0, 9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 2, 0, Hash40::new("blasterwingr3"), 0.8, 300, 100, 75, 0, 2.0, 5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 3, 0, Hash40::new("blasterwingl1"), 0.8, 80, 100, 75, 0, 2.0, -5.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 4, 0, Hash40::new("blasterwingl2"), 0.8, 300, 100, 75, 0, 2.0, -9.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 5, 0, Hash40::new("blasterwingl3"), 0.8, 80, 100, 75, 0, 2.0, -12.0, 0.0, 8.0, Some(0.0), Some(0.0), Some(120.0), 0.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
}
}
}
if is_excute(fighter) {
AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, false);
AttackModule::set_final_finish_cut_in(fighter.module_accessor, 1, true, true, -1, false);
AttackModule::set_final_finish_cut_in(fighter.module_accessor, 2, true, true, -1, false);
AttackModule::set_final_finish_cut_in(fighter.module_accessor, 3, true, true, -1, false);
AttackModule::set_final_finish_cut_in(fighter.module_accessor, 4, true, true, -1, false);
AttackModule::set_final_finish_cut_in(fighter.module_accessor, 5, true, true, -1, false);
}
frame(lua_state, 110.0);
if is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
}
}