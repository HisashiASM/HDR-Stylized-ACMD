#[acmd_script( agent = "demon", script = "effect_final" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_final (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		CANCEL_FILL_SCREEN(fighter, 1, 0);
		CANCEL_FILL_SCREEN(fighter, 0, 0);
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x3cfb70(0, 0)){;
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(0x16229f767c, false);
			EffectModule::req_screen(fighter.module_accessor);
		}
		else{;
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(0x16d8904b1f, false);
			EffectModule::req_screen(fighter.module_accessor);
		}
	}
}
if is_excute(fighter) {
	EFFECT_OFF_KIND(fighter, Hash40::new("demon_final_smoke"), true, true);
	EFFECT_OFF_KIND(fighter, Hash40::new("demon_final_sparks"), true, true);
	EFFECT_FOLLOW(fighter, Hash40::new("demon_final_wind"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
}
frame(lua_state, 4.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x3cfb70(-1037516665, 0)){;
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(0x16229f767c, false);
		EffectModule::req_screen(fighter.module_accessor);
	}
	else{;
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(0x16d8904b1f, false);
		EffectModule::req_screen(fighter.module_accessor);
	}
}
}
if is_excute(fighter) {
FOOT_EFFECT(fighter, Hash40::new("sys_run_smoke"), Hash40::new("top"), -3, 0, 0, 0, 0, 0, 1, 10, 0, 4, 0, 0, 0, false);
}
wait(lua_state, 5.0);
}