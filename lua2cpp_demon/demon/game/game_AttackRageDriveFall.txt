#[acmd_script( agent = "demon", script = "game_attackragedrivefall" , category = ACMD_GAME , low_priority)]
unsafe fn game_attackragedrivefall (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE);
	if(0x3cfb70(false, false)){;
		battle_object_module_accessor();
		methodlib::L2CValue::L2CValue(void*)();
		methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
		methodlib::L2CValue::as_pointer()const(true, 3);
		set_devil();
		if is_excute(fighter) {
			WHOLE_HIT(fighter, *HIT_STATUS_INVINCIBLE);
			ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_BODY);
			ATTACK_IGNORE_THROW(fighter, 0, 0, Hash40::new("top"), 18.0, 361, 80, 0, 80, 9.0, 0.0, 3.0, 1.0, Some(0.0), Some(6.0), Some(-1.0), 0.9, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_PUNCH);
		}
	}
	else{;
	battle_object_module_accessor(0);
	methodlib::L2CValue::L2CValue(void*)();
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
	methodlib::L2CValue::as_pointer()const(true, 3);
	set_devil();
	if is_excute(fighter) {
		WHOLE_HIT(fighter, *HIT_STATUS_INVINCIBLE);
		ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_BODY);
		ATTACK_IGNORE_THROW(fighter, 0, 0, Hash40::new("top"), 15.0, 361, 80, 0, 80, 9.0, 0.0, 3.0, 1.0, Some(0.0), Some(6.0), Some(-1.0), 0.9, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_PUNCH);
	}
}
}