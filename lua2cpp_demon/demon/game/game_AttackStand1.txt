#[acmd_script( agent = "demon", script = "game_attackstand1" , category = ACMD_GAME , low_priority)]
unsafe fn game_attackstand1 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		shield(MSC=*MA_MSC_CMD_SHIELD_ON, Type=*COLLISION_KIND_REFLECTOR, ID=FIGHTER_DEMON_REFLECTOR_KIND_ATTACK_STAND1, Group=FIGHTER_DEMON_REFLECTOR_GROUP_ATTACK_STAND1);
		HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_XLU);
	}
	frame(lua_state, 12.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 18.0, 84, 40, 0, 78, 3.8, 0.0, 10.5, 10.5, None, None, None, 0.4, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 3, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
		ATTACK(fighter, 1, 0, Hash40::new("top"), 18.0, 84, 40, 0, 78, 3.8, 0.0, 11.5, 5.0, None, None, None, 0.4, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 3, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
		ATTACK(fighter, 2, 0, Hash40::new("top"), 18.0, 84, 40, 0, 78, 4.2, 0.0, 10.5, 2.5, None, None, None, 0.4, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 3, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
		AttackModule::set_add_reaction_frame_revised(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 10, /*Unk*/ false);
		AttackModule::set_add_reaction_frame_revised(fighter.module_accessor, /*ID*/ 1, /*Frames*/ 10, /*Unk*/ false);
		AttackModule::set_add_reaction_frame_revised(fighter.module_accessor, /*ID*/ 2, /*Frames*/ 10, /*Unk*/ false);
		ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 1.1);
		ATK_SET_SHIELD_SETOFF_MUL(fighter, 1, 1.1);
		ATK_SET_SHIELD_SETOFF_MUL(fighter, 2, 1.1);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 18.0, 84, 40, 0, 78, 3.8, 0.0, 7.25, 7.5, None, None, None, 0.4, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 3, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
		ATTACK(fighter, 1, 0, Hash40::new("top"), 18.0, 84, 40, 0, 78, 3.8, 0.0, 11.5, 5.0, None, None, None, 0.4, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 3, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
		ATTACK(fighter, 2, 0, Hash40::new("top"), 18.0, 84, 40, 0, 78, 4.2, 0.0, 10.5, 2.5, None, None, None, 0.4, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 3, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
		AttackModule::set_add_reaction_frame_revised(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 10, /*Unk*/ false);
		AttackModule::set_add_reaction_frame_revised(fighter.module_accessor, /*ID*/ 1, /*Frames*/ 10, /*Unk*/ false);
		AttackModule::set_add_reaction_frame_revised(fighter.module_accessor, /*ID*/ 2, /*Frames*/ 10, /*Unk*/ false);
		ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 1.1);
		ATK_SET_SHIELD_SETOFF_MUL(fighter, 1, 1.1);
		ATK_SET_SHIELD_SETOFF_MUL(fighter, 2, 1.1);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		HitModule::set_status_all(fighter.module_accessor, *HIT_STATUS_NORMAL);
		AttackModule::clear_all(fighter.module_accessor);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		shield(MSC=*MA_MSC_CMD_SHIELD_OFF, Type=*COLLISION_KIND_REFLECTOR, ID=FIGHTER_DEMON_REFLECTOR_KIND_ATTACK_STAND1, Group=FIGHTER_DEMON_REFLECTOR_GROUP_ATTACK_STAND1);
	}
}