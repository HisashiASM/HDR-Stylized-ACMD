#[acmd_script( agent = "demon", script = "game_finalair" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalair (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WHOLE_HIT(fighter, *HIT_STATUS_XLU);
	}
	frame(lua_state, 1.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_DEMON_STATUS_FINAL_FLAG_DEMON_DOJO_ZOOM);
	if(0x3cfb70(false, true)){;
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x3cfb70(0, 0)){;
			if is_excute(fighter) {
				PostureModule::scale(fighter.module_accessor, 1, 0);
				0x3cfb70(-1037516665, 2);
				CAM_ZOOM_IN_arg5(0, -0.1);
				camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, -5, 5);
			}
			else{;
			get_value_float(*MA_MSC_CMD_CAMERA_CAM_OFFSET);
			if(0x3cfb70(0, 0)){;
				if is_excute(fighter) {
					PostureModule::scale(fighter.module_accessor, 1, 0);
					0x3cfb70(-1037516665, 2);
					CAM_ZOOM_IN_arg5(0, -0.3);
					camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, -5, 5);
				}
				else{;
				if is_excute(fighter) {
					PostureModule::scale(fighter.module_accessor, 1, 0);
					0x3cfb70(-1037516665, 2);
					CAM_ZOOM_IN_arg5(0, 0.1);
					camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 5, 5);
				}
				else{;
				if is_excute(fighter) {
					PostureModule::scale(fighter.module_accessor, 1, 0);
					0x3cfb70(-1037516665, 2);
					CAM_ZOOM_IN_arg5(0, 0.3);
					camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 5, 5);
				}
			}
		}
	}
}
}
}
frame(lua_state, 3.0);
if is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_DEMON_STATUS_FINAL_FLAG_END_FINAL);
}
frame(lua_state, 5.0);
if is_excute(fighter) {
CAM_ZOOM_OUT(fighter);
}
frame(lua_state, 15.0);
if is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
}
}