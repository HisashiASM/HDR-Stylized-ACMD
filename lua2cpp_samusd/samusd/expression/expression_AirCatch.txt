#[acmd_script( agent = "samusd", script = "expression_aircatch" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_aircatch (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_hide_gun"));
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_SAMUSD_GENERATE_ARTICLE_GUN);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_SAMUSD_GENERATE_ARTICLE_GUN, true);
		methodlib::L2CValue::as_hash()const(*FIGHTER_SAMUSD_GENERATE_ARTICLE_GUN, Hash40::new("air_catch"));
		ArticleModule::change_motion(fighter.module_accessor);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_SAMUSD_GENERATE_ARTICLE_GBEAM);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_SAMUSD_GENERATE_ARTICLE_GBEAM, false);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_AIR_LASSO_FLAG_CHECK);
	}
	wait(lua_state, 5.0);
	if is_excute(fighter) {
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_AIR_LASSO_FLAG_CHECK);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 0);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattacks"), 9, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_SAMUSD_GENERATE_ARTICLE_GBEAM, true);
		ArticleModule::change_status(fighter.module_accessor, *FIGHTER_SAMUSD_GENERATE_ARTICLE_GBEAM, *WEAPON_SAMUS_GBEAM_STATUS_KIND_SHOOT);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_AIR_LASSO_FLAG_LANDING);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattacks"), 14, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_SAMUS_INSTANCE_WORK_ID_FLAG_OFF_MAP_COLL_OFFSET);
		ArticleModule::change_status_exist(fighter.module_accessor, *FIGHTER_SAMUSD_GENERATE_ARTICLE_GBEAM, *WEAPON_SAMUS_GBEAM_STATUS_KIND_REWIND);
	}
	frame(lua_state, 48.0);
	if is_excute(fighter) {
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_AIR_LASSO_FLAG_LANDING);
	}
	frame(lua_state, 50.0);
	if is_excute(fighter) {
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_SAMUSD_GENERATE_ARTICLE_GBEAM);
	}
}