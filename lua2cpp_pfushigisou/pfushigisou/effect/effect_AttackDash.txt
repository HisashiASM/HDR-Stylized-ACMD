#[acmd_script( agent = "pfushigisou", script = "effect_attackdash" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackdash (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		EFFECT_ALPHA(fighter, Hash40::new("sys_attack_impact"), Hash40::new("top"), 0, 4.5, 9, 0, 0, 0, 1.4, 0, 0, 0, 0, 0, 360, true, 1);
		LAST_EFFECT_SET_RATE(fighter, 1.3);
		LANDING_EFFECT(fighter, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
		EFFECT_FOLLOW_FLIP(fighter, Hash40::new("pfushigisou_atk_impact"), Hash40::new("pfushigisou_atk_impact"), Hash40::new("top"), -2.5, 5.4, 4, 0, 0, 0, 1, true, *EF_FLIP_YZ);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP_FLIP(fighter, Hash40::new("sys_attack_speedline"), Hash40::new("sys_attack_speedline"), Hash40::new("top"), -1, 5.5, 2, 0, 180, 0, 1, true, *EF_FLIP_YZ);
		LAST_EFFECT_SET_ALPHA(fighter, 0.3);
		LAST_EFFECT_SET_RATE(fighter, 0.8);
	}
	frame(lua_state, 14.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP_FLIP(fighter, Hash40::new("sys_attack_speedline"), Hash40::new("sys_attack_speedline"), Hash40::new("top"), -1, 5.5, 2, 0, 180, 0, 0.9, true, *EF_FLIP_YZ);
		LAST_EFFECT_SET_ALPHA(fighter, 0.2);
		LAST_EFFECT_SET_RATE(fighter, 0.8);
	}
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 1, 0, 0, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 27.0);
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 32.0);
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 38.0);
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_turn_smoke"), Hash40::new("top"), -1, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
	}
}