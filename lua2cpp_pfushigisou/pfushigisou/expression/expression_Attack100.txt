#[acmd_script( agent = "pfushigisou", script = "expression_attack100" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attack100 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	wait_loop_sync_mot();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("weapon"), Hash40::new("weapon_normal"));
	}
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackss"), 3);
	}
	frame(lua_state, 3.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 19.0);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, false);
	ControlModule::set_rumble(fighter.module_accessor);
}