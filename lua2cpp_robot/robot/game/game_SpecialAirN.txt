#[acmd_script( agent = "robot", script = "game_specialairn" , category = ACMD_GAME , low_priority)]
unsafe fn game_specialairn (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_ROBOT_STATUS_BEAM_FLAG_NECK_CONTROL);
	}
	frame(lua_state, 25.0);
	if is_excute(fighter) {
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_ROBOT_STATUS_BEAM_FLAG_NECK_CONTROL);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_ROBOT_STATUS_BEAM_FLAG_SHOOT);
		ATTACK(fighter, 0, 0, Hash40::new("head1"), 7.0, 361, 95, 0, 40, 7.0, 0.0, 7.0, 1.2, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_ENERGY);
	}
	wait(lua_state, 3.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_ROBOT_STATUS_BEAM_FLAG_NECK_RETURN);
	}
}