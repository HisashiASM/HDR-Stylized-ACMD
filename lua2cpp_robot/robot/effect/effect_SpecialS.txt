#[acmd_script( agent = "robot", script = "effect_specials" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_specials (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -3, 0, 0, 0, 0, 0, 1.25, 0, 0, 0, 0, 0, 0, false);
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x1050b0(168, 0)){;
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("robot_armspin"), Hash40::new("body"), 1, 0, 0, 0, 60, 90, 1, true);
		}
	}
	if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){;
		WorkModule::is_flag(fighter.module_accessor, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP);
		if(0x1050b0(false, true)){;
			if is_excute(fighter) {
				LAST_EFFECT_SET_COLOR(fighter, 0.1, 0.01, 0);
			}
			else{;
			if is_excute(fighter) {
				LAST_EFFECT_SET_COLOR(fighter, 0.196, 0.196, 0.216);
			}
		}
	}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){;
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP);
	if(0x1050b0(false, true)){;
		if is_excute(fighter) {
			LAST_EFFECT_SET_COLOR(fighter, 0.196, 0.196, 0.216);
		}
		else{;
		if is_excute(fighter) {
			LAST_EFFECT_SET_COLOR(fighter, 0.22, 0.059, 0.039);
		}
	}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){;
if is_excute(fighter) {
	LAST_EFFECT_SET_COLOR(fighter, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){;
if is_excute(fighter) {
	LAST_EFFECT_SET_COLOR(fighter, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){;
if is_excute(fighter) {
	LAST_EFFECT_SET_COLOR(fighter, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){;
if is_excute(fighter) {
	LAST_EFFECT_SET_COLOR(fighter, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){;
if is_excute(fighter) {
	LAST_EFFECT_SET_COLOR(fighter, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){;
if is_excute(fighter) {
	LAST_EFFECT_SET_COLOR(fighter, 0.118, 0.039, 0.051);
}
}
if is_excute(fighter) {
EFFECT_FOLLOW(fighter, Hash40::new("robot_armspin_wind"), Hash40::new("body"), 1, 0, 0, 0, 60, 90, 1, true);
}
else{;
if is_excute(fighter) {
EFFECT_FOLLOW(fighter, Hash40::new("robot_armspin"), Hash40::new("body"), 1, 0, 0, 0, -100, -90, 1, true);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){;
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP);
if(0x1050b0(false, true)){;
if is_excute(fighter) {
	LAST_EFFECT_SET_COLOR(fighter, 0.1, 0.01, 0);
}
else{;
if is_excute(fighter) {
	LAST_EFFECT_SET_COLOR(fighter, 0.196, 0.196, 0.216);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){;
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP);
if(0x1050b0(false, true)){;
if is_excute(fighter) {
LAST_EFFECT_SET_COLOR(fighter, 0.196, 0.196, 0.216);
}
else{;
if is_excute(fighter) {
LAST_EFFECT_SET_COLOR(fighter, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){;
if is_excute(fighter) {
LAST_EFFECT_SET_COLOR(fighter, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){;
if is_excute(fighter) {
LAST_EFFECT_SET_COLOR(fighter, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){;
if is_excute(fighter) {
LAST_EFFECT_SET_COLOR(fighter, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){;
if is_excute(fighter) {
LAST_EFFECT_SET_COLOR(fighter, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){;
if is_excute(fighter) {
LAST_EFFECT_SET_COLOR(fighter, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){;
if is_excute(fighter) {
LAST_EFFECT_SET_COLOR(fighter, 0.118, 0.039, 0.051);
}
}
if is_excute(fighter) {
EFFECT_FOLLOW(fighter, Hash40::new("robot_armspin_wind"), Hash40::new("body"), 1, 0, 0, 0, -100, -90, 1, true);
}
if is_excute(fighter) {
LANDING_EFFECT_FLIP(fighter, Hash40::new("sys_whirlwind_l"), Hash40::new("sys_whirlwind_r"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_YZ);
}
wait(lua_state, 10.0);
}