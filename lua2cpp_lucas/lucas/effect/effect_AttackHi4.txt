#[acmd_script( agent = "lucas", script = "effect_attackhi4" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackhi4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), 0, 13, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_FLIP(fighter, Hash40::new("lucas_psi_hold"), Hash40::new("lucas_psi_hold"), Hash40::new("haver"), 0, 0, 0.3, 0, 0, 0, 1, true, *EF_FLIP_YZ);
	}
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("lucas_psi_hold"), true, true);
		EFFECT_FOLLOW_FLIP(fighter, Hash40::new("lucas_psi_catch"), Hash40::new("lucas_psi_catch"), Hash40::new("top"), 0, 15, -0.5, 0, 0, 0, 1.5, true, *EF_FLIP_YZ);
	}
	frame(lua_state, 25.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_crown"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 26.0);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("lucas_psi_atk_hi"), Hash40::new("top"), 0, 15, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("lucas_psi_catch"), false, false);
		EFFECT_FOLLOW(fighter, Hash40::new("lucas_psi_atk"), Hash40::new("top"), 0, 13, 0, -90, 0, 0, 1.55, true);
	}
	frame(lua_state, 38.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("lucas_psi_atk"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("lucas_psi_atk"), Hash40::new("top"), 0, 25, 0, -90, 0, 0, 1.5, true);
	}
	frame(lua_state, 48.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("lucas_psi_atk"), true, true);
		EFFECT_FOLLOW(fighter, Hash40::new("lucas_psi_atk"), Hash40::new("top"), 0, 37, 0, -90, 0, 0, 1.1, true);
	}
	frame(lua_state, 54.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("lucas_psi_atk"), false, false);
	}
}