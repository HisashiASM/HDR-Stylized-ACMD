#[acmd_script( agent = "pikmin_dolfin", script = "game_final" , category = ACMD_GAME , low_priority)]
unsafe fn game_final (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WHOLE_HIT(fighter, *HIT_STATUS_INVINCIBLE);
		ATTACK(fighter, 0, 0, Hash40::new("body"), 10.0, 250, 100, 0, 80, 17.0, 0.0, 15.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
		ATTACK(fighter, 1, 0, Hash40::new("body"), 10.0, 250, 100, 1, 0, 17.0, 0.0, -15.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, false);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 1, true, true, -1, false);
	}
	frame(lua_state, 60.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_PIKMIN_DOLFIN_STATUS_FINAL_FLY_WORK_FLAG_FINAL_STATUS_ON);
	}
}