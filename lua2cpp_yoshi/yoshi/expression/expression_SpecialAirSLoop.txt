#[acmd_script( agent = "yoshi", script = "expression_specialairsloop" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_specialairsloop (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	wait_loop_sync_mot();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
	}
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_egg"));
		HIT_NODE(fighter, Hash40::new("hip"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("bust"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("snout"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("toer"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("toel"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("tail2"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_NORMAL);
	}
}