#[acmd_script( agent = "brave", script = "expression_visualscene" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_visualscene (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase_sp"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_erase_sp"), 0);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 34, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_elecattack"), 34);
	}
	frame(lua_state, 70.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_slashm"), 12, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_slashm"), 12);
	}
	frame(lua_state, 154.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beaml"), 32, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_beaml"), 32);
	}
	frame(lua_state, 188.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_32_hold_lv2"), 50, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_32_hold_lv2"), 50);
	}
	frame(lua_state, 200.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
	}
	frame(lua_state, 255.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionm"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_explosionm"), 0);
	}
	frame(lua_state, 314.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_genesis"), 42, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_genesis"), 41);
	}
	frame(lua_state, 357.0);
	if is_excute(fighter) {
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_damage_critical"), 0);
	}
}