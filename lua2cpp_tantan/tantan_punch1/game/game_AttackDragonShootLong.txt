#[acmd_script( agent = "tantan_punch1", script = "game_attackdragonshootlong" , category = ACMD_GAME , low_priority)]
unsafe fn game_attackdragonshootlong (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_AIR);
	if(0x3a02e0(false, true)){;
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("have"), 13.8, 361, 73, 0, 40, 0.7, 5.4, 0.5, 0.3, None, None, None, 0.9, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -4.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
			AttackModule::enable_safe_pos(fighter.module_accessor);
			AttackModule::disable_tip(fighter.module_accessor);
			AttackModule::set_damage_shake_scale(fighter.module_accessor, 0.5);
		}
	}
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("have"), 13.8, 361, 73, 0, 40, 3.2, 5.4, 0.5, 0.3, Some(1.0), Some(0.5), Some(0.3), 0.9, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -4.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_76_dragonarm"), 6, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 4.0);
	WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
	if(0x3a02e0(false, true)){;
		if is_excute(fighter) {
			AttackModule::clear_all(fighter.module_accessor);
		}
		else{;
		WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_IS_DRAGONIZE);
		if(0x3a02e0(false, true)){;
			if is_excute(fighter) {
				ATTACK(fighter, 0, 0, Hash40::new("have"), 15.0, 361, 75, 0, 40, 0.7, 5.4, 0.5, 0.3, None, None, None, 0.9, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -4.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
				AttackModule::enable_safe_pos(fighter.module_accessor);
				AttackModule::disable_tip(fighter.module_accessor);
				AttackModule::set_damage_shake_scale(fighter.module_accessor, 0.5);
			}
			frame(lua_state, 1.0);
			if is_excute(fighter) {
				ATTACK(fighter, 0, 0, Hash40::new("have"), 15.0, 361, 75, 0, 40, 3.2, 5.4, 0.5, 0.3, Some(1.0), Some(0.5), Some(0.3), 0.9, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -4.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
				methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_76_dragonarm"), 6, false);
				ControlModule::set_rumble(fighter.module_accessor);
			}
			frame(lua_state, 4.0);
			WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
			if(0x3a02e0(false, true)){;
				if is_excute(fighter) {
					AttackModule::clear_all(fighter.module_accessor);
				}
				else{;
				if is_excute(fighter) {
					ATTACK(fighter, 0, 0, Hash40::new("have"), 13.8, 361, 75, 0, 40, 0.7, 5.4, 0.5, 0.3, None, None, None, 0.9, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -3.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
					AttackModule::enable_safe_pos(fighter.module_accessor);
					AttackModule::disable_tip(fighter.module_accessor);
					AttackModule::set_damage_shake_scale(fighter.module_accessor, 0.5);
				}
				frame(lua_state, 1.0);
				if is_excute(fighter) {
					ATTACK(fighter, 0, 0, Hash40::new("have"), 13.8, 361, 75, 0, 40, 3.2, 5.4, 0.5, 0.3, Some(1.0), Some(0.5), Some(0.3), 0.9, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -3.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
					methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_76_dragonarm"), 6, false);
					ControlModule::set_rumble(fighter.module_accessor);
				}
				frame(lua_state, 4.0);
				WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
				if(0x3a02e0(false, true)){;
					if is_excute(fighter) {
						AttackModule::clear_all(fighter.module_accessor);
					}
					else{;
					if is_excute(fighter) {
						ATTACK(fighter, 0, 0, Hash40::new("have"), 20.0, 361, 70, 0, 40, 3.2, 5.4, 0.5, 0.3, Some(1.0), Some(0.5), Some(0.3), 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -4.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
						WorkModule::on_flag(fighter.module_accessor, /*Flag*/ WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_CHANGE_HIT_EFFECT);
					}
					frame(lua_state, 9.0);
					WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
					if(0x3a02e0(false, true)){;
						if is_excute(fighter) {
							AttackModule::clear_all(fighter.module_accessor);
						}
						else{;
						if is_excute(fighter) {
							ATTACK(fighter, 0, 0, Hash40::new("have"), 18.4, 361, 70, 0, 40, 3.2, 5.4, 0.5, 0.3, Some(1.0), Some(0.5), Some(0.3), 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -3.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
							WorkModule::on_flag(fighter.module_accessor, /*Flag*/ WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_CHANGE_HIT_EFFECT);
						}
						frame(lua_state, 9.0);
						WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
						if(0x3a02e0(false, true)){;
							if is_excute(fighter) {
								AttackModule::clear_all(fighter.module_accessor);
							}
							else{;
							if is_excute(fighter) {
								ATTACK(fighter, 0, 0, Hash40::new("have"), 14.95, 361, 70, 0, 40, 3.2, 5.4, 0.5, 0.3, Some(1.0), Some(0.5), Some(0.3), 0.9, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -3.5, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
								WorkModule::off_flag(fighter.module_accessor, /*Flag*/ WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_CHANGE_HIT_EFFECT);
							}
							frame(lua_state, 15.143);
							methodlib::L2CValue::operatorbool()const(is_excute);
						}
					}
				}
			}
		}
	}
}
}
}
}
}
AttackModule::clear_all(fighter.module_accessor);
}
}