#[acmd_script( agent = "tantan_punch2", script = "game_attacklong" , category = ACMD_GAME , low_priority)]
unsafe fn game_attacklong (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_AIR);
	if(0x3a02e0(false, true)){;
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("center"), 19.0, 45, 70, 0, 48, 0.7, 0.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -6, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_TANTAN_PUNCH02, *ATTACK_REGION_PUNCH);
			AttackModule::enable_safe_pos(fighter.module_accessor);
			AttackModule::disable_tip(fighter.module_accessor);
			AttackModule::set_damage_shake_scale(fighter.module_accessor, 0.5);
		}
	}
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("center"), 19.0, 45, 70, 0, 48, 3.7, -1.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -6, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_TANTAN_PUNCH02, *ATTACK_REGION_PUNCH);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_76_megabolt"), 24, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 4.0);
	WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
	if(0x3a02e0(false, true)){;
		if is_excute(fighter) {
			AttackModule::clear_all(fighter.module_accessor);
		}
		else{;
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("center"), 19.0, 45, 77, 0, 48, 0.7, 0.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -6, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_TANTAN_PUNCH02, *ATTACK_REGION_PUNCH);
			AttackModule::enable_safe_pos(fighter.module_accessor);
			AttackModule::disable_tip(fighter.module_accessor);
			AttackModule::set_damage_shake_scale(fighter.module_accessor, 0.5);
		}
		frame(lua_state, 1.0);
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("center"), 19.0, 45, 77, 0, 48, 3.7, -1.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -6, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_TANTAN_PUNCH02, *ATTACK_REGION_PUNCH);
			methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_76_megabolt"), 24, false);
			ControlModule::set_rumble(fighter.module_accessor);
		}
		frame(lua_state, 4.0);
		WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
		if(0x3a02e0(false, true)){;
			if is_excute(fighter) {
				AttackModule::clear_all(fighter.module_accessor);
			}
			else{;
			if is_excute(fighter) {
				ATTACK(fighter, 0, 0, Hash40::new("center"), 21.0, 45, 70, 0, 48, 3.7, -1.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -6, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_TANTAN_PUNCH02, *ATTACK_REGION_PUNCH);
			}
			frame(lua_state, 14.0);
			WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
			if(0x3a02e0(false, true)){;
				if is_excute(fighter) {
					AttackModule::clear_all(fighter.module_accessor);
				}
				else{;
				if is_excute(fighter) {
					ATTACK(fighter, 0, 0, Hash40::new("center"), 21.0, 45, 77, 0, 48, 3.7, -1.0, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -6, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_TANTAN_PUNCH02, *ATTACK_REGION_PUNCH);
				}
				frame(lua_state, 16.0);
				WorkModule::is_flag(fighter.module_accessor, WEAPON_TANTAN_PUNCH1*_INSTANCE_WORK_ID_FLAG_BOUND);
				if(0x3a02e0(false, true)){;
					if is_excute(fighter) {
						AttackModule::clear_all(fighter.module_accessor);
					}
					else{;
					if is_excute(fighter) {
						ATTACK(fighter, 0, 0, Hash40::new("center"), 19.0, 45, 74, 0, 48, 3.7, -1.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, -6, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_TANTAN_PUNCH02, *ATTACK_REGION_PUNCH);
					}
					frame(lua_state, 23.0);
					methodlib::L2CValue::operatorbool()const(is_excute);
				}
			}
		}
	}
}
}
}
}
AttackModule::clear_all(fighter.module_accessor);
}
}