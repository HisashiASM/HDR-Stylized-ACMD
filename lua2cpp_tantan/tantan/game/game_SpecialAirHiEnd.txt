#[acmd_script( agent = "tantan", script = "game_specialairhiend" , category = ACMD_GAME , low_priority)]
unsafe fn game_specialairhiend (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		HIT_NO(fighter, 3, *HIT_STATUS_NORMAL);
		HIT_NO(fighter, 9, *HIT_STATUS_NORMAL);
		HIT_NO(fighter, 10, *HIT_STATUS_NORMAL);
		HIT_NO(fighter, 11, *HIT_STATUS_NORMAL);
		HIT_NO(fighter, 12, *HIT_STATUS_NORMAL);
		HIT_NO(fighter, 13, *HIT_STATUS_NORMAL);
		HIT_NO(fighter, 19, *HIT_STATUS_NORMAL);
	}
	frame(0, 2);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_TANTAN_STATUS_SPECIAL_HI_FLAG_IS_BLOCKED);
	if(0x3a02e0(false, true)){;
		WorkModule::is_flag(fighter.module_accessor, *FIGHTER_TANTAN_INSTANCE_WORK_ID_FLAG_DRAGONIZE_L);
		if(0x3a02e0(false, true)){;
			if is_excute(fighter) {
				ATTACK(fighter, 0, 0, Hash40::new("arml"), 10.35, 45, 85, 0, 66, 5.5, 4.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
			}
			frame(lua_state, 3.0);
			methodlib::L2CValue::operatorbool()const(is_excute);
		}
		else{;
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("arml"), 9.0, 45, 78, 0, 56, 4.5, 4.0, 0.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_TANTAN_PUNCH01, *ATTACK_REGION_PUNCH);
		}
		frame(lua_state, 3.0);
		methodlib::L2CValue::operatorbool()const(is_excute);
	}
}
AttackModule::clear_all(fighter.module_accessor);
}
frame(lua_state, 4.0);
if is_excute(fighter) {
notify_event_msc_cmd(0x2127e37c07, *GROUND_CLIFF_CHECK_KIND_ALWAYS);
}
}