#[acmd_script( agent = "koopag", script = "effect_attackairf" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackairf (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_FLIP(fighter, Hash40::new("koopag_attack_air_f_arc"), Hash40::new("koopag_attack_air_f_arc"), Hash40::new("top"), 5, 45, 20, 0, 90, 55, 3.4, true, *EF_FLIP_YZ);
		LAST_EFFECT_SET_RATE(fighter, 0.75);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("koopag_attack_air_f_arc"), false, true);
		EFFECT_FOLLOW_FLIP(fighter, Hash40::new("koopag_attack_air_f_arc"), Hash40::new("koopag_attack_air_f_arc"), Hash40::new("top"), 5, 40, 20, 0, 20, 55, 3.4, true, *EF_FLIP_YZ);
		LAST_EFFECT_SET_RATE(fighter, 1.5);
		EFFECT_FOLLOW_NO_STOP_FLIP(fighter, Hash40::new("koopag_attack_air_f"), Hash40::new("koopag_attack_air_f"), Hash40::new("top"), 0, 40, 25, 0, 0, 55, 1.7, true, *EF_FLIP_YZ);
	}
	frame(lua_state, 12.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("koopag_attack_air_f"), false, false);
	}
	frame(lua_state, 8.0);
}