#[acmd_script( agent = "kamui", script = "effect_specialairnend1" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_specialairnend1 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("kamui_bite"), Hash40::new("havel"), 1, 3, -4, 0, 0, -12, 1, true);
	}
	frame(lua_state, 12.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_METAL);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_GOLD);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_SPYCLOAK);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
	FT_IS_SAME_FIGHTER_CATEGORY(fighter, FighterCategory:*METAMON);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
	FT_IS_SAME_FIGHTER_CATEGORY(fighter, FighterCategory:*LIGHT);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
	FT_IS_SAME_FIGHTER_CATEGORY(fighter, FighterCategory:*DARK);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("kamui_ryusensya_wind_end"), Hash40::new("arml"), 0, 0, 0, 0, 0, 0, 0.8, false);
	}
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){;
		if is_excute(fighter) {
			LAST_EFFECT_SET_COLOR(fighter, 0.849, 0.195, 0.195);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){;
		if is_excute(fighter) {
			LAST_EFFECT_SET_COLOR(fighter, 0.81, 0.277, 0.161);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){;
		if is_excute(fighter) {
			LAST_EFFECT_SET_COLOR(fighter, 0.274, 0.343, 0.627);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){;
		if is_excute(fighter) {
			LAST_EFFECT_SET_COLOR(fighter, 0.897, 0.342, 0.531);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){;
		if is_excute(fighter) {
			LAST_EFFECT_SET_COLOR(fighter, 0.2, 0.6, 0.51);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){;
		if is_excute(fighter) {
			LAST_EFFECT_SET_COLOR(fighter, 0.263, 0.309, 0.325);
		}
	}
	frame(0, 30);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("kamui_transform_splash_end"), Hash40::new("neck"), 2, 0, 0, 0, 0, 0, 1, true);
	}
}