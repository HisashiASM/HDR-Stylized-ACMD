#[acmd_script( agent = "kamui", script = "expression_throwlw" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_throwlw (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		FT_ATTACK_ABS_CAMERA_QUAKE(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, *CAMERA_QUAKE_KIND_NONE);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_horn"));
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_hide"));
	}
	frame(lua_state, 3.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_hide"));
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 26.0);
	if is_excute(fighter) {
		QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
	}
	frame(lua_state, 45.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_normal"));
	}
	frame(lua_state, 46.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_normal"));
	}
	frame(lua_state, 49.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_none"));
	}
}