#[acmd_script( agent = "kamui", script = "expression_entryl" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_entryl (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		notify_event_msc_cmd(0x1f20a9d549, false);
		notify_event_msc_cmd(0x24772eddef, false);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_horn"));
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_hide"));
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_hide"));
	}
	frame(lua_state, 52.0);
	if is_excute(fighter) {
		notify_event_msc_cmd(0x1f20a9d549, true);
		notify_event_msc_cmd(0x24772eddef, true);
	}
	frame(lua_state, 59.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_normal"));
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_normal"));
	}
	frame(lua_state, 63.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_none"));
	}
	frame(lua_state, 100.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
}