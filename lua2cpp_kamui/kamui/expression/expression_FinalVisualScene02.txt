#[acmd_script( agent = "kamui", script = "expression_finalvisualscene02" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_finalvisualscene02 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_spinattack"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_spinattack"), 0);
	}
	frame(lua_state, 70.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_erase"), 0);
	}
	frame(lua_state, 75.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_shieldbreak"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_shieldbreak"), 0);
	}
	frame(lua_state, 136.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackll"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_attackll"), 0);
	}
	frame(lua_state, 186.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beaml"), 22, true);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_beaml"), 22);
	}
}