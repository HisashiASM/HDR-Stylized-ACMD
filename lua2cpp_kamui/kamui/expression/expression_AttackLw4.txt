#[acmd_script( agent = "kamui", script = "expression_attacklw4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attacklw4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_R);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_horn"));
	}
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_hide"));
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_hide"));
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_spear_leg_l"));
	}
	frame(lua_state, 9.0);
	execute(9);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		if is_excute(fighter) {
			slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_R);
		}
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rot"), *ATTACK_DIRECTION_X, *ATTACK_DIRECTION_Z, *ATTACK_DIRECTION_Y);
		AttackModule::set_attack_reference_joint_id(fighter.module_accessor);
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 3);
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_piercel"), 0);
	}
	frame(lua_state, 36.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_normal"));
	}
	frame(lua_state, 37.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_normal"));
	}
	frame(lua_state, 40.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_none"));
	}
	frame(lua_state, 43.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 14);
	}
}