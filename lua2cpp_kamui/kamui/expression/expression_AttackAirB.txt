#[acmd_script( agent = "kamui", script = "expression_attackairb" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackairb (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_wing_no_horn"));
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_wing"));
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_hide"));
	}
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_hide"));
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohit_wing"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
	}
	frame(lua_state, 40.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_normal"));
	}
	frame(lua_state, 41.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_normal"));
	}
	frame(lua_state, 44.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_wing_no_horn"));
	}
}