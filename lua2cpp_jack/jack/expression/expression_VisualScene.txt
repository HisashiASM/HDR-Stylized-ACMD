#[acmd_script( agent = "jack", script = "expression_visualscene" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_visualscene (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase_sp"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_erase_sp"), 0);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_nohits"), 3);
	}
	frame(lua_state, 25.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_nohits"), 3);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_nohits"), 0);
	}
	frame(lua_state, 80.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_kirifuda"), 29, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_kirifuda"), 29);
	}
	frame(lua_state, 110.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_spinattack"), 80, true);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_damage_visual"), 80);
	}
	frame(lua_state, 196.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beaml"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_beaml"), 0);
	}
}