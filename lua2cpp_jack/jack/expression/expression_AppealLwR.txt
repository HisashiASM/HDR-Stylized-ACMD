#[acmd_script( agent = "jack", script = "expression_appeallwr" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_appeallwr (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_LOW_MODE);
	if(0x304a00(false, false)){;
		if is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_JACK_GENERATE_ARTICLE_MONA, true);
			methodlib::L2CValue::as_hash()const(*FIGHTER_JACK_GENERATE_ARTICLE_MONA, Hash40::new("appeal_lw_r"));
			ArticleModule::change_motion(fighter.module_accessor);
		}
	}
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	frame(lua_state, 110.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_LOW_MODE);
	if(0x304a00(false, false)){;
		if is_excute(fighter) {
			ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_JACK_GENERATE_ARTICLE_MONA);
		}
	}
}