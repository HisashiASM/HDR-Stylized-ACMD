#[acmd_script( agent = "jack", script = "effect_attackairhi" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackairhi (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_DOYLE);
	if(0x304a00(false, true)){;
		frame(lua_state, 4.0);
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 15, 1.3, 12, 0, 0, 0.7, true);
			EFFECT_FOLLOW_RND(fighter, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 22, 2.5, 12, 0, 0, 0.3, 2, 6, 2, 0, 0, 0, true);
			LAST_EFFECT_SET_RATE(fighter, 2);
		}
	}
	frame(lua_state, 5.0);
	for(2 Iterations){;
	if is_excute(fighter) {
		EFFECT_FOLLOW_RND(fighter, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 19, 2.3, 12, 0, 0, 0.4, 2, 6, 2, 0, 0, 0, true);
		LAST_EFFECT_SET_RATE(fighter, 2);
	}
	wait(lua_state, 3.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_RND(fighter, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 13, 1, 12, 0, 0, 0.4, 2, 6, 2, 0, 0, 0, true);
		LAST_EFFECT_SET_RATE(fighter, 2);
	}
	wait(lua_state, 3.0);
}
frame(lua_state, 16.0);
if is_excute(fighter) {
	EFFECT_FOLLOW_RND(fighter, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 19, 2.3, 12, 0, 0, 0.4, 2, 6, 2, 0, 0, 0, true);
	LAST_EFFECT_SET_RATE(fighter, 2);
}
frame(lua_state, 19.0);
if is_excute(fighter) {
	EFFECT_FOLLOW_RND(fighter, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 13, 1, 12, 0, 0, 0.4, 2, 6, 2, 0, 0, 0, true);
	LAST_EFFECT_SET_RATE(fighter, 2);
}
get_value_float(*SO_VAR_FLOAT_LR);
for(3 Iterations){;
}
if(0x304a00(312, 0)){;
if is_excute(fighter) {
	EFFECT_FOLLOW(fighter, Hash40::new("jack_doyle_attack_arc"), Hash40::new("top"), -11, 17, -6, 20, 0, 60, 1.2, true);
	LAST_EFFECT_SET_RATE(fighter, 1.5);
}
else{;
if is_excute(fighter) {
	EFFECT_FOLLOW(fighter, Hash40::new("jack_doyle_attack_arc"), Hash40::new("top"), 11, 17, -6, -20, 0, 120, 1.2, true);
	LAST_EFFECT_SET_RATE(fighter, 1.5);
}
}
}
}