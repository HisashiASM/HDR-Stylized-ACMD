#[acmd_script( agent = "jack", script = "effect_win2" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_win2 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 180.0);
	if is_excute(fighter) {
		EFFECT_STENCIL_ON(fighter);
		EFFECT_GLOBAL(fighter, Hash40::new("jack_result_line_back"), 0, 0, 0, 0, 0, 0, 1, false);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_JACK_INSTANCE_WORK_ID_FLOAT_RESULT_EFFECT_R);
	WorkModule::get_float(fighter.module_accessor, -1889155077, *FIGHTER_JACK_INSTANCE_WORK_ID_FLOAT_RESULT_EFFECT_G);
	WorkModule::get_float(fighter.module_accessor, -1889155077, *FIGHTER_JACK_INSTANCE_WORK_ID_FLOAT_RESULT_EFFECT_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
	if is_excute(fighter) {
		EFFECT_GLOBAL(fighter, Hash40::new("jack_result_line_front"), 0, 0, 0, 0, 0, 0, 1, false);
	}
	WorkModule::get_float(fighter.module_accessor, *FIGHTER_JACK_INSTANCE_WORK_ID_FLOAT_RESULT_EFFECT_R);
	WorkModule::get_float(fighter.module_accessor, -1889155077, *FIGHTER_JACK_INSTANCE_WORK_ID_FLOAT_RESULT_EFFECT_G);
	WorkModule::get_float(fighter.module_accessor, -1889155077, *FIGHTER_JACK_INSTANCE_WORK_ID_FLOAT_RESULT_EFFECT_B);
	if is_excute(fighter) {
		LAST_PARTICLE_SET_COLOR(fighter);
	}
}