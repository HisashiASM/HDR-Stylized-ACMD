#[acmd_script( agent = "purin", script = "effect_attackairlw" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackairlw (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 7.0);
	get_value_float(*SO_VAR_FLOAT_LR);
	if(methodlib::L2CValue::operator<(lib::L2CValueconst&)const(0, 0)){;
		if is_excute(fighter) {
			EFFECT_FOLLOW_RND(fighter, Hash40::new("sys_spin_wind"), Hash40::new("top"), 0, -3, 3, 160, 0, 0, 0.35, 1, 1, 1, 0, 0, 0, true);
		}
	}
	for(2 Iterations){;
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_RND(fighter, Hash40::new("sys_spin_wind_s"), Hash40::new("top"), 0, -1.5, 2.5, 160, 0, 0, 0.5, 3, 4, 3, 0, 0, 0, true);
		LAST_EFFECT_SET_RATE(fighter, 1.3);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_RND(fighter, Hash40::new("sys_spin_wind_s"), Hash40::new("top"), 0, 0, 1.5, 160, 0, 0, 0.65, 3, 4, 3, 0, 0, 0, true);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_RND(fighter, Hash40::new("sys_spin_wind_s"), Hash40::new("top"), 0, 2, -1, 160, 0, 0, 0.9, 3, 3, 3, 0, 0, 0, true);
		LAST_EFFECT_SET_RATE(fighter, 1.3);
	}
	wait(lua_state, 1.0);
}
if is_excute(fighter) {
	EFFECT_FOLLOW_RND(fighter, Hash40::new("sys_spin_wind"), Hash40::new("top"), 0, -3, 3, -20, 0, 0, 0.35, 1, 1, 1, 0, 0, 0, true);
}
wait(lua_state, 2.0);
if is_excute(fighter) {
	EFFECT_FOLLOW_RND(fighter, Hash40::new("sys_spin_wind_s"), Hash40::new("top"), 0, -0.5, 2.7, -20, 0, 0, 0.5, 3, 4, 3, 0, 0, 0, true);
	LAST_EFFECT_SET_RATE(fighter, 1.3);
}
wait(lua_state, 2.0);
if is_excute(fighter) {
	EFFECT_FOLLOW_RND(fighter, Hash40::new("sys_spin_wind_s"), Hash40::new("top"), 0, 1.5, 2.3, -20, 0, 0, 0.65, 3, 4, 3, 0, 0, 0, true);
}
wait(lua_state, 2.0);
if is_excute(fighter) {
	EFFECT_FOLLOW_RND(fighter, Hash40::new("sys_spin_wind_s"), Hash40::new("top"), 0, 3, 2, -20, 0, 0, 0.9, 3, 3, 3, 0, 0, 0, true);
	LAST_EFFECT_SET_RATE(fighter, 1.3);
}
wait(lua_state, 1.0);
frame(lua_state, 31.0);
if is_excute(fighter) {
	EFFECT_FLIP_ALPHA(fighter, Hash40::new("sys_attack_impact"), Hash40::new("sys_attack_impact"), Hash40::new("top"), 0, -5, 3.5, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_YZ, 0.7);
}
}