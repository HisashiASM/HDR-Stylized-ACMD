#[acmd_script( agent = "purin", script = "game_finalstartl" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalstartl (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WHOLE_HIT(fighter, *HIT_STATUS_XLU);
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 0, 0, 0);
		SLOW_OPPONENT(fighter, 7, 120);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(0xf85d0(false, false)){;
		if is_excute(fighter) {
			FT_SET_FINAL_FEAR_FACE(fighter, 60);
			REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalstartr.nuanmb"), false);
		}
		else{;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 5, 0);
			0xf85d0(-467097480, 2.1);
			CAM_ZOOM_IN_arg5(0, 0);
			FT_START_CUTIN(fighter);
		}
	}
}
wait(lua_state, 30.0);
if is_excute(fighter) {
	CAM_ZOOM_OUT(fighter);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PURIN_STATUS_FINAL_FLAG_COMMON);
	ATTACK(fighter, 0, 0, Hash40::new("rot"), 0.0, 0, 100, 75, 0, 3.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 2, false, false, true, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	AttackModule::set_invalid_xlu(fighter.module_accessor, 0, true);
}
frame(lua_state, 50.0);
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("rot"), 0.0, 0, 100, 75, 0, 3.5, 0.0, -1.0, -1.0, Some(0.0), Some(-1.0), Some(1.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 2, false, false, true, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	AttackModule::set_invalid_xlu(fighter.module_accessor, 0, true);
}
frame(lua_state, 57.0);
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("rot"), 0.0, 0, 100, 75, 0, 4.4, 0.0, -1.0, 0.0, Some(0.0), Some(3.2), Some(0.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 2, false, false, true, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	AttackModule::set_invalid_xlu(fighter.module_accessor, 0, true);
}
frame(lua_state, 74.0);
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("rot"), 0.0, 0, 100, 75, 0, 4.4, 0.0, 0.0, -1.0, Some(0.0), Some(0.0), Some(1.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 2, false, false, true, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	AttackModule::set_invalid_xlu(fighter.module_accessor, 0, true);
}
frame(lua_state, 92.0);
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("rot"), 0.0, 0, 100, 75, 0, 5.4, 0.0, 0.0, 0.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 2, false, false, true, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	AttackModule::set_invalid_xlu(fighter.module_accessor, 0, true);
}
}