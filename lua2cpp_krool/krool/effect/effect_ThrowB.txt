#[acmd_script( agent = "krool", script = "effect_throwb" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_throwb (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 12.0);
	if is_excute(fighter) {
		LANDING_EFFECT_FLIP(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("sys_landing_smoke"), Hash40::new("top"), 16, 0, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_YZ);
		LAST_EFFECT_SET_RATE(fighter, 0.8);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		LANDING_EFFECT_FLIP(fighter, Hash40::new("sys_whirlwind_r"), Hash40::new("sys_whirlwind_l"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_NONE);
		LAST_EFFECT_SET_RATE(fighter, 0.7);
	}
	frame(lua_state, 28.0);
	if is_excute(fighter) {
		EFFECT_FLIP_ALPHA(fighter, Hash40::new("krool_ground_scratch"), Hash40::new("krool_ground_scratch"), Hash40::new("top"), 18, 0, 11, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_YZ, 1);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		EFFECT_FLIP_ALPHA(fighter, Hash40::new("krool_ground_scratch"), Hash40::new("krool_ground_scratch"), Hash40::new("top"), 15, 0, 11, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_YZ, 1);
	}
	frame(lua_state, 31.0);
	if is_excute(fighter) {
		LANDING_EFFECT_FLIP(fighter, Hash40::new("sys_dash_smoke"), Hash40::new("sys_dash_smoke"), Hash40::new("top"), -7, 0, 4, 0, 180, 0, 0.9, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_YZ);
		EFFECT_FOLLOW_FLIP_ALPHA(fighter, Hash40::new("krool_attack_s3_arc"), Hash40::new("krool_attack_s3_arc"), Hash40::new("top"), -3, 14, -21, 198, 53, 54, 1.6, true, *EF_FLIP_YZ, 0.4);
	}
	frame(lua_state, 32.0);
	if is_excute(fighter) {
		EFFECT_FLIP_ALPHA(fighter, Hash40::new("krool_ground_scratch"), Hash40::new("krool_ground_scratch"), Hash40::new("top"), 6, 0, 11, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_YZ, 1);
	}
	frame(lua_state, 33.0);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_smash_flash_s"), Hash40::new("throw"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
}