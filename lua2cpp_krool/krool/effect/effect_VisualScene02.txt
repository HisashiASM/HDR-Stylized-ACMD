#[acmd_script( agent = "krool", script = "effect_visualscene02" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_visualscene02 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 500, 500, 0, 1500, 300, false);
		methodlib::L2CValue::as_hash()const();
		EffectModule::request_post_effect_line_circle(fighter.module_accessor);
	}
	frame(0, 20);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 500, 500, 0, 1500, 300, false);
		methodlib::L2CValue::as_hash()const();
		EffectModule::request_post_effect_line_circle(fighter.module_accessor);
	}
	frame(0, 25);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("krool_final_charge_a"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 500, 500, 0, 1500, 300, false);
		methodlib::L2CValue::as_hash()const();
		EffectModule::request_post_effect_line_circle(fighter.module_accessor);
	}
	frame(0, 40);
	if is_excute(fighter) {
		EffectModule::remove_post_effect_line(fighter.module_accessor, 10, true);
	}
}