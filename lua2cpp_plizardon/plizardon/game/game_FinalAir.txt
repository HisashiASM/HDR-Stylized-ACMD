#[acmd_script( agent = "plizardon", script = "game_finalair" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalair (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 1, 20, 0, 0, 0);
		SLOW_OPPONENT(fighter, 5, 30);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		frame(lua_state, 10.0);
		if is_excute(fighter) {
			FT_SET_FINAL_FEAR_FACE(fighter, 60);
			REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
			FT_START_CUTIN_arg1(true);
		}
		else{;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 4, 0);
			0xdf7f0(389270630, 2.1);
			CAM_ZOOM_IN_arg5(0, 0);
			FT_START_CUTIN_arg1(true);
		}
		frame(lua_state, 25.0);
		if is_excute(fighter) {
			CAM_ZOOM_OUT(fighter);
		}
	}
}
frame(lua_state, 30.0);
if is_excute(fighter) {
	ATTACK(fighter, 0, 1, Hash40::new("top"), 0.0, 40, 100, 100, 0, 20.0, 0.0, 10.0, 0.0, None, None, None, 0.9, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
}
frame(lua_state, 60.0);
if is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	camera(*MA_MSC_CMD_CAMERA_CAM_RESET);
}
get_value_float(*SO_VAR_FLOAT_LR);
if(0xdf7f0(448, 0)){;
	if is_excute(fighter) {
		camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, -60, 0, 0);
		camera(*MA_MSC_CMD_CAMERA_CAM_RECT, 60, -56, 18, -8);
	}
	else{;
	if is_excute(fighter) {
		camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 60, 0, 0);
		camera(*MA_MSC_CMD_CAMERA_CAM_RECT, 60, -56, 18, -8);
	}
}
}
frame(lua_state, 58.0);
if is_excute(fighter) {
ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI);
}
frame(lua_state, 95.0);
if is_excute(fighter) {
ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI);
}
frame(lua_state, 130.0);
if is_excute(fighter) {
ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI);
}
frame(lua_state, 167.0);
if is_excute(fighter) {
ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI);
}
frame(lua_state, 205.0);
if is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_PLIZARDON_STATUS_FINAL_FLAG_LAST_DAIMONJI);
ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI);
}
frame(lua_state, 317.0);
if is_excute(fighter) {
cancel(*MA_MSC_CMD_CANCEL_ENABLE_CANCEL);
}
}