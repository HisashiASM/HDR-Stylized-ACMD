#[acmd_script( agent = "koopa", script = "game_screwair" , category = ACMD_GAME , low_priority)]
unsafe fn game_screwair (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("mouth2"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_XLU);
		HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_XLU);
	}
	for(10 Iterations){;
	methodlua2cpp::L2CFighterAnimcmdGameCommon::game_ScrewCommon()(0);
	if is_excute(fighter) {
		attack(*MA_MSC_CMD_ATTACK_NODE, 0, Hash40::new("top"), 0, 5, 7);
		attack(*MA_MSC_CMD_ATTACK_NODE, 1, Hash40::new("top"), 0, 5, -7);
		attack(*MA_MSC_CMD_ATTACK_NODE, 2, Hash40::new("top"), 0, 19, 7);
		attack(*MA_MSC_CMD_ATTACK_NODE, 3, Hash40::new("top"), 0, 19, -7);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
	}
}
}