#[acmd_script( agent = "sonic", script = "expression_cliffattack" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_cliffattack (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattacks"), 10, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		ItemModule::set_attach_item_visibility(fighter.module_accessor, false);
	}
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_sphere"));
		HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("s_stingd1"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_OFF);
		HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_NORMAL);
	}
	for(5 Iterations){;
	wait(0, 1);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_normal"));
		HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("s_stingd1"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_NORMAL);
		HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_OFF);
	}
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
	}
	wait(lua_state, 1.0);
}
if is_excute(fighter) {
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_sphere"));
	HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("s_stingd1"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_NORMAL);
}
wait(0, 1);
if is_excute(fighter) {
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_normal"));
	HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("s_stingd1"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_OFF);
}
wait(0, 2);
if is_excute(fighter) {
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_sphere"));
	HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("s_stingd1"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_NORMAL);
}
wait(0, 1);
if is_excute(fighter) {
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_normal"));
	HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("s_stingd1"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_OFF);
}
wait(0, 2);
if is_excute(fighter) {
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_sphere"));
	HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("s_stingd1"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_OFF);
	HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_NORMAL);
}
wait(0, 1);
if is_excute(fighter) {
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_normal"));
	HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("s_stingd1"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_NORMAL);
	HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_OFF);
}
wait(0, 2);
frame(lua_state, 51.0);
if is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	ItemModule::set_attach_item_visibility(fighter.module_accessor, true);
}
frame(lua_state, 52.0);
if is_excute(fighter) {
	ItemModule::set_have_item_visibility(fighter.module_accessor, true);
}
}