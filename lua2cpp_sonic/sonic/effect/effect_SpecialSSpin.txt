#[acmd_script( agent = "sonic", script = "effect_specialsspin" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_specialsspin (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("sonic_spinblur_slow"), Hash40::new("sphere"), 0, 0, 0, 0, 0, 0, 1, true);
		EffectModule::enable_sync_init_pos_last(fighter.module_accessor);
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("sonic_spintrace"), Hash40::new("top"), 0, 5, 0, 0, 0, 0, 1, true);
		EffectModule::enable_sync_init_pos_last(fighter.module_accessor);
	}
	for(3 Iterations){;
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x12c570(0, 0)){;
		if is_excute(fighter) {
			EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spinwind_oneshot"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 0.85, true);
			LAST_EFFECT_SET_COLOR(fighter, 0.711, 0.931, 1);
		}
	}
	wait(lua_state, 5.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spinwind_oneshot"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 0.85, true);
		LAST_EFFECT_SET_COLOR(fighter, 0.711, 0.931, 1);
	}
	else{;
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spinwind_oneshot"), Hash40::new("sphere"), 0, 0, 0, 0, 89, 0, 0.85, true);
		LAST_EFFECT_SET_COLOR(fighter, 0.711, 0.931, 1);
	}
}
wait(lua_state, 5.0);
if is_excute(fighter) {
	EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spinwind_oneshot"), Hash40::new("sphere"), 0, 0, 0, 0, 89, 0, 0.85, true);
	LAST_EFFECT_SET_COLOR(fighter, 0.711, 0.931, 1);
}
wait(lua_state, 5.0);
}
if is_excute(fighter) {
EFFECT_OFF_KIND(fighter, Hash40::new("sonic_spinwind_oneshot"), false, false);
}
}