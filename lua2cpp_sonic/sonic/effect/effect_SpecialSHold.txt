#[acmd_script( agent = "sonic", script = "effect_specialshold" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_specialshold (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_SONIC_INSTANCE_WORK_FLAG_SPECIAL_S_HOLD_JUMP_EFFECT);
	if(0x12c570(false, false)){;
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("sonic_spindash_hold_blur"), Hash40::new("sphere"), 0, 0, 0, 0, 0, 0, 1, true);
		}
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x12c570(0, 0)){;
		if is_excute(fighter) {
			EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spindash_hold"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 1, true);
		}
		else{;
		if is_excute(fighter) {
			EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spindash_hold"), Hash40::new("sphere"), 0, 0, 0, 0, -90, 0, 1, true);
		}
		frame(lua_state, 2.0);
	}
}
if is_excute(fighter) {
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_SONIC_INSTANCE_WORK_FLAG_SPECIAL_S_HOLD_JUMP_EFFECT);
}
if is_excute(fighter) {
	FLASH(fighter, 1, 1, 1, 0.13);
}
wait(lua_state, 3.0);
if is_excute(fighter) {
	COL_NORMAL(fighter);
}
wait(lua_state, 4.0);
if is_excute(fighter) {
	FLASH(fighter, 1, 1, 0.275, 0.196);
}
wait(lua_state, 3.0);
if is_excute(fighter) {
	COL_NORMAL(fighter);
}
wait(lua_state, 2.0);
LANDING_EFFECT(fighter, Hash40::new("sys_dash_smoke"), Hash40::new("top"), 0, 0, 11, 0, 0, 0, 0.8, 5, 0, 15, 0, 0, 0, true);
}