#[acmd_script( agent = "sonic", script = "effect_run" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_run (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_SONIC_INSTANCE_WORK_FLAG_DISABLE_RUN_TRACE);
	if(0x12c570(false, false)){;
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x12c570(0, 0)){;
			if is_excute(fighter) {
				EFFECT_FOLLOW_arg11(Hash40::new("sonic_runtrace"), Hash40::new("top"), 0, 0, 0, 180, 0, 0, -1, true, *FIGHTER_INSTANCE_WORK_ID_INT_COLOR);
				LAST_EFFECT_SET_RATE(fighter, 1.09);
			}
			else{;
			if is_excute(fighter) {
				EFFECT_FOLLOW_arg11(Hash40::new("sonic_runtrace"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true, *FIGHTER_INSTANCE_WORK_ID_INT_COLOR);
				LAST_EFFECT_SET_RATE(fighter, 1.09);
			}
		}
	}
}
if is_excute(fighter) {
	FOOT_EFFECT(fighter, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false);
}
wait(lua_state, 3.0);
if is_excute(fighter) {
	FOOT_EFFECT(fighter, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, false);
}
wait(lua_state, 4.0);
if is_excute(fighter) {
	FOOT_EFFECT(fighter, Hash40::new("sys_dash_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
}
wait(lua_state, 4.0);
}