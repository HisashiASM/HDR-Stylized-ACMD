#[acmd_script( agent = "sonic", script = "effect_entryl" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_entryl (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("sonic_spinwind"), Hash40::new("sphere"), 0, 0, 0, 0, 0, 0, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("sonic_spinblur_plain"), Hash40::new("sphere"), 0, 0, 0, 0, 0, 0, 1, true);
		EFFECT_FOLLOW(fighter, Hash40::new("sonic_spintrace_homing"), Hash40::new("sphere"), 0, 0, 0, 0, 0, 0, 1, true);
		EffectModule::enable_sync_init_pos_last(fighter.module_accessor);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, -2, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 40.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("sonic_spinwind"), true, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("sonic_spinblur_plain"), false, true);
		EFFECT_OFF_KIND(fighter, Hash40::new("sonic_spintrace_homing"), false, true);
		LANDING_EFFECT(fighter, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, true);
	}
}