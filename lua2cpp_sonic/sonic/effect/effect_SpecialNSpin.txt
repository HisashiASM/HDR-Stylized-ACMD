#[acmd_script( agent = "sonic", script = "effect_specialnspin" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_specialnspin (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		EFFECT_FOLLOW_FLIP_ALPHA(fighter, Hash40::new("sonic_homing_hold"), Hash40::new("sonic_homing_hold"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 0.52, true, *EF_FLIP_XY, 0.5);
		LAST_EFFECT_SET_RATE(fighter, 2);
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_FLIP(fighter, Hash40::new("sonic_homing_hold"), Hash40::new("sonic_homing_hold"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 0.44, true, *EF_FLIP_XY);
		LAST_EFFECT_SET_RATE(fighter, 1.5);
		EFFECT_FLW_POS(fighter, Hash40::new("sonic_spinblur_plain"), Hash40::new("sphere"), 0, 0, 0, 0, 0, 0, 1, true);
	}
	frame(lua_state, 3.0);
	for(3 Iterations){;
	if is_excute(fighter) {
		FLASH(fighter, 1, 1, 1, 0);
		EFFECT(fighter, Hash40::new("sys_smash_flash_s"), Hash40::new("top"), 0, 5, 0, 0, 0, 0, 0.8, 14, 14, 14, 0, 0, 0, true);
	}
	wait(lua_state, 100.0);
	if is_excute(fighter) {
		FLASH(fighter, 1, 1, 1, 0.105);
	}
	wait(lua_state, 100.0);
	if is_excute(fighter) {
		COL_NORMAL(fighter);
	}
	wait(lua_state, 1.0);
}
for(10 Iterations){;
if is_excute(fighter) {
	FLASH(fighter, 0.502, 1, 1, 0.08);
	EFFECT(fighter, Hash40::new("sys_smash_flash_s"), Hash40::new("top"), 0, 5, 0, 0, 0, 0, 0.8, 14, 14, 14, 0, 0, 0, true);
}
wait(lua_state, 100.0);
if is_excute(fighter) {
	FLASH(fighter, 1, 1, 1, 0.235);
}
wait(lua_state, 100.0);
if is_excute(fighter) {
	COL_NORMAL(fighter);
}
wait(lua_state, 1.0);
}
}