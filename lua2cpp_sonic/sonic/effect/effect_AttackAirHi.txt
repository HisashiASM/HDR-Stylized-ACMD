#[acmd_script( agent = "sonic", script = "effect_attackairhi" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackairhi (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("sys_attack_speedline"), Hash40::new("top"), 0, 7.5, 2.5, -10, 0, 0, 0.5, true);
		LAST_EFFECT_SET_COLOR(fighter, 3, 0.7, 0.2);
		EFFECT_FOLLOW(fighter, Hash40::new("sys_attack_speedline"), Hash40::new("top"), -1, 7.5, -2.5, 190, 0, 0, 0.5, true);
		LAST_EFFECT_SET_COLOR(fighter, 3, 0.7, 0.2);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_NO_STOP_FLIP(fighter, Hash40::new("sonic_atk_hi"), Hash40::new("sonic_atk_hi"), Hash40::new("top"), 0.8, 8.7, 0, 59, 74, 154, 1, true, *EF_FLIP_YZ);
		LAST_EFFECT_SET_COLOR(fighter, 3, 0.7, 0.2);
		EFFECT_FOLLOW_NO_STOP_FLIP(fighter, Hash40::new("sonic_atk_hi"), Hash40::new("sonic_atk_hi"), Hash40::new("top"), -0.9, 8.7, 0, 245, -77, 22, 1, true, *EF_FLIP_YZ);
		LAST_EFFECT_SET_COLOR(fighter, 3, 0.7, 0.2);
	}
	frame(lua_state, 14.0);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_attack_impact"), Hash40::new("top"), 0, 19.5, 0, 0, 0, 0, 1.55, 0, 0, 0, 0, 0, 360, false);
	}
}