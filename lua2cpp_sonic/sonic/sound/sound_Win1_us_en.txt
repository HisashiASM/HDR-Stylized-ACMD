#[acmd_script( agent = "sonic", script = "sound_win1_us_en" , category = ACMD_SOUND , low_priority)]
unsafe fn sound_win1_us_en (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_right_m_win"));
	}
	frame(lua_state, 22.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_left_m_win"));
	}
	frame(lua_state, 26.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_right_m_win"));
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_left_m_win"));
	}
	frame(lua_state, 34.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_right_m_win"));
	}
	frame(lua_state, 38.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_left_m_win"));
	}
	frame(lua_state, 42.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_right_m_win"));
	}
	frame(lua_state, 46.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_left_m_win"));
	}
	frame(lua_state, 49.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("vc_sonic_win01"));
	}
	frame(lua_state, 50.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_right_m_win"));
	}
	frame(lua_state, 54.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_left_m_win"));
	}
	frame(lua_state, 58.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_right_m_win"));
	}
	frame(lua_state, 62.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_left_m_win"));
	}
	frame(lua_state, 66.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_right_m_win"));
	}
	frame(lua_state, 70.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_step_left_m_win"));
	}
	frame(lua_state, 85.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_dash_stop_win"));
	}
	frame(lua_state, 115.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_sonic_landing01_win"));
	}
}