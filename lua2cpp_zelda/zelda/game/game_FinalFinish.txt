#[acmd_script( agent = "zelda", script = "game_finalfinish" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalfinish (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_ZELDA_FINAL, 0, 10.0, 65, 68, 0, 100, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 1.0, true, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_MAGIC, *ATTACK_REGION_NONE);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, true);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 15.0, 60, 100, 0, 80, 40.0, 0.0, 12.0, 20.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, false);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_ZELDA_STATUS_FINAL_FLAG_FINISH);
	}
}