#[acmd_script( agent = "zelda", script = "effect_attacklw4" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attacklw4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x10db70(0, 0)){;
		if is_excute(fighter) {
			EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), 4, 5, -6.5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
		}
		else{;
		if is_excute(fighter) {
			EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), -4, 5, -6.5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
		}
	}
}
frame(lua_state, 4.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x10db70(256, 0)){;
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("zelda_smash_lw_arc"), Hash40::new("top"), 0, 4, 2, -188, 180, -3, 1, true);
	}
	else{;
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("zelda_smash_lw_arc"), Hash40::new("top"), 0, 4, 2, 8, 0, 3, 1, true);
	}
}
}
frame(lua_state, 6.0);
if is_excute(fighter) {
EFFECT_FOLLOW(fighter, Hash40::new("zelda_atk_flash_s"), Hash40::new("footr"), 0, 0, 0, 0, 0, 0, 0.8, true);
}
get_value_float(*SO_VAR_FLOAT_LR);
if(0x10db70(256, 0)){;
if is_excute(fighter) {
	LANDING_EFFECT(fighter, Hash40::new("sys_whirlwind_r"), Hash40::new("top"), 0, 0, -2, 0, 0, 0, 1.1, 0, 0, 0, 0, 0, 0, false);
	LAST_EFFECT_SET_ALPHA(fighter, 0.7);
}
else{;
if is_excute(fighter) {
	LANDING_EFFECT(fighter, Hash40::new("sys_whirlwind_l"), Hash40::new("top"), 0, 0, 1, 0, 0, 0, 1.1, 0, 0, 0, 0, 0, 0, false);
	LAST_EFFECT_SET_ALPHA(fighter, 0.7);
}
}
}
frame(lua_state, 10.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x10db70(512, 0)){;
if is_excute(fighter) {
EFFECT_FOLLOW(fighter, Hash40::new("zelda_smash_lw_arc"), Hash40::new("top"), 0, 4, -2, -172, 0, -5, 1, true);
}
else{;
if is_excute(fighter) {
EFFECT_FOLLOW(fighter, Hash40::new("zelda_smash_lw_arc"), Hash40::new("top"), 0, 4, -2, -8, 180, 5, 1, true);
}
}
}
}