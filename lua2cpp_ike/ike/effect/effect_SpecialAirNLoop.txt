#[acmd_script( agent = "ike", script = "effect_specialairnloop" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_specialairnloop (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	wait_loop_sync_mot();
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_IKE_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 0)){;
		if is_excute(fighter) {
			FLASH(fighter, 0.125, 0.4, 1, 0.1);
		}
	}
	for(8 Iterations){;
	wait(lua_state, 4.0);
	if is_excute(fighter) {
		COL_NORMAL(fighter);
	}
	wait(lua_state, 2.0);
}
for(8 Iterations){;
if is_excute(fighter) {
	FLASH(fighter, 0.125, 0.4, 1, 0.2);
}
wait(lua_state, 4.0);
if is_excute(fighter) {
	COL_NORMAL(fighter);
}
wait(lua_state, 2.0);
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_IKE_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 1)){;
if is_excute(fighter) {
	FLASH(fighter, 0.125, 0.4, 1, 0.3);
}
}
for(6 Iterations){;
wait(lua_state, 4.0);
if is_excute(fighter) {
COL_NORMAL(fighter);
}
wait(lua_state, 2.0);
}
for(7 Iterations){;
if is_excute(fighter) {
FLASH(fighter, 0.125, 0.4, 1, 0.35);
}
wait(lua_state, 4.0);
if is_excute(fighter) {
COL_NORMAL(fighter);
}
wait(lua_state, 2.0);
}
if is_excute(fighter) {
FLASH(fighter, 0.125, 0.4, 1, 0.35);
}
wait(lua_state, 2.0);
if is_excute(fighter) {
COL_NORMAL(fighter);
}
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_IKE_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 2)){;
if is_excute(fighter) {
FLASH(fighter, 0.125, 0.4, 1, 0.4);
}
}
wait(lua_state, 4.0);
if is_excute(fighter) {
COL_NORMAL(fighter);
}
wait(lua_state, 1.0);
}