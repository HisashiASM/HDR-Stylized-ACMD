#[acmd_script( agent = "roy", script = "expression_finalair" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_finalair (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		AREA_WIND_2ND_arg10(0, 0.5, 120, 20, 0.2, -5, 7, 14, 14, 40);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("sword"), Hash40::new("sword_lhand_saya"));
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("sword"), Hash40::new("sword_rhand_saya"));
	}
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_21_slash_sp"), 0);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		QUAKE(fighter, *CAMERA_QUAKE_KIND_L);
	}
	frame(lua_state, 64.0);
	if is_excute(fighter) {
		AREA_WIND_2ND_arg10(0, 0.2, 170, 20, 0.2, -5, 7, 14, 14, 40);
	}
	frame(lua_state, 73.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 90.0);
	if is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
}