#[acmd_script( agent = "master", script = "game_specialairnstart" , category = ACMD_GAME , low_priority)]
unsafe fn game_specialairnstart (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	IS_EXIST_ARTICLE(fighter, *FIGHTER_MASTER_GENERATE_ARTICLE_BOW);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		if is_excute(fighter) {
			ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_MASTER_GENERATE_ARTICLE_BOW);
		}
	}
	if is_excute(fighter) {
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MASTER_GENERATE_ARTICLE_BOW);
	}
	IS_EXIST_ARTICLE(fighter, FIGHTER_MASTER_GENERATE_ARTICLE_ARROW1);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		if is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, FIGHTER_MASTER_GENERATE_ARTICLE_ARROW1);
		}
	}
	frame(lua_state, 28.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_STATUS_SPECIAL_N_FLAG_ENABLE_TURN);
	}
	frame(lua_state, 44.0);
	if is_excute(fighter) {
		WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_STATUS_SPECIAL_N_FLAG_ENABLE_TURN);
	}
	frame(lua_state, 45.0);
	FT_MOTION_RATE(fighter, 0.9);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_STATUS_SPECIAL_N_FLAG_CAN_SHOOT);
	}
}