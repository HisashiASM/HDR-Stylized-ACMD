#[acmd_script( agent = "master", script = "expression_attacks4lw" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attacks4lw (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 2.0);
	frame(lua_state, 14.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD);
	}
	execute(14);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(0x1782d1b9f2, 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 25.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_piercel"), 0, 0);
		RUMBLE_HIT(fighter, Hash40::new("rbkind_pierces"), 0, 1);
		RUMBLE_HIT(fighter, Hash40::new("rbkind_pierces"), 0, 2);
		RUMBLE_HIT(fighter, Hash40::new("rbkind_piercel"), 0, 3);
	}
	frame(lua_state, 44.0);
	frame(lua_state, 85.0);
	if is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_REQ_EFFECT_AURA);
	}
}