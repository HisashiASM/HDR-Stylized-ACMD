#[acmd_script( agent = "ken", script = "game_final_hit1" , category = ACMD_GAME , low_priority)]
unsafe fn game_final_hit1 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 25.0);
	if is_excute(fighter) {
		CAM_ZOOM_OUT(fighter);
		ATTACK(fighter, 0, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 5.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
		ATTACK(fighter, 1, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 5.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
		methodlib::L2CValue::as_hash()const(0, Hash40::new("ken_final_shippu_hit_rush"));
		AttackModule::set_optional_hit_effect(fighter.module_accessor);
		methodlib::L2CValue::as_hash()const(1, Hash40::new("ken_final_shippu_hit_rush"));
		AttackModule::set_optional_hit_effect(fighter.module_accessor);
	}
}