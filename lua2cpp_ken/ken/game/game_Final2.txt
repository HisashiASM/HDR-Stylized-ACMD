#[acmd_script( agent = "ken", script = "game_final2" , category = ACMD_GAME , low_priority)]
unsafe fn game_final2 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
	}
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 0, 20, 0, 0, 0);
		SLOW_OPPONENT(fighter, 6, 30);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(0x16e550(false, false)){;
		frame(lua_state, 10.0);
		if is_excute(fighter) {
			FT_START_CUTIN(fighter);
			FT_SET_FINAL_FEAR_FACE(fighter, 40);
			REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04final2.nuanmb"), true);
		}
		else{;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 3, 0);
			0x16e550(1760657085, 1.8);
			CAM_ZOOM_IN_arg5(0, 0);
			FT_START_CUTIN(fighter);
		}
		frame(lua_state, 28.0);
		if is_excute(fighter) {
			CAM_ZOOM_OUT(fighter);
		}
	}
}
PostureModule::scale(fighter.module_accessor);
if(0x16e550(1760657085, 1.4)){;
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("top"), 0.0, 366, 100, 140, 0, 35.0, 0.0, 5.0, -1.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, 0, 0.0, 0, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	}
	else{;
	PostureModule::scale(fighter.module_accessor);
	if(0x16e550(1760657085, 0.5)){;
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("top"), 0.0, 366, 100, 22, 0, 35.0, 0.0, 5.0, -1.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, 0, 0.0, 0, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		}
		else{;
		if is_excute(fighter) {
			ATTACK(fighter, 0, 0, Hash40::new("top"), 0.0, 366, 100, 70, 0, 35.0, 0.0, 5.0, -1.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, 0, 0.0, 0, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		}
	}
}
}
}
wait(lua_state, 10.0);
if is_excute(fighter) {
AttackModule::clear(fighter.module_accessor, /*ID*/ 0);
}
frame(lua_state, 48.0);
if is_excute(fighter) {
SlowModule::set_whole(fighter.module_accessor, 2, 0);
}
wait(lua_state, 1.0);
if is_excute(fighter) {
SlowModule::clear_whole(fighter.module_accessor);
}
frame(lua_state, 52.0);
if is_excute(fighter) {
SA_SET(fighter, *SITUATION_KIND_AIR);
camera(*MA_MSC_CMD_CAMERA_CAM_RECT, 40, -40, 20, 0);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_RYU_STATUS_WORK_ID_FINAL_FLAG_ADJUST_SHINRYUKEN_POS);
}
frame(lua_state, 90.0);
}