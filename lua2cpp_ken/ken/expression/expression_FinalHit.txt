#[acmd_script( agent = "ken", script = "expression_finalhit" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_finalhit (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		AREA_WIND_2ND_RAD_arg9(1, 4, 0.01, 8, 0.6, -4, 12, 35, 80);
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	frame(lua_state, 4.0);
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 9);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 33.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 42.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 61.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitll_l"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 65.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attack_finish"), 0);
	}
}