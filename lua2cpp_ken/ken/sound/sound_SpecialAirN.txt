#[acmd_script( agent = "ken", script = "sound_specialairn" , category = ACMD_SOUND , low_priority)]
unsafe fn sound_specialairn (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 1.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_N_FLAG_FAILED);
	if(0x16e550(false, true)){;
		wait(lua_state, 10.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_ken_special_n03"));
		}
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("vc_ken_special_n02"));
	}
	else{;
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_COMMON_FLAG_COMMAND);
	if(0x16e550(false, false)){;
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_ken_special_n01"));
		}
		wait(lua_state, 10.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_ken_special_n03"));
		}
		wait(lua_state, 2.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("vc_ken_special_n01"));
		}
		else{;
		if(0x16e550(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_N_INT_TYPE, 0)){;
			if is_excute(fighter) {
				PLAY_SE(fighter, Hash40::new("se_ken_command_success"));
				PLAY_SE(fighter, Hash40::new("se_ken_special_n01"));
			}
			wait(lua_state, 10.0);
			if is_excute(fighter) {
				PLAY_SE(fighter, Hash40::new("se_ken_special_n03"));
			}
			wait(lua_state, 2.0);
			if is_excute(fighter) {
				PLAY_SE(fighter, Hash40::new("vc_ken_special_n01_command"));
			}
		}
	}
}
}
}