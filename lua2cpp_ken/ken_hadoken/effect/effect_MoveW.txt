#[acmd_script( agent = "ken_hadoken", script = "effect_movew" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_movew (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	WorkModule::is_flag(fighter.module_accessor, *WEAPON_RYU_HADOKEN_INSTANCE_WORK_ID_FLAG_COMMAND);
	if(0x16e550(false, false)){;
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("ken_hadoken_bullet"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.6, false);
		}
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x16e550(0, 0)){;
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("ken_hadoken_bullethand_l"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.6, false);
		}
		else{;
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("ken_hadoken_bullet2"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, false);
		}
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x16e550(0, 0)){;
			if is_excute(fighter) {
				EFFECT_FOLLOW(fighter, Hash40::new("ken_hadoken_bullethand_l"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.6, false);
			}
			else{;
			if is_excute(fighter) {
				EFFECT_FOLLOW(fighter, Hash40::new("ken_hadoken_bullethand_r"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.6, false);
			}
			else{;
			if is_excute(fighter) {
				EFFECT_FOLLOW(fighter, Hash40::new("ken_hadoken_bullethand_r"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.6, false);
			}
		}
	}
}
}
}
}