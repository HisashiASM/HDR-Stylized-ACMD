#[acmd_script( agent = "simon", script = "sound_win2" , category = ACMD_SOUND , low_priority)]
unsafe fn sound_win2 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	GET_VOICE_REGION(fighter);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0, *VOICE_DEFAULT)){;
		frame(lua_state, 16.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_simon_win02"));
		}
		frame(lua_state, 18.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_simon_win02_01"));
		}
		frame(lua_state, 71.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_02"));
		}
		frame(lua_state, 118.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_03"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0, *VOICE_US_EN)){;
		frame(lua_state, 18.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_simon_win02_01"));
		}
		frame(lua_state, 21.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_simon_win02"));
		}
		frame(lua_state, 71.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_02"));
		}
		frame(lua_state, 118.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_03"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0, *VOICE_US_FR)){;
		frame(lua_state, 18.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_simon_win02_01"));
		}
		frame(lua_state, 21.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_simon_win02"));
		}
		frame(lua_state, 71.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_02"));
		}
		frame(lua_state, 118.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_03"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0, *VOICE_EU_EN)){;
		frame(lua_state, 18.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_simon_win02_01"));
		}
		frame(lua_state, 21.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_simon_win02"));
		}
		frame(lua_state, 71.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_02"));
		}
		frame(lua_state, 118.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_03"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0, *VOICE_EU_FR)){;
		frame(lua_state, 18.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_simon_win02_01"));
		}
		frame(lua_state, 21.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_simon_win02"));
		}
		frame(lua_state, 71.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_02"));
		}
		frame(lua_state, 118.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_03"));
		}
	}
	else{;
	GET_VOICE_REGION(fighter, 0);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0, *VOICE_EU_IT)){;
		frame(lua_state, 18.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("se_simon_win02_01"));
		}
		frame(lua_state, 21.0);
		if is_excute(fighter) {
			PLAY_SE_NO_3D(Hash40::new("vc_simon_win02"));
		}
		frame(lua_state, 71.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_02"));
		}
		frame(lua_state, 118.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("se_simon_win02_03"));
		}
	}
}
}
}
}
}
}