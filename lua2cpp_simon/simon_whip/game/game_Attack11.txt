#[acmd_script( agent = "simon_whip", script = "game_attack11" , category = ACMD_GAME , low_priority)]
unsafe fn game_attack11 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_NONE);
		battle_object();
		methodlib::L2CValue::L2CValue(void*)();
	}
	else{;
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const(10);
set_2nd_gravity();
battle_object();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(50);
set_2nd_air_resistance();
frame(lua_state, 2.0);
if is_excute(fighter) {
	PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_COLLIDE);
}
frame(lua_state, 3.0);
if is_excute(fighter) {
	PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_MOVE);
	battle_object();
	methodlib::L2CValue::L2CValue(void*)();
}
else{;
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const();
reset_node_fix_flag_list();
battle_object();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(4, 5, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26);
set_node_fix_flag_list();
}