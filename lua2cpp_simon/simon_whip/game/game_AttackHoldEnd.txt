#[acmd_script( agent = "simon_whip", script = "game_attackholdend" , category = ACMD_GAME , low_priority)]
unsafe fn game_attackholdend (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		battle_object();
		methodlib::L2CValue::L2CValue(void*)();
	}
	else{;
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const(4);
set_2nd_gravity();
battle_object();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(40);
set_2nd_air_resistance();
PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_MOVE);
battle_object();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const();
reset_node_fix_flag_list();
battle_object();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(4, 5, 6, 11, 12, 17, 18);
set_node_fix_flag_list();
frame(lua_state, 7.0);
if is_excute(fighter) {
	PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_NONE);
	VisibilityModule::set_whole(fighter.module_accessor, false);
}
}