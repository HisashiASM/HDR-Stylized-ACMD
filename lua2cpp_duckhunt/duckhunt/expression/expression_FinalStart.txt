#[acmd_script( agent = "duckhunt", script = "expression_finalstart" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_finalstart (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		START_INFO_FLASH_EYE(fighter);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_normal"));
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	frame(lua_state, 12.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_openwing"));
	}
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attack_critical"), 0);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 54, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 36.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 45.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_normal"));
	}
	frame(lua_state, 73.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_impact"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
}