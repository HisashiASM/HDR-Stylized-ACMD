#[acmd_script( agent = "duckhunt", script = "game_finalstart" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalstart (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 0, 0, 0);
		SLOW_OPPONENT(fighter, 4, 30);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(0x119a00(false, false)){;
		frame(lua_state, 5.0);
		if is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_DUCKHUNT_GENERATE_ARTICLE_FINALDUCK);
			SlowModule::set_whole(fighter.module_accessor, 10, 0);
			FT_SET_FINAL_FEAR_FACE(fighter, 60);
			REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart.nuanmb"), false, false);
			FT_START_CUTIN(fighter);
		}
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		SlowModule::clear_whole(fighter.module_accessor);
		SlowModule::set_whole(fighter.module_accessor, 2, 0);
	}
	else{;
	frame(lua_state, 0.0);
	if is_excute(fighter) {
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_DUCKHUNT_GENERATE_ARTICLE_FINALDUCK);
		FT_START_CUTIN(fighter);
	}
}
get_value_float(*SO_VAR_FLOAT_LR);
if(0x119a00(0, 0)){;
	if is_excute(fighter) {
		camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, -10, 0);
		PostureModule::scale(fighter.module_accessor, 4, 0);
		0x119a00(1942401420, 2);
		CAM_ZOOM_IN_arg5(0, 0);
	}
	else{;
	if is_excute(fighter) {
		camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 10, 0);
		PostureModule::scale(fighter.module_accessor, 4, 0);
		0x119a00(1942401420, 2);
		CAM_ZOOM_IN_arg5(0, 0);
	}
}
}
frame(lua_state, 12.0);
if is_excute(fighter) {
SlowModule::clear_whole(fighter.module_accessor);
}
frame(lua_state, 23.0);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
if(0x119a00(false, false)){;
if is_excute(fighter) {
	SlowModule::set_whole(fighter.module_accessor, 30, 0);
}
}
if is_excute(fighter) {
ATTACK(fighter, 0, 0, Hash40::new("top"), 5.0, 80, 100, 200, 0, 17.0, 0.0, 12.0, -10.0, Some(0.0), Some(12.0), Some(28.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
}
frame(lua_state, 24.0);
if is_excute(fighter) {
SlowModule::clear_whole(fighter.module_accessor);
}
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
0x119a00(false, false);
if is_excute(fighter) {
CAM_ZOOM_OUT(fighter);
}
frame(lua_state, 26.0);
if is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
}
}