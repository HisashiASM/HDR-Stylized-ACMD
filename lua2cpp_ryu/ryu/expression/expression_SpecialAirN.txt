#[acmd_script( agent = "ryu", script = "expression_specialairn" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_specialairn (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	frame(lua_state, 11.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_N_FLAG_FAILED);
	if(0x183460(false, true)){;
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 0, false);
			ControlModule::set_rumble(fighter.module_accessor);
		}
		else{;
		WorkModule::is_flag(fighter.module_accessor, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_COMMON_FLAG_COMMAND);
		if(0x183460(false, false)){;
			if is_excute(fighter) {
				methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackm"), 0, false);
				ControlModule::set_rumble(fighter.module_accessor);
			}
			else{;
			if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_N_INT_TYPE, 0)){;
				if is_excute(fighter) {
					methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackl"), 0, false);
					ControlModule::set_rumble(fighter.module_accessor);
				}
				else{;
				if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_N_INT_TYPE, 1)){;
					if is_excute(fighter) {
						methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackll"), 0, false);
						ControlModule::set_rumble(fighter.module_accessor);
					}
				}
			}
		}
	}
}
}
}
if is_excute(fighter) {
AREA_WIND_2ND_arg10(0, 1.2, 110, 8, 0.8, -2, 8, 24, 16, 80);
}
frame(lua_state, 42.0);
if is_excute(fighter) {
AreaModule::erase_wind(fighter.module_accessor, 0);
}
frame(lua_state, 66.0);
if is_excute(fighter) {
ItemModule::set_have_item_visibility(fighter.module_accessor, true);
}
}