#[acmd_script( agent = "ryu", script = "effect_finalhit" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_finalhit (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		EffectModule::remove_post_effect_line(fighter.module_accessor, 4, true);
	}
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("handr"), 30, 30, 0, 0, 0, true);
		methodlib::L2CValue::as_hash()const();
		EffectModule::request_post_effect_line_circle(fighter.module_accessor);
		LANDING_EFFECT(fighter, 0, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		EffectModule::remove_post_effect_line(fighter.module_accessor, 2, true);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_v_smoke_a"), Hash40::new("top"), 1, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_FLIP(fighter, Hash40::new("ryu_final_shinsyoryu_model_r"), Hash40::new("ryu_final_shinsyoryu_model_l"), Hash40::new("trans"), 0, 0, 0, 0, 0, 0, 1, true, *EF_FLIP_NONE);
	}
}