#[acmd_script( agent = "link_ancientbowarrow", script = "game_stick" , category = ACMD_GAME , low_priority)]
unsafe fn game_stick (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		CAM_ZOOM_OUT_FINAL(fighter);
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x11e440(0, 0)){;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 3, 0);
			0x11e440(-872975833, 2);
			CAM_ZOOM_IN_FINAL_arg13(1, 0, -1, -10, 10, true, *WEAPON_LINK_ANCIENTBOWARROW_INSTANCE_WORK_ID_INT_HIT_OBJECT_ID, 0, 10, 0);
		}
		else{;
		if is_excute(fighter) {
			CAM_ZOOM_IN_FINAL_arg13(3, 0, 2, -1, 0, 1, -10, 10, true, *WEAPON_LINK_ANCIENTBOWARROW_INSTANCE_WORK_ID_INT_HIT_OBJECT_ID, 0, -10, 0);
		}
	}
}
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("top"), 35.0, 60, 46, 0, 102, 25.0, 0.0, 0.0, 0.0, None, None, None, 0.3, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_BOMB, *ATTACK_REGION_NONE);
	AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
}
frame(lua_state, 2.0);
if is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	CAM_ZOOM_OUT_FINAL(fighter);
}
frame(lua_state, 15.0);
if is_excute(fighter) {
	notify_event_msc_cmd(0x199c462b5d);
}
}