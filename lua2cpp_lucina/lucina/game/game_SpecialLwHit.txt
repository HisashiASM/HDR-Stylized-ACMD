#[acmd_script( agent = "lucina", script = "game_speciallwhit" , category = ACMD_GAME , low_priority)]
unsafe fn game_speciallwhit (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 0, Hash40::new("sword1"), 8.0, 361, 60, 0, 90, 5.0, 1.0, 0.0, 1.5, None, None, None, 1.4, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_SWORD);
		ATTACK(fighter, 1, 0, Hash40::new("armr"), 8.0, 361, 60, 0, 90, 5.0, 0.0, 0.0, 0.0, None, None, None, 1.4, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_SWORD);
		ATTACK(fighter, 2, 0, Hash40::new("colonells"), 8.0, 361, 60, 0, 90, 5.0, 0.0, 0.0, 0.0, None, None, None, 1.4, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_SWORD);
		ATTACK(fighter, 3, 0, Hash40::new("sword1"), 8.0, 361, 60, 0, 90, 5.0, 1.0, 0.0, 7.0, None, None, None, 1.4, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_SWORD);
		AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
		AttackModule::set_force_reaction(fighter.module_accessor, 1, true, false);
		AttackModule::set_force_reaction(fighter.module_accessor, 2, true, false);
		AttackModule::set_force_reaction(fighter.module_accessor, 3, true, false);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_MARTH_STATUS_SPECIAL_LW_FLAG_SPECIAL_EFFECT);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(0, Hash40::new("se_lucina_criticalhit"));
			AttackModule::set_optional_hit_sound(fighter.module_accessor);
			methodlib::L2CValue::as_hash()const(1, Hash40::new("se_lucina_criticalhit"));
			AttackModule::set_optional_hit_sound(fighter.module_accessor);
			methodlib::L2CValue::as_hash()const(2, Hash40::new("se_lucina_criticalhit"));
			AttackModule::set_optional_hit_sound(fighter.module_accessor);
			methodlib::L2CValue::as_hash()const(3, Hash40::new("se_lucina_criticalhit"));
			AttackModule::set_optional_hit_sound(fighter.module_accessor);
		}
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
	}
}