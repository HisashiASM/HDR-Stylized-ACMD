#[acmd_script( agent = "falco", script = "effect_speciallw" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_speciallw (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
		EFFECT_FLW_POS(fighter, Hash40::new("falco_ref_loop"), Hash40::new("reflector"), 1.4, -0.6, 0, 0, 0, 0, 1, true);
		EffectModule::preset_limit_num(fighter.module_accessor, 2);
		EFFECT_FOLLOW(fighter, Hash40::new("falco_ref_flash"), Hash40::new("reflector"), 1.4, -0.6, 0, 0, 0, 0, 1, true);
		FLASH(fighter, 1, 1, 1, 0.627);
	}
	frame(lua_state, 3.0);
	if is_excute(fighter) {
		FLASH(fighter, 0, 1, 1, 0.431);
		FLASH_FRM(fighter, 20, 0, 0.706, 0.392, 0);
	}
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		EFFECT_FLW_POS(fighter, Hash40::new("falco_ref_start"), Hash40::new("reflector"), 1.4, -0.6, 0, 0, 0, 0, 1, true);
	}
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		COL_NORMAL(fighter);
	}
	frame(lua_state, 32.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("falco_ref_loop"), false, false);
		EFFECT_OFF_KIND(fighter, Hash40::new("falco_ref_ref"), false, false);
		EFFECT_OFF_KIND(fighter, Hash40::new("falco_ref_flash"), true, false);
		EFFECT_FLW_POS(fighter, Hash40::new("sys_flash"), Hash40::new("reflector"), 1.4, -0.6, -0.5, 0, 0, 0, 0.5, true);
	}
}