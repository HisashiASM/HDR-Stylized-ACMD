#[acmd_script( agent = "littlemac", script = "expression_finaldashend" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_finaldashend (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, false);
	}
	frame(lua_state, 20.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, false);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, true);
	}
	frame(lua_state, 22.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, false);
	}
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, false);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, true);
	}
	frame(lua_state, 26.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, false);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 28.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, false);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, true);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, false);
	}
	frame(lua_state, 32.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, false);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, true);
	}
	frame(lua_state, 34.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, false);
	}
	frame(lua_state, 38.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, false);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, true);
	}
	frame(lua_state, 42.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, false);
	}
	frame(lua_state, 46.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, false);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, true);
	}
	frame(lua_state, 50.0);
	if is_excute(fighter) {
		VisibilityModule::set_whole(fighter.module_accessor, true);
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_LITTLEMACG, false);
	}
}