#[acmd_script( agent = "littlemac", script = "effect_attacks4lw" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attacks4lw (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, 2, 2, 4, 0, 0, 0, true);
	}
	frame(lua_state, 14.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 13.0);
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x1462c0(288, 0)){;
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("littlemac_attack_arc"), Hash40::new("top"), 0, 7.2, -3, -160, -136, 156, 0.8, false);
			LAST_EFFECT_SET_RATE(fighter, 1.4);
		}
		else{;
		if is_excute(fighter) {
			EFFECT_FOLLOW(fighter, Hash40::new("littlemac_attack_arc"), Hash40::new("top"), 0, 7, -1, -150, -136, 165, 0.8, false);
			LAST_EFFECT_SET_RATE(fighter, 1.4);
		}
	}
}
frame(lua_state, 15.0);
if is_excute(fighter) {
	EFFECT(fighter, Hash40::new("sys_attack_impact"), Hash40::new("top"), 9, 4, 0, 0, 0, 0, 1.4, 0, 0, 0, 0, 0, 360, false);
}
frame(lua_state, 21.0);
if is_excute(fighter) {
	EFFECT_OFF_KIND(fighter, Hash40::new("littlemac_attack_arc"), true, true);
}
}