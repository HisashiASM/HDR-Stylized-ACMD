#[acmd_script( agent = "littlemac", script = "effect_set_glove_color" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_set_glove_color (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.6, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.4, 0.4, 0.4);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.3, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.4, 0.5);
		}
	}
}