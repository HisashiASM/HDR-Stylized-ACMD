#[acmd_script( agent = "littlemac", script = "effect_attackairlw" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attackairlw (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 3.0);
	if is_excute(fighter) {
		EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("handr"), 0, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW_ALPHA(fighter, Hash40::new("sys_attack_line"), Hash40::new("top"), -4, 11, 0, 90, 0, -4, 0.85, true, 0.2);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.6, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.4, 0.4, 0.4);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.3, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.4, 0.5);
		}
	}
	frame(0, 9);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("sys_attack_impact"), Hash40::new("top"), -4, -2, 0, 0, 0, 0, 0.9, true);
	}
}