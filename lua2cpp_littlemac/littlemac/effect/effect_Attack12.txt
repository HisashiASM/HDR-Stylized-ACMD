#[acmd_script( agent = "littlemac", script = "effect_attack12" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attack12 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("null"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
		EFFECT(fighter, Hash40::new("littlemac_attack_arc_glove_b"), Hash40::new("top"), 3, 9, 4.5, 10, 0, -30, 0.7, 0, 0, 0, 0, 0, 0, true);
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.6, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.4, 0.4, 0.4);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.3, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 0.43, 1, 0.3);
		}
	}
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){;
		if is_excute(fighter) {
			LAST_PARTICLE_SET_COLOR(fighter, 1, 0.4, 0.5);
		}
	}
	frame(0, 2);
	if is_excute(fighter) {
		EFFECT_ALPHA(fighter, Hash40::new("sys_attack_impact"), Hash40::new("top"), 13, 8, 4, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 360, false, 0.7);
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("sys_attack_line"), true, true);
	}
}