#[acmd_script( agent = "littlemac", script = "sound_win3e_us_en" , category = ACMD_SOUND , low_priority)]
unsafe fn sound_win3e_us_en (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("se_littlemac_landing03"));
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("vc_littlemac_win03"));
	}
	frame(lua_state, 35.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_dash_stop"));
	}
	frame(lua_state, 45.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_step_right_s"));
	}
	frame(lua_state, 47.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_step_left_s"));
	}
	frame(lua_state, 50.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_turn_run"));
	}
	frame(lua_state, 45.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_RESULT_FIGHTER_SINGLE);
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
	if is_excute(fighter) {
		PLAY_SE_NO_3D(Hash40::new("vc_littlemac_win_dl13"));
	}
	frame(lua_state, 76.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_step_left_m"));
	}
	frame(lua_state, 91.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_landing02"));
	}
	frame(lua_state, 109.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_landing03"));
	}
	frame(lua_state, 113.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_common_swing_04"));
	}
	frame(lua_state, 119.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_landing01"));
	}
	frame(lua_state, 125.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_special_s02"));
		PLAY_SE(fighter, Hash40::new("se_littlemac_smash_s04"));
	}
}