#[acmd_script( agent = "littlemac", script = "sound_appeallwr" , category = ACMD_SOUND , low_priority)]
unsafe fn sound_appeallwr (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	IS_RANDOM(fighter, 10);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
		frame(lua_state, 1.0);
		if is_excute(fighter) {
			PLAY_SE(fighter, Hash40::new("vc_littlemac_appeal06"));
		}
	}
	frame(lua_state, 16.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_swing_m"));
	}
	frame(lua_state, 24.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_smash_s02"));
	}
	frame(lua_state, 32.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_swing_m"));
	}
	frame(lua_state, 48.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("se_littlemac_special_l01"));
	}
	else{;
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		PLAY_SE(fighter, Hash40::new("vc_littlemac_appeal03"));
	}
}
frame(lua_state, 16.0);
if is_excute(fighter) {
	PLAY_SE(fighter, Hash40::new("se_littlemac_swing_m"));
}
frame(lua_state, 24.0);
if is_excute(fighter) {
	PLAY_SE(fighter, Hash40::new("se_littlemac_smash_s02"));
}
frame(lua_state, 32.0);
if is_excute(fighter) {
	PLAY_SE(fighter, Hash40::new("se_littlemac_swing_m"));
}
frame(lua_state, 48.0);
if is_excute(fighter) {
	PLAY_SE(fighter, Hash40::new("se_littlemac_special_l01"));
}
}