#[acmd_script( agent = "metaknight", script = "game_finalfinish" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalfinish (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		WHOLE_HIT(fighter, *HIT_STATUS_XLU);
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 0, 0, 0);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(0x12e770(false, false)){;
		get_value_float(*SO_VAR_FLOAT_LR);
		if(0x12e770(0, 0)){;
			if is_excute(fighter) {
				CAM_ZOOM_IN_arg5(2, 0, 0.8, 0, 0);
				camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 40, 0);
			}
			else{;
			if is_excute(fighter) {
				CAM_ZOOM_IN_arg5(2, 0, 0.8, 0, 0);
				camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
			}
		}
	}
}
frame(lua_state, 1.0);
FT_MOTION_RATE(fighter, 0.5);
if is_excute(fighter) {
	SET_RATE_ARTICLE(fighter, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 2);
	ArticleModule::remove(fighter.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_BUNSHIN);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_METAKNIGHT_STATUS_FINAL_FLAG_ENABLE_TRANS);
}
frame(lua_state, 5.0);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
if(0x12e770(false, false)){;
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x12e770(0, 0)){;
		if is_excute(fighter) {
			REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalfinishl.nuanmb"), true);
		}
		else{;
		if is_excute(fighter) {
			REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalfinishr.nuanmb"), true);
		}
	}
}
}
frame(lua_state, 30.0);
FT_MOTION_RATE(fighter, 1);
if is_excute(fighter) {
SET_RATE_ARTICLE(fighter, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 1);
}
frame(lua_state, 50.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x12e770(0, 0)){;
if is_excute(fighter) {
	ATTACK(fighter, 0, 2, Hash40::new("top"), 10.0, 160, 90, 0, 100, 30.0, 0.0, 3.0, -11.0, None, None, None, 100.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
	AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
}
else{;
if is_excute(fighter) {
	ATTACK(fighter, 0, 2, Hash40::new("top"), 10.0, 20, 90, 0, 100, 30.0, 0.0, 3.0, 11.0, None, None, None, 100.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
	AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
}
}
}
if is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_METAKNIGHT_STATUS_FINAL_FLAG_ATTACK_END_HIT);
}
wait(lua_state, 1.0);
if is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
SlowModule::set_whole(fighter.module_accessor, 2, 0);
}
frame(lua_state, 54.0);
FT_MOTION_RATE(fighter, 1.2);
if is_excute(fighter) {
SET_RATE_ARTICLE(fighter, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 0.833);
}
frame(lua_state, 70.0);
FT_MOTION_RATE(fighter, 0.8);
if is_excute(fighter) {
SET_RATE_ARTICLE(fighter, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 1.25);
SlowModule::clear_whole(fighter.module_accessor);
CAM_ZOOM_OUT(fighter);
}
frame(lua_state, 100.0);
if is_excute(fighter) {
ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, false);
}
}