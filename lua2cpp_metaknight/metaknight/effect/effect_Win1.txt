#[acmd_script( agent = "metaknight", script = "effect_win1" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_win1 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 59.0);
	if is_excute(fighter) {
		FOOT_EFFECT(fighter, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -5, 0, -9, 0, 20, 0, 0.5, 0, 0, 0, 0, 0, 0, true);
	}
	frame(lua_state, 62.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("metaknight_sword"), Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, true);
	}
	frame(lua_state, 63.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("metaknight_win1_trace"), Hash40::new("top"), -0.0, 0, 0, 0, 0, 0, 1, true);
	}
	frame(lua_state, 75.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("metaknight_sword"), false, false);
	}
	frame(lua_state, 127.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("sys_smash_flash_s"), Hash40::new("top"), -15, 7.2, -5.263, 0, 0, 0, 1, true);
		LAST_EFFECT_SET_RATE(fighter, 0.8);
	}
	frame(lua_state, 135.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("metaknight_slip_wind"), false, false);
	}
	frame(lua_state, 147.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("metaknight_win1_wind"), Hash40::new("trans"), 0, 0, 0, 0, 0, 0, 1, true);
	}
	frame(lua_state, 148.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_whirlwind_r"), Hash40::new("trans"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
		LAST_EFFECT_SET_RATE(fighter, 0.8);
	}
	frame(lua_state, 166.0);
	if is_excute(fighter) {
		LANDING_EFFECT(fighter, Hash40::new("sys_v_smoke_a"), Hash40::new("trans"), 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 0, false);
	}
	frame(lua_state, 168.0);
	if is_excute(fighter) {
		EFFECT_FOLLOW(fighter, Hash40::new("metaknight_win1_line"), Hash40::new("rot"), 0, 0, 0, 0, 0, 0, 1, true);
	}
	frame(lua_state, 185.0);
	if is_excute(fighter) {
		EFFECT_OFF_KIND(fighter, Hash40::new("metaknight_win1_wind"), false, false);
	}
}