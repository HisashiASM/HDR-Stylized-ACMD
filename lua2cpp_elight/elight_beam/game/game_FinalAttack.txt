#[acmd_script( agent = "elight_beam", script = "game_finalattack" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalattack (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		ATTACK(fighter, 0, 1, Hash40::new("top"), 10.0, 45, 83, 0, 100, 18.0, 0.0, -85.0, 0.0, Some(0.0), Some(-125.0), Some(0.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_HEAVY, *ATTACK_REGION_MAGIC);
		ATTACK(fighter, 1, 1, Hash40::new("top"), 6.0, 38, 68, 0, 70, 18.0, 0.0, 0.0, 0.0, Some(0.0), Some(-125.0), Some(0.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_HEAVY, *ATTACK_REGION_MAGIC);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, false);
		AttackModule::set_final_finish_cut_in(fighter.module_accessor, 1, true, true, -1, false);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
	}
}