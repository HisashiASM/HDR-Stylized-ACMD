#[acmd_script( agent = "richter", script = "expression_visualscene02" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_visualscene02 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackm"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_attackm"), 0);
	}
	frame(lua_state, 44.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 6, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_nohitl"), 6);
	}
	frame(lua_state, 51.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 6, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_nohitl"), 6);
	}
	frame(lua_state, 58.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 6, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_nohitl"), 6);
	}
	frame(lua_state, 65.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_nohitl"), 0);
	}
}