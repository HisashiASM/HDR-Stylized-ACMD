#[acmd_script( agent = "richter", script = "effect_attack100" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attack100 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		EFFECT_ALPHA(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), 0, 11, 4, -10, 0, 145, 1, 0, 2, 1, 5, 0, 10, true, 1);
		LAST_EFFECT_SET_RATE(fighter, 2);
		EFFECT(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), 0, 12, 12, 195, -20, -220, 0.6, 0, 2, 1, 5, 0, 10, true);
	}
	wait(lua_state, 3.0);
	if is_excute(fighter) {
		EFFECT_ALPHA(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), 0, 8, 4, 12, -10, 35, 1, 0, 2, 1, 5, 0, 10, true, 0.6);
		LAST_EFFECT_SET_RATE(fighter, 2);
	}
	wait(lua_state, 3.0);
	if is_excute(fighter) {
		EFFECT_ALPHA(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), -4, 9, 5, -10, -18, -131, 1, 0, 2, 1, 5, 0, 10, true, 1);
		LAST_EFFECT_SET_RATE(fighter, 2);
		EFFECT(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), -3, 12, 12, 160, -57, -122, 0.6, 0, 2, 1, 5, 0, 10, true);
	}
	wait(lua_state, 3.0);
	if is_excute(fighter) {
		EFFECT_ALPHA(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), 1, 11, 4, 9, -18, 38, 1, 0, 2, 1, 5, 0, 10, true, 0.6);
		LAST_EFFECT_SET_RATE(fighter, 2);
		EFFECT(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), 0, 12, 12, 195, -20, -220, 0.6, 0, 2, 1, 5, 0, 10, true);
	}
	wait(lua_state, 3.0);
	if is_excute(fighter) {
		EFFECT_ALPHA(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), 0, 7, 5, 7, -8, -227, 1, 0, 2, 1, 5, 0, 10, true, 1);
		LAST_EFFECT_SET_RATE(fighter, 2);
	}
	wait(lua_state, 3.0);
	if is_excute(fighter) {
		EFFECT_ALPHA(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), 6, 6, 5, 0, -16, -35, 1, 0, 2, 1, 5, 0, 10, true, 1);
		LAST_EFFECT_SET_RATE(fighter, 2);
		EFFECT(fighter, Hash40::new("richter_whip_trace"), Hash40::new("top"), -3, 12, 12, 160, -57, -122, 0.6, 0, 2, 1, 5, 0, 10, true);
	}
	wait(lua_state, 2.0);
}