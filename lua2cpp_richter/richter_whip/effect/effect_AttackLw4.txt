#[acmd_script( agent = "richter_whip", script = "effect_attacklw4" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_attacklw4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 12.0);
	if is_excute(fighter) {
		AFTER_IMAGE4_ON_arg29(Hash40::new("tex_richter_whip1"), Hash40::new("tex_richter_whip2"), 3, Hash40::new("hookshot14"), -5, 0, 1, Hash40::new("hookshot14"), 10, 0, 1, true, Hash40::new("null"), Hash40::new("hookshot11"), 0, 0, 0, 0, 0, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 2, 0.2);
		EFFECT_FOLLOW_ALPHA(fighter, Hash40::new("richter_whip_light"), Hash40::new("hookshot23"), 0, 0, 0, 0, 0, 0, 1.2, false, 0.65);
		EFFECT_FOLLOW_ALPHA(fighter, Hash40::new("richter_whip_light"), Hash40::new("hookshot18"), 0, 0, 0, 0, 0, 0, 1.2, false, 0.65);
		EFFECT_FOLLOW_ALPHA(fighter, Hash40::new("richter_whip_light"), Hash40::new("hookshot14"), 0, 0, 0, 0, 0, 0, 1.2, false, 0.65);
		EFFECT_FOLLOW_ALPHA(fighter, Hash40::new("richter_whip_light"), Hash40::new("hookshot10"), 0, 0, 0, 0, 0, 0, 1.2, false, 0.65);
		EFFECT_FOLLOW_ALPHA(fighter, Hash40::new("richter_whip_light"), Hash40::new("hookshot4"), 0, 0, 0, 0, 0, 0, 1.2, false, 0.65);
		EFFECT_FOLLOW(fighter, Hash40::new("richter_whip_flash_top"), Hash40::new("hookshot27"), 1, 0, 0, 0, 0, 0, 1, true);
	}
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		AFTER_IMAGE4_ON_arg29(Hash40::new("tex_richter_whip1"), Hash40::new("tex_richter_whip2"), 4, Hash40::new("hookshot5"), -5, 0, 1, Hash40::new("hookshot5"), 5, 0, 1, true, Hash40::new("null"), Hash40::new("hookshot2"), 0, 0, 0, 0, 0, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 2, 0.2);
		battle_object();
		methodlib::L2CValue::L2CValue(void*)();
	}
	else{;
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const(true);
set_chain_2_visibility();
frame(lua_state, 21.0);
if is_excute(fighter) {
	battle_object();
	methodlib::L2CValue::L2CValue(void*)();
}
else{;
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const(false);
set_chain_2_visibility();
frame(lua_state, 23.0);
if is_excute(fighter) {
AFTER_IMAGE_OFF(fighter, 2);
}
}