#[acmd_script( agent = "samus_cshot", script = "sound_shoot" , category = ACMD_SOUND , low_priority)]
unsafe fn sound_shoot (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 0.0);
	if is_excute(fighter) {
		STOP_SE(fighter, Hash40::new("se_samus_special_n01"));
	}
	WorkModule::get_float(fighter.module_accessor, *WEAPON_SAMUS_CSHOT_INSTANCE_WORK_ID_FLOAT_CHARGE);
	if(methodlib::L2CValue::operator<=(lib::L2CValueconst&)const(256215000, 0.25)){;
		if is_excute(fighter) {
			PLAY_SE_REMAIN(fighter, Hash40::new("se_samus_special_n02"));
		}
		else{;
		WorkModule::get_float(fighter.module_accessor, *WEAPON_SAMUS_CSHOT_INSTANCE_WORK_ID_FLOAT_CHARGE);
		if(methodlib::L2CValue::operator<=(lib::L2CValueconst&)const(256215000, 0.625)){;
			if is_excute(fighter) {
				PLAY_SE_REMAIN(fighter, Hash40::new("se_samus_special_n03"));
			}
			else{;
			WorkModule::get_float(fighter.module_accessor, *WEAPON_SAMUS_CSHOT_INSTANCE_WORK_ID_FLOAT_CHARGE);
			if(methodlib::L2CValue::operator<=(lib::L2CValueconst&)const(256215000, 0.875)){;
				if is_excute(fighter) {
					PLAY_SE_REMAIN(fighter, Hash40::new("se_samus_special_n04"));
				}
				else{;
				if is_excute(fighter) {
					PLAY_SE_REMAIN(fighter, Hash40::new("se_samus_special_n05"));
				}
			}
		}
	}
}
}
}
}