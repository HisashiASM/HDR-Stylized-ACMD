#[acmd_script( agent = "samus", script = "expression_attacks4lw" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attacks4lw (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 2.0);
	execute(2);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
	}
	frame(lua_state, 5.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_hide_gun"));
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_SAMUS_GENERATE_ARTICLE_GUN);
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_SAMUS_GENERATE_ARTICLE_GUN, true);
		methodlib::L2CValue::as_hash()const(*FIGHTER_SAMUS_GENERATE_ARTICLE_GUN, Hash40::new("s4s"));
		ArticleModule::change_motion(fighter.module_accessor);
	}
	frame(lua_state, 10.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackll"), 0);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohit_explosion"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 50.0);
	if is_excute(fighter) {
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_SAMUS_GENERATE_ARTICLE_GUN);
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_normal"));
	}
}