#[acmd_script( agent = "diddy", script = "game_finalairstart" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalairstart (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 0, 0, 0);
		SLOW_OPPONENT(fighter, 4, 30);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		frame(lua_state, 10.0);
		if is_excute(fighter) {
			FT_SET_FINAL_FEAR_FACE(fighter, 60);
			REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalstart.nuanmb"), false);
		}
		else{;
		if is_excute(fighter) {
			PostureModule::scale(fighter.module_accessor, 5, 0);
			0x148390(95671436, 2.1);
			CAM_ZOOM_IN_arg5(0, 0);
			FT_START_CUTIN(fighter);
		}
	}
}
if is_excute(fighter) {
	ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_DIDDY_GENERATE_ARTICLE_BARRELJETS, false);
}
frame(lua_state, 13.0);
if is_excute(fighter) {
	ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_DIDDY_GENERATE_ARTICLE_BARRELJETS, true);
}
frame(lua_state, 25.0);
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("waist"), 1.0, 85, 50, 0, 10, 4.0, -3.0, 0.0, -5.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
	ATTACK(fighter, 1, 0, Hash40::new("waist"), 1.0, 85, 50, 0, 10, 4.0, -3.0, 0.0, 5.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
	AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
	AttackModule::set_force_reaction(fighter.module_accessor, 1, true, false);
	AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, false);
	AttackModule::set_final_finish_cut_in(fighter.module_accessor, 1, true, true, -1, false);
}
frame(lua_state, 30.0);
if is_excute(fighter) {
	CAM_ZOOM_OUT(fighter);
}
frame(lua_state, 58.0);
if is_excute(fighter) {
	AttackModule::clear(fighter.module_accessor, /*ID*/ 0);
	AttackModule::clear(fighter.module_accessor, /*ID*/ 1);
	ATTACK(fighter, 2, 0, Hash40::new("waist"), 10.0, 60, 100, 0, 75, 10.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
	AttackModule::set_force_reaction(fighter.module_accessor, 2, true, false);
	AttackModule::set_final_finish_cut_in(fighter.module_accessor, 2, true, true, -1, false);
}
}