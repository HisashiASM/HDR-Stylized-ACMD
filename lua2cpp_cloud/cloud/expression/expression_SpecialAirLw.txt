#[acmd_script( agent = "cloud", script = "expression_specialairlw" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_specialairlw (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 2.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_R, 3);
	}
	frame(lua_state, 9.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
		AREA_WIND_2ND_arg10(0, 0.2, 210, 2, 0.1, 0, 10, 26, 20, 10);
	}
	frame(lua_state, 14.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 7, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 16.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_slashll"), 0);
	}
	frame(lua_state, 22.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 7, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 27.0);
	if is_excute(fighter) {
		AREA_WIND_2ND_arg10(0, 0.2, 210, 2, 0.1, 0, 10, 26, 20, 10);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 40.0);
	if is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
}