#[acmd_script( agent = "miigunner", script = "expression_attacks4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attacks4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 3);
	}
	frame(lua_state, 6.0);
	execute(6);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_L);
	}
	frame(lua_state, 12.0);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
	}
	frame(lua_state, 17.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 0, true);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 39.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 40.0);
	if is_excute(fighter) {
		AREA_WIND_2ND_arg10(0, 2, 0, 300, 1, 32, 9, 38, 16, 30);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 45.0);
	if is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
	frame(lua_state, 63.0);
	if is_excute(fighter) {
		notify_event_msc_cmd(0x26769bd1de, -30, 30, 17);
	}
}