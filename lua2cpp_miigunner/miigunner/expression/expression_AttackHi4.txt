#[acmd_script( agent = "miigunner", script = "expression_attackhi4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackhi4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 8.0);
	execute(8);
	if is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_explosion"), 9);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 15.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_explosion"), 9);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 19.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_explosion"), 9);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 23.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_explosion"), 9);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 3, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 27.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_explosion"), 0);
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 41.0);
	if is_excute(fighter) {
		notify_event_msc_cmd(0x26769bd1de, -30, 30, 5);
	}
}