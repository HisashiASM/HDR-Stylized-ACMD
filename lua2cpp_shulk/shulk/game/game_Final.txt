#[acmd_script( agent = "shulk", script = "game_final" , category = ACMD_GAME , low_priority)]
unsafe fn game_final (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 0, 0, 0);
		SLOW_OPPONENT(fighter, 4, 45);
	}
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
	if(0x127550(false, false)){;
		frame(lua_state, 6.0);
		if is_excute(fighter) {
			FT_SET_FINAL_FEAR_FACE(fighter, 60);
			REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
			FT_START_CUTIN(fighter);
		}
	}
	frame(lua_state, 7.0);
	if is_excute(fighter) {
		SlowModule::set_whole(fighter.module_accessor, 4, 0);
	}
	else{;
	if is_excute(fighter) {
		PostureModule::scale(fighter.module_accessor, 3, 0);
		0x127550(1343514934, 2.1);
		CAM_ZOOM_IN_arg5(0, 0);
		FT_START_CUTIN(fighter);
	}
}
frame(lua_state, 19.0);
if is_excute(fighter) {
	SlowModule::clear_whole(fighter.module_accessor);
}
frame(lua_state, 20.0);
if is_excute(fighter) {
	ATTACK(fighter, 0, 0, Hash40::new("top"), 3.0, 80, 100, 200, 0, 18.0, 0.0, 12.0, 25.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
	ATTACK(fighter, 1, 0, Hash40::new("top"), 3.0, 80, 100, 200, 0, 7.0, 0.0, 2.0, 7.0, Some(0.0), Some(10.0), Some(7.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
	AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
}
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
0x127550(false, false);
if is_excute(fighter) {
	CAM_ZOOM_OUT(fighter);
}
frame(lua_state, 28.0);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_SHULK_STATUS_WORK_ID_FLAG_FINAL_SUCCESS);
if(0x127550(false, true)){;
	if is_excute(fighter) {
		AttackModule::clear_all(fighter.module_accessor);
	}
}
frame(lua_state, 30.0);
if is_excute(fighter) {
	FILL_SCREEN_MODEL_COLOR(fighter, 1, 50, 0.3, 0.3, 0.3, 1, 1, 1, 0.1, 1, EffectScreenLayer:*GROUND, *EFFECT_SCREEN_PRIO_FINAL);
	FILL_SCREEN_MODEL_COLOR(fighter, 0, 20, 0.3, 0.3, 0.3, -0.6, -0.6, -0.6, 0.4, 1, EffectScreenLayer:*CHAR, *EFFECT_SCREEN_PRIO_FINAL);
}
else{;
frame(lua_state, 28.0);
if is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
}
}
}