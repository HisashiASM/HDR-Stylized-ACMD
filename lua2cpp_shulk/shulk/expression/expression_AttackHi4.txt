#[acmd_script( agent = "shulk", script = "expression_attackhi4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackhi4 (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(lua_state, 1.0);
	if is_excute(fighter) {
		VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_monad_hand"));
	}
	frame(lua_state, 11.0);
	execute(11);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
	if(0x127550(false, true)){;
		if is_excute(fighter) {
			ItemModule::set_have_item_visibility(fighter.module_accessor, false);
			slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
		}
	}
	frame(lua_state, 16.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 10, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
	}
	frame(lua_state, 28.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		AREA_WIND_2ND_arg10(0, 2, 145, 200, 0.5, -5, 8, 20, 20, 80);
		RUMBLE_HIT(fighter, Hash40::new("rbkind_piercel"), 0);
	}
	frame(lua_state, 45.0);
	if is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
	frame(lua_state, 70.0);
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, true);
	}
}