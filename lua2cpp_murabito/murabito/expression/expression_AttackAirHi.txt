#[acmd_script( agent = "murabito", script = "expression_attackairhi" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackairhi (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	frame(lua_state, 2.0);
	if(0x13aec0(*FIGHTER_MURABITO_INSTANCE_WORK_ID_INT_TURNIP_NUM, 1)){;
		if is_excute(fighter) {
			VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("item"), Hash40::new("item_turnip_1"));
		}
	}
	frame(lua_state, 4.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(lua_state, 6.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 0);
	}
	else{;
	if(0x13aec0(*FIGHTER_MURABITO_INSTANCE_WORK_ID_INT_TURNIP_NUM, 2)){;
		if is_excute(fighter) {
			VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("item"), Hash40::new("item_turnip_2"));
		}
		frame(lua_state, 4.0);
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
			ControlModule::set_rumble(fighter.module_accessor);
		}
		frame(lua_state, 6.0);
		if is_excute(fighter) {
			RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
		}
		else{;
		if is_excute(fighter) {
			VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("item"), Hash40::new("item_turnip_3"));
		}
		frame(lua_state, 4.0);
		if is_excute(fighter) {
			methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
			ControlModule::set_rumble(fighter.module_accessor);
		}
		frame(lua_state, 6.0);
		if is_excute(fighter) {
			RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
		}
	}
}
}
frame(lua_state, 38.0);
if is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("item"), Hash40::new("item_none"));
}
}