#[acmd_script( agent = "murabito", script = "game_catch" , category = ACMD_GAME , low_priority)]
unsafe fn game_catch (fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	frame(lua_state, 13.0);
	if is_excute(fighter) {
		GrabModule::set_rebound(fighter.module_accessor, /*CanCatchRebound*/ true);
	}
	frame(lua_state, 14.0);
	if is_excute(fighter) {
		CATCH(fighter, 0, Hash40::new("top"), 5.0, 0.0, 5.5, 4.0, Some(0.0), Some(5.5), Some(14.0), *FIGHTER_STATUS_KIND_CAPTURE_PULLED, *COLLISION_SITUATION_MASK_G);
		CATCH(fighter, 1, Hash40::new("top"), 2.5, 0.0, 5.5, 1.5, Some(0.0), Some(5.5), Some(16.5), *FIGHTER_STATUS_KIND_CAPTURE_PULLED, *COLLISION_SITUATION_MASK_A);
		ENABLE_AREA(fighter, *FIGHTER_MURABITO_AREA_KIND_SEARCH_ITEM_CATCH);
	}
	methodlua2cpp::L2CFighterAnimcmdGameCommon::game_CaptureCutCommon()();
	wait(lua_state, 3.0);
	if is_excute(fighter) {
		grab(*MA_MSC_CMD_GRAB_CLEAR_ALL);
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_CATCH_FLAG_CATCH_WAIT);
		GrabModule::set_rebound(fighter.module_accessor, /*CanCatchRebound*/ false);
	}
	wait(lua_state, 2.0);
	if is_excute(fighter) {
		UNABLE_AREA(fighter, *FIGHTER_MURABITO_AREA_KIND_SEARCH_ITEM_CATCH);
	}
	frame(lua_state, 43.0);
	if is_excute(fighter) {
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_MURABITO_GENERATE_ARTICLE_BUTTERFLYNET);
	}
}